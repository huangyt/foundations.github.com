// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "Config.h"
#include "ftp.h"
#include "FTPClient.h"
#include "FTPFileImpl.h"
#include "FTPFileSystem.h"
#include "FTPURLConnection.h"
#include "FTPUrlStreamHandler.h"

namespace acdk { 
namespace net { 
namespace ftp { 

::acdk::lang::dmi::ClazzSuperInfo _FTPFileSystemFactory_super___acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _FTPFileSystemFactory_super_acdk__io__FileSystemFactory =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  acdk::io::FileSystemFactory::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FTPFileSystemFactory_interfaces[] =
{
  &_FTPFileSystemFactory_super___acdk__lang__Object,
  &_FTPFileSystemFactory_super_acdk__io__FileSystemFactory,
  0
};

::acdk::lang::dmi::ClazzInfo* FTPFileSystemFactory::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "FTPFileSystemFactory", // name of class
  -1, // hashCode
  "acdk/net/ftp", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _FTPFileSystemFactory_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    FTPFileSystemFactory::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_FTPFileSystemFactory(FTPFileSystemFactory::clazzInfo());

::acdk::lang::RClass
FTPFileSystemFactory::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
FTPFileSystemFactory::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace net
} // namespace ftp


namespace acdk { 
namespace net { 
namespace ftp { 

::acdk::lang::dmi::ClazzSuperInfo _FTPURLStreamHandler_super_acdk__net__URLStreamHandler =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::net::URLStreamHandler::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FTPURLStreamHandler_interfaces[] =
{
  &_FTPURLStreamHandler_super_acdk__net__URLStreamHandler,
  0
};

::acdk::lang::dmi::ClazzInfo* FTPURLStreamHandler::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "FTPURLStreamHandler", // name of class
  -1, // hashCode
  "acdk/net/ftp", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _FTPURLStreamHandler_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    FTPURLStreamHandler::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_FTPURLStreamHandler(FTPURLStreamHandler::clazzInfo());

::acdk::lang::RClass
FTPURLStreamHandler::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
FTPURLStreamHandler::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::net::, URLStreamHandler)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace net
} // namespace ftp

