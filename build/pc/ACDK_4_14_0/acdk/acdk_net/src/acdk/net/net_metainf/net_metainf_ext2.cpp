// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../net.h"
#include "../Authenticator.h"
#include "../Config.h"
#include "../ContentHandler.h"
#include "../ContentHandlerFactory.h"
#include "../DatagramPacket.h"
#include "../DatagramSocket.h"
#include "../FileNameMap.h"
#include "../FileURLConnection.h"
#include "../HeaderFieldHelper.h"
#include "../HttpURLConnection.h"
#include "../HttpURLConnectionImpl.h"
#include "../InetAddress.h"
#include "../InetSocketAddress.h"
#include "../InetURLConnection.h"
#include "../MalformedURLException.h"
#include "../MimeTypeMapper.h"
#include "../net.h"
#include "../netsysincl.h"
#include "../PasswordAuthentication.h"
#include "../ProtocolException.h"
#include "../ServerSocket.h"
#include "../Socket.h"
#include "../SocketAddress.h"
#include "../SocketException.h"
#include "../SocketImpl.h"
#include "../SocketImplFactory.h"
#include "../SocketLogConsumer.h"
#include "../SocketOptions.h"
#include "../TCPSocket.h"
#include "../TCPSocketFactory.h"
#include "../TransRateReader.h"
#include "../TransRateWriter.h"
#include "../UnknownServiceException.h"
#include "../URL.h"
#include "../URLConnection.h"
#include "../URLDecoder.h"
#include "../URLEncoder.h"
#include "../URLEncoding.h"
#include "../UrlFileSystem.h"
#include "../URLInterface.h"
#include "../URLStreamHandler.h"
#include "../URLStreamHandlerFactory.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace net { 


//static
::acdk::lang::RObject
URLEncoding_create_array(int length)
{
  return new ObjectArrayImpl<RURLEncoding>(length);
}

//static
::acdk::lang::RObject
URLEncoding_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class URLEncoding_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLEncoding_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)URLEncoding::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLEncoding_method_URLEncoding__LRURLEncoding__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new URLEncoding();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLEncoding_method_getURLEncoding__Lacdk_locale_REncoding__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)URLEncoding::getURLEncoding();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _URLEncoding_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLEncoding_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLEncoding_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLEncoding_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  URLEncoding_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  URLEncoding_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  URLEncoding_MetainfoWrapper::URLEncoding_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLEncoding_methods_URLEncoding__LRURLEncoding__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLEncoding_methods_URLEncoding__LRURLEncoding__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLEncoding_method_URLEncoding__LRURLEncoding_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "URLEncoding", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  URLEncoding::clazzInfo(), // return type
  "_0_URLEncoding", // alternative name of method
  -1, // altlabelHashCode
  URLEncoding_methods_URLEncoding__LRURLEncoding__args, // the arguments
  0, //arguments count
  URLEncoding_methods_URLEncoding__LRURLEncoding__exceptions, // the declared exceptions
  URLEncoding_MetainfoWrapper::URLEncoding_method_URLEncoding__LRURLEncoding__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLEncoding_methods_getURLEncoding__Lacdk_locale_REncoding__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLEncoding_methods_getURLEncoding__Lacdk_locale_REncoding__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLEncoding_method_getURLEncoding__Lacdk_locale_REncoding_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getURLEncoding", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::locale::REncoding::clazzInfo(), // return type
  "_1_getURLEncoding", // alternative name of method
  -1, // altlabelHashCode
  URLEncoding_methods_getURLEncoding__Lacdk_locale_REncoding__args, // the arguments
  0, //arguments count
  URLEncoding_methods_getURLEncoding__Lacdk_locale_REncoding__exceptions, // the declared exceptions
  URLEncoding_MetainfoWrapper::URLEncoding_method_getURLEncoding__Lacdk_locale_REncoding__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _URLEncoding_methods[] = 
{
  &URLEncoding_method_GetClass__L_acdk_lang_RClass_,
  &URLEncoding_method_URLEncoding__LRURLEncoding_,
  &URLEncoding_method_getURLEncoding__Lacdk_locale_REncoding_,
  0
};


struct URLEncoding_MetaInfoInitializer
{  URLEncoding_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = URLEncoding::clazzInfo();
    ci->fields =  _URLEncoding_fields;
    ci->methods =  _URLEncoding_methods;
    ci->_scopeParent = acdk_net_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
URLEncoding_MetaInfoInitializer URLEncoding_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace net


namespace acdk { 
namespace net { 


//static
::acdk::lang::RObject
UrlFileImpl_create_array(int length)
{
  return new ObjectArrayImpl<RUrlFileImpl>(length);
}

//static
::acdk::lang::RObject
UrlFileImpl_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class UrlFileImpl_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileImpl_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)UrlFileImpl::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileImpl_method_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new UrlFileImpl(::acdk::lang::dmi::castTo< RURL>(args[0], dc), ::acdk::lang::dmi::castTo< RURLConnection>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileImpl_method_UrlFileImpl_INLRURL__LRUrlFileImpl__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new UrlFileImpl(::acdk::lang::dmi::castTo< RURL>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileImpl_method_connect__LRURLConnection__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileImpl* This = dmi_cast<UrlFileImpl>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->UrlFileImpl::connect();
    else
        ret = (::acdk::lang::RObject)This->connect();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  UrlFileImpl_fields__connection_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    UrlFileImpl* This = dmi_cast<UrlFileImpl>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_connection, flags);
    else
      This->_connection = ::acdk::lang::dmi::castTo< RURLConnection>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  UrlFileImpl_fields__url_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    UrlFileImpl* This = dmi_cast<UrlFileImpl>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_url, flags);
    else
      This->_url = ::acdk::lang::dmi::castTo< RURL>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo UrlFileImpl_fields__connection = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_connection", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLConnection::clazzInfo(),
  UrlFileImpl_MetainfoWrapper::UrlFileImpl_fields__connection_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo UrlFileImpl_fields__url = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_url", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo(),
  UrlFileImpl_MetainfoWrapper::UrlFileImpl_fields__url_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _UrlFileImpl_fields[] = 
{
  &UrlFileImpl_fields__connection,
  &UrlFileImpl_fields__url,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileImpl_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileImpl_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileImpl_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_3_GetClass", // alternative name of method
  -1, // altlabelHashCode
  UrlFileImpl_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  UrlFileImpl_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  UrlFileImpl_MetainfoWrapper::UrlFileImpl_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__arg_connection = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "connection", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLConnection::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__args[] = 
{
  &UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__arg_url,
  &UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__arg_connection,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileImpl_method_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "UrlFileImpl", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  UrlFileImpl::clazzInfo(), // return type
  "_0_UrlFileImpl", // alternative name of method
  -1, // altlabelHashCode
  UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__args, // the arguments
  0, //arguments count
  UrlFileImpl_methods_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__exceptions, // the declared exceptions
  UrlFileImpl_MetainfoWrapper::UrlFileImpl_method_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileImpl_methods_UrlFileImpl_INLRURL__LRUrlFileImpl__arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileImpl_methods_UrlFileImpl_INLRURL__LRUrlFileImpl__args[] = 
{
  &UrlFileImpl_methods_UrlFileImpl_INLRURL__LRUrlFileImpl__arg_url,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileImpl_methods_UrlFileImpl_INLRURL__LRUrlFileImpl__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileImpl_method_UrlFileImpl_INLRURL__LRUrlFileImpl_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "UrlFileImpl", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  UrlFileImpl::clazzInfo(), // return type
  "_1_UrlFileImpl", // alternative name of method
  -1, // altlabelHashCode
  UrlFileImpl_methods_UrlFileImpl_INLRURL__LRUrlFileImpl__args, // the arguments
  0, //arguments count
  UrlFileImpl_methods_UrlFileImpl_INLRURL__LRUrlFileImpl__exceptions, // the declared exceptions
  UrlFileImpl_MetainfoWrapper::UrlFileImpl_method_UrlFileImpl_INLRURL__LRUrlFileImpl__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileImpl_methods_connect__LRURLConnection__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileImpl_methods_connect__LRURLConnection__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileImpl_method_connect__LRURLConnection_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "connect", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLConnection::clazzInfo(), // return type
  "_2_connect", // alternative name of method
  -1, // altlabelHashCode
  UrlFileImpl_methods_connect__LRURLConnection__args, // the arguments
  0, //arguments count
  UrlFileImpl_methods_connect__LRURLConnection__exceptions, // the declared exceptions
  UrlFileImpl_MetainfoWrapper::UrlFileImpl_method_connect__LRURLConnection__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _UrlFileImpl_methods[] = 
{
  &UrlFileImpl_method_GetClass__L_acdk_lang_RClass_,
  &UrlFileImpl_method_UrlFileImpl_INLRURL_INLRURLConnection__LRUrlFileImpl_,
  &UrlFileImpl_method_UrlFileImpl_INLRURL__LRUrlFileImpl_,
  &UrlFileImpl_method_connect__LRURLConnection_,
  0
};


struct UrlFileImpl_MetaInfoInitializer
{  UrlFileImpl_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = UrlFileImpl::clazzInfo();
    ci->fields =  _UrlFileImpl_fields;
    ci->methods =  _UrlFileImpl_methods;
    ci->_scopeParent = acdk_net_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
UrlFileImpl_MetaInfoInitializer UrlFileImpl_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace net


namespace acdk { 
namespace net { 


//static
::acdk::lang::RObject
UrlFileSystem_create_array(int length)
{
  return new ObjectArrayImpl<RUrlFileSystem>(length);
}

//static
::acdk::lang::RObject
UrlFileSystem_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class UrlFileSystem_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)UrlFileSystem::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_UrlFileSystem_INLRString__LRUrlFileSystem__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new UrlFileSystem(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_UrlFileSystem_INLRURL__LRUrlFileSystem__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new UrlFileSystem(::acdk::lang::dmi::castTo< RURL>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_file_INLRString__LRFile__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystem* This = dmi_cast<UrlFileSystem>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->UrlFileSystem::file(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->file(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_getFileImpl_INLRString__LRFileImpl__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystem* This = dmi_cast<UrlFileSystem>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->UrlFileSystem::getFileImpl(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->getFileImpl(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_getRootName__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystem* This = dmi_cast<UrlFileSystem>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->UrlFileSystem::getRootName();
    else
        ret = (::acdk::lang::RObject)This->getRootName();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_listFiles_INLRString_I_Lacdk_io_RFileArray__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystem* This = dmi_cast<UrlFileSystem>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->UrlFileSystem::listFiles(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    else
        ret = (::acdk::lang::RObject)This->listFiles(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystem_method_ownsFile_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystem* This = dmi_cast<UrlFileSystem>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->UrlFileSystem::ownsFile(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
      ret = This->ownsFile(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  UrlFileSystem_fields__rootUrl_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    UrlFileSystem* This = dmi_cast<UrlFileSystem>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_rootUrl, flags);
    else
      This->_rootUrl = ::acdk::lang::dmi::castTo< RURL>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo UrlFileSystem_fields__rootUrl = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_rootUrl", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo(),
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_fields__rootUrl_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _UrlFileSystem_fields[] = 
{
  &UrlFileSystem_fields__rootUrl,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_7_GetClass", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystem_methods_UrlFileSystem_INLRString__LRUrlFileSystem__arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_UrlFileSystem_INLRString__LRUrlFileSystem__args[] = 
{
  &UrlFileSystem_methods_UrlFileSystem_INLRString__LRUrlFileSystem__arg_url,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_UrlFileSystem_INLRString__LRUrlFileSystem__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_UrlFileSystem_INLRString__LRUrlFileSystem_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "UrlFileSystem", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  UrlFileSystem::clazzInfo(), // return type
  "_0_UrlFileSystem", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_UrlFileSystem_INLRString__LRUrlFileSystem__args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_UrlFileSystem_INLRString__LRUrlFileSystem__exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_UrlFileSystem_INLRString__LRUrlFileSystem__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystem_methods_UrlFileSystem_INLRURL__LRUrlFileSystem__arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_UrlFileSystem_INLRURL__LRUrlFileSystem__args[] = 
{
  &UrlFileSystem_methods_UrlFileSystem_INLRURL__LRUrlFileSystem__arg_url,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_UrlFileSystem_INLRURL__LRUrlFileSystem__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_UrlFileSystem_INLRURL__LRUrlFileSystem_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "UrlFileSystem", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  UrlFileSystem::clazzInfo(), // return type
  "_1_UrlFileSystem", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_UrlFileSystem_INLRURL__LRUrlFileSystem__args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_UrlFileSystem_INLRURL__LRUrlFileSystem__exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_UrlFileSystem_INLRURL__LRUrlFileSystem__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystem_methods_file_INLRString__LRFile__arg_path = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "path", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_file_INLRString__LRFile__args[] = 
{
  &UrlFileSystem_methods_file_INLRString__LRFile__arg_path,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_file_INLRString__LRFile__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_file_INLRString__LRFile_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "file", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RFile::clazzInfo(), // return type
  "_5_file", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_file_INLRString__LRFile__args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_file_INLRString__LRFile__exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_file_INLRString__LRFile__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystem_methods_getFileImpl_INLRString__LRFileImpl__arg_fqpath = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "fqpath", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_getFileImpl_INLRString__LRFileImpl__args[] = 
{
  &UrlFileSystem_methods_getFileImpl_INLRString__LRFileImpl__arg_fqpath,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_getFileImpl_INLRString__LRFileImpl__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_getFileImpl_INLRString__LRFileImpl_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getFileImpl", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RFileImpl::clazzInfo(), // return type
  "_6_getFileImpl", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_getFileImpl_INLRString__LRFileImpl__args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_getFileImpl_INLRString__LRFileImpl__exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_getFileImpl_INLRString__LRFileImpl__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_getRootName__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_getRootName__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_getRootName__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getRootName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_getRootName", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_getRootName__LRString__args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_getRootName__LRString__exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_getRootName__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__arg_directory = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "directory", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__arg_listflags = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "listflags", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__args[] = 
{
  &UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__arg_directory,
  &UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__arg_listflags,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_listFiles_INLRString_I_Lacdk_io_RFileArray_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "listFiles", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RFileArray::clazzInfo(), // return type
  "_4_listFiles", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_listFiles_INLRString_I_Lacdk_io_RFileArray__exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_listFiles_INLRString_I_Lacdk_io_RFileArray__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystem_methods_ownsFile_INLRString__Z_arg_fname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "fname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystem_methods_ownsFile_INLRString__Z_args[] = 
{
  &UrlFileSystem_methods_ownsFile_INLRString__Z_arg_fname,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystem_methods_ownsFile_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystem_method_ownsFile_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "ownsFile", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_2_ownsFile", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystem_methods_ownsFile_INLRString__Z_args, // the arguments
  0, //arguments count
  UrlFileSystem_methods_ownsFile_INLRString__Z_exceptions, // the declared exceptions
  UrlFileSystem_MetainfoWrapper::UrlFileSystem_method_ownsFile_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _UrlFileSystem_methods[] = 
{
  &UrlFileSystem_method_GetClass__L_acdk_lang_RClass_,
  &UrlFileSystem_method_UrlFileSystem_INLRString__LRUrlFileSystem_,
  &UrlFileSystem_method_UrlFileSystem_INLRURL__LRUrlFileSystem_,
  &UrlFileSystem_method_file_INLRString__LRFile_,
  &UrlFileSystem_method_getFileImpl_INLRString__LRFileImpl_,
  &UrlFileSystem_method_getRootName__LRString_,
  &UrlFileSystem_method_listFiles_INLRString_I_Lacdk_io_RFileArray_,
  &UrlFileSystem_method_ownsFile_INLRString__Z,
  0
};


struct UrlFileSystem_MetaInfoInitializer
{  UrlFileSystem_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = UrlFileSystem::clazzInfo();
    ci->fields =  _UrlFileSystem_fields;
    ci->methods =  _UrlFileSystem_methods;
    ci->_scopeParent = acdk_net_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
UrlFileSystem_MetaInfoInitializer UrlFileSystem_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace net


namespace acdk { 
namespace net { 


//static
::acdk::lang::RObject
UrlFileSystemFactory_create_array(int length)
{
  return new ObjectArrayImpl<RUrlFileSystemFactory>(length);
}

//static
::acdk::lang::RObject
UrlFileSystemFactory_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class UrlFileSystemFactory_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystemFactory_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)UrlFileSystemFactory::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystemFactory_method_UrlFileSystemFactory__LRUrlFileSystemFactory__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new UrlFileSystemFactory();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystemFactory_method_create_INLRString__LRFileSystem__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystemFactory* This = dmi_cast<UrlFileSystemFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->UrlFileSystemFactory::create(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->create(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystemFactory_method_handleFile_INLRString__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystemFactory* This = dmi_cast<UrlFileSystemFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->UrlFileSystemFactory::handleFile(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
      ret = This->handleFile(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  UrlFileSystemFactory_method_isRootFileSystem__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    UrlFileSystemFactory* This = dmi_cast<UrlFileSystemFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->UrlFileSystemFactory::isRootFileSystem();
    else
      ret = This->isRootFileSystem();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _UrlFileSystemFactory_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystemFactory_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_4_GetClass", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  UrlFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  UrlFileSystemFactory_MetainfoWrapper::UrlFileSystemFactory_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystemFactory_methods_UrlFileSystemFactory__LRUrlFileSystemFactory__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystemFactory_methods_UrlFileSystemFactory__LRUrlFileSystemFactory__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystemFactory_method_UrlFileSystemFactory__LRUrlFileSystemFactory_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "UrlFileSystemFactory", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  UrlFileSystemFactory::clazzInfo(), // return type
  "_0_UrlFileSystemFactory", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystemFactory_methods_UrlFileSystemFactory__LRUrlFileSystemFactory__args, // the arguments
  0, //arguments count
  UrlFileSystemFactory_methods_UrlFileSystemFactory__LRUrlFileSystemFactory__exceptions, // the declared exceptions
  UrlFileSystemFactory_MetainfoWrapper::UrlFileSystemFactory_method_UrlFileSystemFactory__LRUrlFileSystemFactory__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystemFactory_methods_create_INLRString__LRFileSystem__arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystemFactory_methods_create_INLRString__LRFileSystem__args[] = 
{
  &UrlFileSystemFactory_methods_create_INLRString__LRFileSystem__arg_file,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystemFactory_methods_create_INLRString__LRFileSystem__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystemFactory_method_create_INLRString__LRFileSystem_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "create", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RFileSystem::clazzInfo(), // return type
  "_3_create", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystemFactory_methods_create_INLRString__LRFileSystem__args, // the arguments
  0, //arguments count
  UrlFileSystemFactory_methods_create_INLRString__LRFileSystem__exceptions, // the declared exceptions
  UrlFileSystemFactory_MetainfoWrapper::UrlFileSystemFactory_method_create_INLRString__LRFileSystem__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo UrlFileSystemFactory_methods_handleFile_INLRString__I_arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystemFactory_methods_handleFile_INLRString__I_args[] = 
{
  &UrlFileSystemFactory_methods_handleFile_INLRString__I_arg_file,
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystemFactory_methods_handleFile_INLRString__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystemFactory_method_handleFile_INLRString__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "handleFile", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_2_handleFile", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystemFactory_methods_handleFile_INLRString__I_args, // the arguments
  0, //arguments count
  UrlFileSystemFactory_methods_handleFile_INLRString__I_exceptions, // the declared exceptions
  UrlFileSystemFactory_MetainfoWrapper::UrlFileSystemFactory_method_handleFile_INLRString__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* UrlFileSystemFactory_methods_isRootFileSystem__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* UrlFileSystemFactory_methods_isRootFileSystem__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo UrlFileSystemFactory_method_isRootFileSystem__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isRootFileSystem", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_1_isRootFileSystem", // alternative name of method
  -1, // altlabelHashCode
  UrlFileSystemFactory_methods_isRootFileSystem__Z_args, // the arguments
  0, //arguments count
  UrlFileSystemFactory_methods_isRootFileSystem__Z_exceptions, // the declared exceptions
  UrlFileSystemFactory_MetainfoWrapper::UrlFileSystemFactory_method_isRootFileSystem__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _UrlFileSystemFactory_methods[] = 
{
  &UrlFileSystemFactory_method_GetClass__L_acdk_lang_RClass_,
  &UrlFileSystemFactory_method_UrlFileSystemFactory__LRUrlFileSystemFactory_,
  &UrlFileSystemFactory_method_create_INLRString__LRFileSystem_,
  &UrlFileSystemFactory_method_handleFile_INLRString__I,
  &UrlFileSystemFactory_method_isRootFileSystem__Z,
  0
};


struct UrlFileSystemFactory_MetaInfoInitializer
{  UrlFileSystemFactory_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = UrlFileSystemFactory::clazzInfo();
    ci->fields =  _UrlFileSystemFactory_fields;
    ci->methods =  _UrlFileSystemFactory_methods;
    ci->_scopeParent = acdk_net_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
UrlFileSystemFactory_MetaInfoInitializer UrlFileSystemFactory_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace net


namespace acdk { 
namespace net { 

using namespace acdk::lang;
using namespace acdk::io;

//static
::acdk::lang::RObject
URLInterface_create_array(int length)
{
  return new ObjectArrayImpl<RURLInterface>(length);
}

//static
::acdk::lang::RObject
URLInterface_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class URLInterface_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)URLInterface::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getContent__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->getContent();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getFile__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->getFile();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getHost__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->getHost();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getPassword__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->getPassword();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getPort__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
  ret = This->getPort();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getProtocol__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->getProtocol();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getRef__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->getRef();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_getUser__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->getUser();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_openStream__LRReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->openStream();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_sameFile_INLRURLInterface__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
  ret = This->sameFile(::acdk::lang::dmi::castTo< RURLInterface>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLInterface_method_toExternalForm__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLInterface* This = dmi_cast<URLInterface>(This_);
    ret = (::acdk::lang::RObject)This->toExternalForm();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _URLInterface_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_b_GetClass", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  URLInterface_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getContent__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getContent__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getContent__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getContent", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_0_getContent", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getContent__LRObject__args, // the arguments
  0, //arguments count
  URLInterface_methods_getContent__LRObject__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getContent__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getFile__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getFile__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getFile__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getFile", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_1_getFile", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getFile__LRString__args, // the arguments
  0, //arguments count
  URLInterface_methods_getFile__LRString__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getFile__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getHost__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getHost__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getHost__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getHost", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_2_getHost", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getHost__LRString__args, // the arguments
  0, //arguments count
  URLInterface_methods_getHost__LRString__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getHost__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getPassword__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getPassword__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getPassword__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getPassword", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_6_getPassword", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getPassword__LRString__args, // the arguments
  0, //arguments count
  URLInterface_methods_getPassword__LRString__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getPassword__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getPort__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getPort__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getPort__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getPort", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_3_getPort", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getPort__I_args, // the arguments
  0, //arguments count
  URLInterface_methods_getPort__I_exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getPort__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getProtocol__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getProtocol__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getProtocol__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getProtocol", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_4_getProtocol", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getProtocol__LRString__args, // the arguments
  0, //arguments count
  URLInterface_methods_getProtocol__LRString__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getProtocol__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getRef__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getRef__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getRef__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getRef", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_7_getRef", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getRef__LRString__args, // the arguments
  0, //arguments count
  URLInterface_methods_getRef__LRString__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getRef__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_getUser__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_getUser__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_getUser__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getUser", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_5_getUser", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_getUser__LRString__args, // the arguments
  0, //arguments count
  URLInterface_methods_getUser__LRString__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_getUser__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_openStream__LRReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_openStream__LRReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_openStream__LRReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "openStream", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo(), // return type
  "_8_openStream", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_openStream__LRReader__args, // the arguments
  0, //arguments count
  URLInterface_methods_openStream__LRReader__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_openStream__LRReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLInterface_methods_sameFile_INLRURLInterface__Z_arg_other = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "other", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLInterface::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_sameFile_INLRURLInterface__Z_args[] = 
{
  &URLInterface_methods_sameFile_INLRURLInterface__Z_arg_other,
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_sameFile_INLRURLInterface__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_sameFile_INLRURLInterface__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "sameFile", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_9_sameFile", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_sameFile_INLRURLInterface__Z_args, // the arguments
  0, //arguments count
  URLInterface_methods_sameFile_INLRURLInterface__Z_exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_sameFile_INLRURLInterface__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLInterface_methods_toExternalForm__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLInterface_methods_toExternalForm__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLInterface_method_toExternalForm__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toExternalForm", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_a_toExternalForm", // alternative name of method
  -1, // altlabelHashCode
  URLInterface_methods_toExternalForm__LRString__args, // the arguments
  0, //arguments count
  URLInterface_methods_toExternalForm__LRString__exceptions, // the declared exceptions
  URLInterface_MetainfoWrapper::URLInterface_method_toExternalForm__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _URLInterface_methods[] = 
{
  &URLInterface_method_GetClass__L_acdk_lang_RClass_,
  &URLInterface_method_getContent__LRObject_,
  &URLInterface_method_getFile__LRString_,
  &URLInterface_method_getHost__LRString_,
  &URLInterface_method_getPassword__LRString_,
  &URLInterface_method_getPort__I,
  &URLInterface_method_getProtocol__LRString_,
  &URLInterface_method_getRef__LRString_,
  &URLInterface_method_getUser__LRString_,
  &URLInterface_method_openStream__LRReader_,
  &URLInterface_method_sameFile_INLRURLInterface__Z,
  &URLInterface_method_toExternalForm__LRString_,
  0
};


struct URLInterface_MetaInfoInitializer
{  URLInterface_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = URLInterface::clazzInfo();
    ci->fields =  _URLInterface_fields;
    ci->methods =  _URLInterface_methods;
    ci->_scopeParent = acdk_net_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
URLInterface_MetaInfoInitializer URLInterface_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace net


namespace acdk { 
namespace net { 

using namespace acdk::lang;
using namespace acdk::util;

//static
::acdk::lang::RObject
URLStreamHandler_create_array(int length)
{
  return new ObjectArrayImpl<RURLStreamHandler>(length);
}

//static
::acdk::lang::RObject
URLStreamHandler_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class URLStreamHandler_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandler_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)URLStreamHandler::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandler_method_createInstance__LRURLStreamHandler__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLStreamHandler* This = dmi_cast<URLStreamHandler>(This_);
    ret = (::acdk::lang::RObject)This->createInstance();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandler_method_openConnection_INLRURL__LRURLConnection__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLStreamHandler* This = dmi_cast<URLStreamHandler>(This_);
    ret = (::acdk::lang::RObject)This->openConnection(::acdk::lang::dmi::castTo< RURL>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandler_method_parseURL_INLRURL_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLStreamHandler* This = dmi_cast<URLStreamHandler>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->URLStreamHandler::parseURL(::acdk::lang::dmi::castTo< RURL>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    else
        This->parseURL(::acdk::lang::dmi::castTo< RURL>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandler_method_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLStreamHandler* This = dmi_cast<URLStreamHandler>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->URLStreamHandler::setURL(::acdk::lang::dmi::castTo< RURL>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc), ::acdk::lang::dmi::castTo< RString>(args[2], dc), ::acdk::lang::dmi::castTo< int>(args[3], dc), ::acdk::lang::dmi::castTo< RString>(args[4], dc), ::acdk::lang::dmi::castTo< RString>(args[5], dc), ::acdk::lang::dmi::castTo< RString>(args[6], dc), ::acdk::lang::dmi::castTo< RString>(args[7], dc));
    else
        This->setURL(::acdk::lang::dmi::castTo< RURL>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc), ::acdk::lang::dmi::castTo< RString>(args[2], dc), ::acdk::lang::dmi::castTo< int>(args[3], dc), ::acdk::lang::dmi::castTo< RString>(args[4], dc), ::acdk::lang::dmi::castTo< RString>(args[5], dc), ::acdk::lang::dmi::castTo< RString>(args[6], dc), ::acdk::lang::dmi::castTo< RString>(args[7], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandler_method_toExternalForm_INLRURL__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLStreamHandler* This = dmi_cast<URLStreamHandler>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->URLStreamHandler::toExternalForm(::acdk::lang::dmi::castTo< RURL>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->toExternalForm(::acdk::lang::dmi::castTo< RURL>(args[0], dc));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _URLStreamHandler_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandler_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandler_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandler_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_6_GetClass", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandler_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  URLStreamHandler_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  URLStreamHandler_MetainfoWrapper::URLStreamHandler_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandler_methods_URLStreamHandler__LRURLStreamHandler__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandler_methods_URLStreamHandler__LRURLStreamHandler__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandler_method_URLStreamHandler__LRURLStreamHandler_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "URLStreamHandler", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  URLStreamHandler::clazzInfo(), // return type
  "_0_URLStreamHandler", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandler_methods_URLStreamHandler__LRURLStreamHandler__args, // the arguments
  0, //arguments count
  URLStreamHandler_methods_URLStreamHandler__LRURLStreamHandler__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandler_methods_createInstance__LRURLStreamHandler__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandler_methods_createInstance__LRURLStreamHandler__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandler_method_createInstance__LRURLStreamHandler_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createInstance", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLStreamHandler::clazzInfo(), // return type
  "_4_createInstance", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandler_methods_createInstance__LRURLStreamHandler__args, // the arguments
  0, //arguments count
  URLStreamHandler_methods_createInstance__LRURLStreamHandler__exceptions, // the declared exceptions
  URLStreamHandler_MetainfoWrapper::URLStreamHandler_method_createInstance__LRURLStreamHandler__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_openConnection_INLRURL__LRURLConnection__arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandler_methods_openConnection_INLRURL__LRURLConnection__args[] = 
{
  &URLStreamHandler_methods_openConnection_INLRURL__LRURLConnection__arg_url,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandler_methods_openConnection_INLRURL__LRURLConnection__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandler_method_openConnection_INLRURL__LRURLConnection_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "openConnection", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLConnection::clazzInfo(), // return type
  "_1_openConnection", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandler_methods_openConnection_INLRURL__LRURLConnection__args, // the arguments
  0, //arguments count
  URLStreamHandler_methods_openConnection_INLRURL__LRURLConnection__exceptions, // the declared exceptions
  URLStreamHandler_MetainfoWrapper::URLStreamHandler_method_openConnection_INLRURL__LRURLConnection__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_arg_url_string = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url_string", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_args[] = 
{
  &URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_arg_url,
  &URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_arg_url_string,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandler_method_parseURL_INLRURL_INLRString__V = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parseURL", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_parseURL", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_args, // the arguments
  0, //arguments count
  URLStreamHandler_methods_parseURL_INLRURL_INLRString__V_exceptions, // the declared exceptions
  URLStreamHandler_MetainfoWrapper::URLStreamHandler_method_parseURL_INLRURL_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_protocol = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "protocol", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_host = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "host", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_port = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "port", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_user = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "user", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_password = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "password", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_anchor = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "anchor", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_args[] = 
{
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_url,
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_protocol,
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_host,
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_port,
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_user,
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_password,
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_file,
  &URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_arg_anchor,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandler_method_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setURL", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_setURL", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_args, // the arguments
  0, //arguments count
  URLStreamHandler_methods_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_exceptions, // the declared exceptions
  URLStreamHandler_MetainfoWrapper::URLStreamHandler_method_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandler_methods_toExternalForm_INLRURL__LRString__arg_url = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "url", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURL::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandler_methods_toExternalForm_INLRURL__LRString__args[] = 
{
  &URLStreamHandler_methods_toExternalForm_INLRURL__LRString__arg_url,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandler_methods_toExternalForm_INLRURL__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandler_method_toExternalForm_INLRURL__LRString_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toExternalForm", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_toExternalForm", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandler_methods_toExternalForm_INLRURL__LRString__args, // the arguments
  0, //arguments count
  URLStreamHandler_methods_toExternalForm_INLRURL__LRString__exceptions, // the declared exceptions
  URLStreamHandler_MetainfoWrapper::URLStreamHandler_method_toExternalForm_INLRURL__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _URLStreamHandler_methods[] = 
{
  &URLStreamHandler_method_GetClass__L_acdk_lang_RClass_,
  &URLStreamHandler_method_URLStreamHandler__LRURLStreamHandler_,
  &URLStreamHandler_method_createInstance__LRURLStreamHandler_,
  &URLStreamHandler_method_openConnection_INLRURL__LRURLConnection_,
  &URLStreamHandler_method_parseURL_INLRURL_INLRString__V,
  &URLStreamHandler_method_setURL_INLRURL_INLRString_INLRString_IINLRString_INLRString_INLRString_INLRString__V,
  &URLStreamHandler_method_toExternalForm_INLRURL__LRString_,
  0
};


struct URLStreamHandler_MetaInfoInitializer
{  URLStreamHandler_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = URLStreamHandler::clazzInfo();
    ci->fields =  _URLStreamHandler_fields;
    ci->methods =  _URLStreamHandler_methods;
    ci->_scopeParent = acdk_net_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
URLStreamHandler_MetaInfoInitializer URLStreamHandler_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace net


namespace acdk { 
namespace net { 


//static
::acdk::lang::RObject
URLStreamHandlerFactory_create_array(int length)
{
  return new ObjectArrayImpl<RURLStreamHandlerFactory>(length);
}

//static
::acdk::lang::RObject
URLStreamHandlerFactory_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class URLStreamHandlerFactory_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandlerFactory_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)URLStreamHandlerFactory::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandlerFactory_method_createURLStreamHandler_INLRString__LRURLStreamHandler__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLStreamHandlerFactory* This = dmi_cast<URLStreamHandlerFactory>(This_);
    ret = (::acdk::lang::RObject)This->createURLStreamHandler(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandlerFactory_method_getFactory_INLRString__LRURLStreamHandlerFactory__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)URLStreamHandlerFactory::getFactory(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandlerFactory_method_getProtocolHandler_INLRString__LRURLStreamHandler__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)URLStreamHandlerFactory::getProtocolHandler(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  URLStreamHandlerFactory_method_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    URLStreamHandlerFactory::registerFactory(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< RURLStreamHandlerFactory>(args[1], dc));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _URLStreamHandlerFactory_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandlerFactory_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandlerFactory_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandlerFactory_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_4_GetClass", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandlerFactory_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  URLStreamHandlerFactory_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  URLStreamHandlerFactory_MetainfoWrapper::URLStreamHandlerFactory_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandlerFactory_methods_createURLStreamHandler_INLRString__LRURLStreamHandler__arg_protocol = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "protocol", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandlerFactory_methods_createURLStreamHandler_INLRString__LRURLStreamHandler__args[] = 
{
  &URLStreamHandlerFactory_methods_createURLStreamHandler_INLRString__LRURLStreamHandler__arg_protocol,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandlerFactory_methods_createURLStreamHandler_INLRString__LRURLStreamHandler__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandlerFactory_method_createURLStreamHandler_INLRString__LRURLStreamHandler_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createURLStreamHandler", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLStreamHandler::clazzInfo(), // return type
  "_0_createURLStreamHandler", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandlerFactory_methods_createURLStreamHandler_INLRString__LRURLStreamHandler__args, // the arguments
  0, //arguments count
  URLStreamHandlerFactory_methods_createURLStreamHandler_INLRString__LRURLStreamHandler__exceptions, // the declared exceptions
  URLStreamHandlerFactory_MetainfoWrapper::URLStreamHandlerFactory_method_createURLStreamHandler_INLRString__LRURLStreamHandler__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandlerFactory_methods_getFactory_INLRString__LRURLStreamHandlerFactory__arg_protocol = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "protocol", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandlerFactory_methods_getFactory_INLRString__LRURLStreamHandlerFactory__args[] = 
{
  &URLStreamHandlerFactory_methods_getFactory_INLRString__LRURLStreamHandlerFactory__arg_protocol,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandlerFactory_methods_getFactory_INLRString__LRURLStreamHandlerFactory__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandlerFactory_method_getFactory_INLRString__LRURLStreamHandlerFactory_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getFactory", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLStreamHandlerFactory::clazzInfo(), // return type
  "_2_getFactory", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandlerFactory_methods_getFactory_INLRString__LRURLStreamHandlerFactory__args, // the arguments
  0, //arguments count
  URLStreamHandlerFactory_methods_getFactory_INLRString__LRURLStreamHandlerFactory__exceptions, // the declared exceptions
  URLStreamHandlerFactory_MetainfoWrapper::URLStreamHandlerFactory_method_getFactory_INLRString__LRURLStreamHandlerFactory__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandlerFactory_methods_getProtocolHandler_INLRString__LRURLStreamHandler__arg_protocol = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "protocol", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandlerFactory_methods_getProtocolHandler_INLRString__LRURLStreamHandler__args[] = 
{
  &URLStreamHandlerFactory_methods_getProtocolHandler_INLRString__LRURLStreamHandler__arg_protocol,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandlerFactory_methods_getProtocolHandler_INLRString__LRURLStreamHandler__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandlerFactory_method_getProtocolHandler_INLRString__LRURLStreamHandler_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getProtocolHandler", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLStreamHandler::clazzInfo(), // return type
  "_3_getProtocolHandler", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandlerFactory_methods_getProtocolHandler_INLRString__LRURLStreamHandler__args, // the arguments
  0, //arguments count
  URLStreamHandlerFactory_methods_getProtocolHandler_INLRString__LRURLStreamHandler__exceptions, // the declared exceptions
  URLStreamHandlerFactory_MetainfoWrapper::URLStreamHandlerFactory_method_getProtocolHandler_INLRString__LRURLStreamHandler__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_arg_protocol = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "protocol", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_arg_factory = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "factory", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RURLStreamHandlerFactory::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_args[] = 
{
  &URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_arg_protocol,
  &URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_arg_factory,
  0
};

::acdk::lang::dmi::ClazzInfo* URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo URLStreamHandlerFactory_method_registerFactory_INLRString_INLRURLStreamHandlerFactory__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "registerFactory", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1_registerFactory", // alternative name of method
  -1, // altlabelHashCode
  URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_args, // the arguments
  0, //arguments count
  URLStreamHandlerFactory_methods_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_exceptions, // the declared exceptions
  URLStreamHandlerFactory_MetainfoWrapper::URLStreamHandlerFactory_method_registerFactory_INLRString_INLRURLStreamHandlerFactory__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _URLStreamHandlerFactory_methods[] = 
{
  &URLStreamHandlerFactory_method_GetClass__L_acdk_lang_RClass_,
  &URLStreamHandlerFactory_method_createURLStreamHandler_INLRString__LRURLStreamHandler_,
  &URLStreamHandlerFactory_method_getFactory_INLRString__LRURLStreamHandlerFactory_,
  &URLStreamHandlerFactory_method_getProtocolHandler_INLRString__LRURLStreamHandler_,
  &URLStreamHandlerFactory_method_registerFactory_INLRString_INLRURLStreamHandlerFactory__V,
  0
};


struct URLStreamHandlerFactory_MetaInfoInitializer
{  URLStreamHandlerFactory_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = URLStreamHandlerFactory::clazzInfo();
    ci->fields =  _URLStreamHandlerFactory_fields;
    ci->methods =  _URLStreamHandlerFactory_methods;
    ci->_scopeParent = acdk_net_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
URLStreamHandlerFactory_MetaInfoInitializer URLStreamHandlerFactory_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace net

