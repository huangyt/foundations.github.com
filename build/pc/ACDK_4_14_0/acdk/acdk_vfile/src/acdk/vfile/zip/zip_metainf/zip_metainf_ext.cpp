// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../zip.h"
#include "../LocalFileHeader.h"
#include "../ZipFileImpl.h"
#include "../ZipFileReader.h"
#include "../ZipFileSystem.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace vfile { 
namespace zip { 


//static
::acdk::lang::RObject
ZipFileSystemFactory_create_array(int length)
{
  return new ObjectArrayImpl<RZipFileSystemFactory>(length);
}

//static
::acdk::lang::RObject
ZipFileSystemFactory_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class ZipFileSystemFactory_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ZipFileSystemFactory_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)ZipFileSystemFactory::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ZipFileSystemFactory_method_ZipFileSystemFactory__LRZipFileSystemFactory__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new ZipFileSystemFactory();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ZipFileSystemFactory_method_create_INLRString__Lacdk_io_RFileSystem__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ZipFileSystemFactory* This = dmi_cast<ZipFileSystemFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->ZipFileSystemFactory::create((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->create((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ZipFileSystemFactory_method_handleFile_INLRString__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ZipFileSystemFactory* This = dmi_cast<ZipFileSystemFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ZipFileSystemFactory::handleFile((RString)args[0].getObjectVar());
    else
      ret = This->handleFile((RString)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _ZipFileSystemFactory_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* ZipFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ZipFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ZipFileSystemFactory_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_3_GetClass", // alternative name of method
  -1, // altlabelHashCode
  ZipFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  ZipFileSystemFactory_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  ZipFileSystemFactory_MetainfoWrapper::ZipFileSystemFactory_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ZipFileSystemFactory_methods_ZipFileSystemFactory__LRZipFileSystemFactory__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ZipFileSystemFactory_methods_ZipFileSystemFactory__LRZipFileSystemFactory__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ZipFileSystemFactory_method_ZipFileSystemFactory__LRZipFileSystemFactory_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "ZipFileSystemFactory", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ZipFileSystemFactory::clazzInfo(), // return type
  "_0_ZipFileSystemFactory", // alternative name of method
  -1, // altlabelHashCode
  ZipFileSystemFactory_methods_ZipFileSystemFactory__LRZipFileSystemFactory__args, // the arguments
  0, //arguments count
  ZipFileSystemFactory_methods_ZipFileSystemFactory__LRZipFileSystemFactory__exceptions, // the declared exceptions
  ZipFileSystemFactory_MetainfoWrapper::ZipFileSystemFactory_method_ZipFileSystemFactory__LRZipFileSystemFactory__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ZipFileSystemFactory_methods_create_INLRString__Lacdk_io_RFileSystem__arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ZipFileSystemFactory_methods_create_INLRString__Lacdk_io_RFileSystem__args[] = 
{
  &ZipFileSystemFactory_methods_create_INLRString__Lacdk_io_RFileSystem__arg_file,
  0
};

::acdk::lang::dmi::ClazzInfo* ZipFileSystemFactory_methods_create_INLRString__Lacdk_io_RFileSystem__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ZipFileSystemFactory_method_create_INLRString__Lacdk_io_RFileSystem_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "create", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RFileSystem::clazzInfo(), // return type
  "_2_create", // alternative name of method
  -1, // altlabelHashCode
  ZipFileSystemFactory_methods_create_INLRString__Lacdk_io_RFileSystem__args, // the arguments
  0, //arguments count
  ZipFileSystemFactory_methods_create_INLRString__Lacdk_io_RFileSystem__exceptions, // the declared exceptions
  ZipFileSystemFactory_MetainfoWrapper::ZipFileSystemFactory_method_create_INLRString__Lacdk_io_RFileSystem__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ZipFileSystemFactory_methods_handleFile_INLRString__I_arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ZipFileSystemFactory_methods_handleFile_INLRString__I_args[] = 
{
  &ZipFileSystemFactory_methods_handleFile_INLRString__I_arg_file,
  0
};

::acdk::lang::dmi::ClazzInfo* ZipFileSystemFactory_methods_handleFile_INLRString__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ZipFileSystemFactory_method_handleFile_INLRString__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "handleFile", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_1_handleFile", // alternative name of method
  -1, // altlabelHashCode
  ZipFileSystemFactory_methods_handleFile_INLRString__I_args, // the arguments
  0, //arguments count
  ZipFileSystemFactory_methods_handleFile_INLRString__I_exceptions, // the declared exceptions
  ZipFileSystemFactory_MetainfoWrapper::ZipFileSystemFactory_method_handleFile_INLRString__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _ZipFileSystemFactory_methods[] = 
{
  &ZipFileSystemFactory_method_GetClass__L_acdk_lang_RClass_,
  &ZipFileSystemFactory_method_ZipFileSystemFactory__LRZipFileSystemFactory_,
  &ZipFileSystemFactory_method_create_INLRString__Lacdk_io_RFileSystem_,
  &ZipFileSystemFactory_method_handleFile_INLRString__I,
  0
};


struct ZipFileSystemFactory_MetaInfoInitializer
{  ZipFileSystemFactory_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = ZipFileSystemFactory::clazzInfo();
    ci->fields =  _ZipFileSystemFactory_fields;
    ci->methods =  _ZipFileSystemFactory_methods;
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
ZipFileSystemFactory_MetaInfoInitializer ZipFileSystemFactory_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace vfile
} // namespace zip


#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) zip_dummyExportFunc() {}
#endif

