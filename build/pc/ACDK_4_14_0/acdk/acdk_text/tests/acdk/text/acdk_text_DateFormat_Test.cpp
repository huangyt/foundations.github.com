// -*- mode:C++; tab-width:2; c-basic-offset:2; indent-tabs-mode:nil -*- 
//
// Copyright (C) 2000-2005 by Roger Rene Kommer / artefaktur, Kassel, Germany.
// 
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public License (LGPL).
// 
// 
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the 
// License ACDK-FreeLicense document enclosed in the distribution
// for more for more details.

// This file is part of the Artefaktur Component Development Kit:
//                         ACDK
// 
// Please refer to
// - http://www.acdk.de
// - http://www.artefaktur.com
// - http://acdk.sourceforge.net
// for more information.
// 
// $Header: /cvsroot/acdk/acdk/acdk_text/tests/acdk/text/acdk_text_DateFormat_Test.cpp,v 1.6 2005/02/05 10:45:33 kommer Exp $


// Generated by acdk_tools_modtest, Copyright 2000 by Roger Rene Kommer, artefaktur
//

#include <acdk.h>
#include <acdk/tools/aunit/TestRunner.h>
#include <acdk/lang/Throwable.h>
#include <acdk/lang/System.h>
#include <acdk/util/Date.h>

#include <acdk/text/DateFormat.h>
#include <acdk/text/DateFormatSymbols.h>
#include <acdk/text/SimpleDateFormat.h>

namespace tests {
namespace acdk {
namespace text {

using namespace ::acdk::lang;
using namespace ::acdk::text;
using namespace ::acdk::util;

BEGIN_DECLARE_TEST( DateFormat_Test )
  DECLARE_TEST( standard )
  DECLARE_TEST( simple )
END_DECLARE_TEST( DateFormat_Test )

BEGIN_DEFINE_TEST( DateFormat_Test )
  ADD_TEST( DateFormat_Test, standard ) 
  ADD_TEST( DateFormat_Test, simple )
END_DEFINE_TEST( DateFormat_Test )


void DateFormat_Test::standard()
{
  RDateFormat df = DateFormat::getDateTimeInstance();
  
  Date d(1966 - 1900, 9 - 1, 20, 6, 20, 0);
  RString str = d.toString();
  System::out->println(str);

  StringBuffer sb;
  df->format((RDate)&d, &sb, Nil);
  System::out->println(sb.toString());
  
  RDate rd = df->parse(sb.toString());
  StringBuffer sb2;
  df->format(rd, &sb2, Nil);
  System::out->println(sb2.toString());
  testAssert(sb.equals(&sb2) == true);
}

void DateFormat_Test::simple()
{
  RString isformat = "yyyy-MM-dd'T'HH:mm:ss:SSS";
  SimpleDateFormat sdf(isformat);
  Date d(1966 - 1900, 9 - 1, 20, 5, 55, 45);
  RString str = sdf.format(&d);
  System::out->println(str);
  RDate rd = sdf.parse(str);
  RString str2 = sdf.format(rd);
  System::out->println(str2);
  testAssert(str2->equals(str) == true);
}




} // namespace text
} // namespace acdk
} // namespace tests

