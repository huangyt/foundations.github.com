// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "acdk.h"
#include "AdressBookImpl.h"
#include "IdlMappingTest.h"

namespace tests { 
namespace acdkx { 
namespace orb { 

::acdk::lang::dmi::ClazzSuperInfo _AdressInfo_super___acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _AdressInfo_interfaces[] =
{
  &_AdressInfo_super___acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* AdressInfo::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "AdressInfo", // name of class
  -1, // hashCode
  "tests/acdkx/orb", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _AdressInfo_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 2, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    AdressInfo::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_AdressInfo(AdressInfo::clazzInfo());

::acdk::lang::RClass
AdressInfo::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
AdressInfo::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->name._ref_this()); // RString name 
  fields.push_back((::acdk::lang::RObject*)this->street._ref_this()); // RString street 
}


} // namespace tests
} // namespace acdkx
} // namespace orb


namespace tests { 
namespace acdkx { 
namespace orb { 

::acdk::lang::dmi::ClazzSuperInfo _AdressBook_super___org__omg__CORBA__portable__InvokeHandler =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  ::org::omg::CORBA::portable::InvokeHandler::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _AdressBook_interfaces[] =
{
  &_AdressBook_super___org__omg__CORBA__portable__InvokeHandler,
  0
};

::acdk::lang::dmi::ClazzInfo* AdressBook::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "AdressBook", // name of class
  -1, // hashCode
  "tests/acdkx/orb", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _AdressBook_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    AdressBook::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_AdressBook(AdressBook::clazzInfo());

::acdk::lang::RClass
AdressBook::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
AdressBook::getCollectableFields(FieldReferences& fields)
{
}


} // namespace tests
} // namespace acdkx
} // namespace orb

