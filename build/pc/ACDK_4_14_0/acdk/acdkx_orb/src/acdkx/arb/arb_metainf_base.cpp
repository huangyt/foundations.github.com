// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "ADelegate.h"
#include "AObjectImpl.h"
#include "arb.h"
#include "Config.h"
#include "XMLDelegate.h"

namespace acdkx { 
namespace arb { 

::acdk::lang::dmi::ClazzSuperInfo* _ArbInterface_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* ArbInterface::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface, // clazz-flags
  0, //AttributesRes
  "ArbInterface", // name of class
  -1, // hashCode
  "acdkx/arb", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ArbInterface_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ArbInterface::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ArbInterface(ArbInterface::clazzInfo());

::acdk::lang::RClass
ArbInterface::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ArbInterface::getCollectableFields(FieldReferences& fields)
{
}


} // namespace acdkx
} // namespace arb

