// generated by acdkorbidl

#ifndef acdk_tools_mc_idl
#define acdk_tools_mc_idl

#include <acdk_base.idl>
module acdk{
  module lang{
    interface AObject;
#ifndef acdk_lang_AObject
#define acdk_lang_AObject
    typedef sequence<AObject> AObjectArray;
    typedef sequence<AObjectArray> AObjectArrayArray;
#endif // acdk_lang_AObject
  }; // module acdk
}; // module lang
module acdk{
  module lang{
    module dmi{
      interface DmiObject;
#ifndef acdk_lang_dmi_DmiObject
#define acdk_lang_dmi_DmiObject
      typedef sequence<DmiObject> DmiObjectArray;
      typedef sequence<DmiObjectArray> DmiObjectArrayArray;
#endif // acdk_lang_dmi_DmiObject
    }; // module acdk
  }; // module lang
}; // module dmi
module acdk{
  module io{
    interface Reader;
#ifndef acdk_io_Reader
#define acdk_io_Reader
    typedef sequence<Reader> ReaderArray;
    typedef sequence<ReaderArray> ReaderArrayArray;
#endif // acdk_io_Reader
  }; // module acdk
}; // module io
module acdk{
  module tools{
    module mc{
      interface CfgProps;
#ifndef acdk_tools_mc_CfgProps
#define acdk_tools_mc_CfgProps
      typedef sequence<CfgProps> CfgPropsArray;
      typedef sequence<CfgPropsArray> CfgPropsArrayArray;
#endif // acdk_tools_mc_CfgProps
      interface CfgScript;
#ifndef acdk_tools_mc_CfgScript
#define acdk_tools_mc_CfgScript
      typedef sequence<CfgScript> CfgScriptArray;
      typedef sequence<CfgScriptArray> CfgScriptArrayArray;
#endif // acdk_tools_mc_CfgScript
      interface CodeAttribute;
#ifndef acdk_tools_mc_CodeAttribute
#define acdk_tools_mc_CodeAttribute
      typedef sequence<CodeAttribute> CodeAttributeArray;
      typedef sequence<CodeAttributeArray> CodeAttributeArrayArray;
#endif // acdk_tools_mc_CodeAttribute
      interface DmiProxyAttribute;
#ifndef acdk_tools_mc_DmiProxyAttribute
#define acdk_tools_mc_DmiProxyAttribute
      typedef sequence<DmiProxyAttribute> DmiProxyAttributeArray;
      typedef sequence<DmiProxyAttributeArray> DmiProxyAttributeArrayArray;
#endif // acdk_tools_mc_DmiProxyAttribute
      interface McConfigAttribute;
#ifndef acdk_tools_mc_McConfigAttribute
#define acdk_tools_mc_McConfigAttribute
      typedef sequence<McConfigAttribute> McConfigAttributeArray;
      typedef sequence<McConfigAttributeArray> McConfigAttributeArrayArray;
#endif // acdk_tools_mc_McConfigAttribute
      interface MethodAltNameAttribute;
#ifndef acdk_tools_mc_MethodAltNameAttribute
#define acdk_tools_mc_MethodAltNameAttribute
      typedef sequence<MethodAltNameAttribute> MethodAltNameAttributeArray;
      typedef sequence<MethodAltNameAttributeArray> MethodAltNameAttributeArrayArray;
#endif // acdk_tools_mc_MethodAltNameAttribute
      interface StringTagAttribute;
#ifndef acdk_tools_mc_StringTagAttribute
#define acdk_tools_mc_StringTagAttribute
      typedef sequence<StringTagAttribute> StringTagAttributeArray;
      typedef sequence<StringTagAttributeArray> StringTagAttributeArrayArray;
#endif // acdk_tools_mc_StringTagAttribute
      interface ThrowableAttribute;
#ifndef acdk_tools_mc_ThrowableAttribute
#define acdk_tools_mc_ThrowableAttribute
      typedef sequence<ThrowableAttribute> ThrowableAttributeArray;
      typedef sequence<ThrowableAttributeArray> ThrowableAttributeArrayArray;
#endif // acdk_tools_mc_ThrowableAttribute
}; // module acdk
}; // module tools
}; // module mc
module acdk {
module tools {
module mc {

exception CfgScriptException
{
  string _what;
};
interface CodeAttribute
: acdk::lang::AObject
{
  boolean apply(in acdk::lang::AObject cm);
};

interface CodeAttributeCorFactory
{
  long getCounter();
  void initAttribute(in acdk::lang::AObject mc);
};

interface MethodAltNameAttribute
: acdk::tools::mc::CodeAttribute
{
};

interface MethodAltNameAttributeCorFactory
{
  acdk::tools::mc::MethodAltNameAttribute createCorMethodAltNameAttribute(in string altName, in long paramCount);

  // orginal method name: MethodAltNameAttribute
    acdk::tools::mc::MethodAltNameAttribute createCorMethodAltNameAttribute1(in string altName);
};

interface McConfigAttribute
: acdk::tools::mc::CodeAttribute
{
  attribute boolean configWithFields;
  attribute boolean configWithMethods;
};

interface McConfigAttributeCorFactory
{
  acdk::tools::mc::McConfigAttribute createCorMcConfigAttribute(in boolean GenMethod, in boolean GenField);

  // orginal method name: McConfigAttribute
    acdk::tools::mc::McConfigAttribute createCorMcConfigAttribute1();

  // orginal method name: McConfigAttribute
    acdk::tools::mc::McConfigAttribute createCorMcConfigAttribute2(in boolean GenMethod);
};

interface DmiProxyAttribute
: acdk::tools::mc::CodeAttribute
{
};

interface DmiProxyAttributeCorFactory
{
  acdk::tools::mc::DmiProxyAttribute createCorDmiProxyAttribute();
};

interface ThrowableAttribute
: acdk::tools::mc::CodeAttribute
{
};

interface ThrowableAttributeCorFactory
{
  acdk::tools::mc::ThrowableAttribute createCorThrowableAttribute();
};

interface StringTagAttribute
: acdk::tools::mc::CodeAttribute
{
  attribute string key;
  attribute string value;
};

interface StringTagAttributeCorFactory
{
  acdk::tools::mc::StringTagAttribute createCorStringTagAttribute(in string k, in string val);

  // orginal method name: StringTagAttribute
    acdk::tools::mc::StringTagAttribute createCorStringTagAttribute1(in string k);
};

interface CfgScript
: acdk::lang::AObject
{
  attribute acdk::tools::mc::CfgProps currentProps;
  void assertExists(in acdk::tools::mc::CfgProps props, in string variable);
  void assertTrue(in boolean test, in string msg);
  long eval(in string text, in acdk::tools::mc::CfgProps props, in long flags);

  // orginal method name: eval
    long eval1(in string text, in acdk::tools::mc::CfgProps props);
  boolean include(in string fname, in boolean noDuplicates, in boolean changeDir);

  // orginal method name: include
    boolean include1(in string fname);

  // orginal method name: include
    boolean include2(in string fname, in boolean noDuplicates);
  long readEval(in acdk::tools::mc::CfgProps props, in long flags);

  // orginal method name: readEval
    long readEval3(in acdk::io::Reader in_, in acdk::tools::mc::CfgProps props);

  // orginal method name: readEval
    long readEval1(in acdk::tools::mc::CfgProps props);

  // orginal method name: readEval
    long readEval2(in acdk::io::Reader in_, in acdk::tools::mc::CfgProps props, in long flags);
};

interface CfgScriptCorFactory
{
  acdk::tools::mc::CfgScript createCorCfgScript(in string cfgfile, in acdk::tools::mc::CfgScript parentScript);

  // orginal method name: CfgScript
    acdk::tools::mc::CfgScript createCorCfgScript1();

  // orginal method name: CfgScript
    acdk::tools::mc::CfgScript createCorCfgScript2(in string cfgfile);
};

interface CfgProps
: acdk::lang::AObject
{
  acdk::lang::dmi::DmiObject _get(in string name);
  void appendObjectList(in string key, in acdk::lang::AObject val);
  void appendStringArrayVal(in string key, in string value, in long flags);

  // orginal method name: appendStringArrayVal
    void appendStringArrayVal1(in string key, in string value);
  void appendStringVal(in string key, in string value, in string joiner, in long flags);

  // orginal method name: appendStringVal
    void appendStringVal1(in string key, in string value);

  // orginal method name: appendStringVal
    void appendStringVal2(in string key, in string value, in string joiner);
  boolean containsInStringArrayVal(in string key, in string value);
  void dump();
  string eval(in string str, in long evalflags);

  // orginal method name: eval
    string eval1(in string str);

  // orginal method name: get
    acdk::lang::dmi::DmiObject get1(in string name);
  acdk::lang::dmi::DmiObject get(in string name, in boolean warn);
  stringArray getAllStringVals(in string key);
  string getEvaluatedStringVal(in string name, in long evalflags);

  // orginal method name: getEvaluatedStringVal
    string getEvaluatedStringVal1(in string name);
  long getIntVal(in string key);
  stringArray getKeys();
  string getName();
  acdk::lang::AObject getObjectVal(in string name, in boolean warn);

  // orginal method name: getObjectVal
    acdk::lang::AObject getObjectVal1(in string name);
  acdk::tools::mc::CfgProps getParentProps();
  acdk::tools::mc::CfgProps getProps(in string name);
  string getQuotedStringVal(in string key);
  stringArray getStringArrayVal(in string key, in boolean warn);

  // orginal method name: getStringArrayVal
    stringArray getStringArrayVal1(in string key);
  string getStringVal(in string name, in boolean warn);

  // orginal method name: getStringVal
    string getStringVal1(in string name);
  string getUnquotedStringVal(in string key);
  boolean hasValue(in string key);
  boolean importNameSpace(in string prefix);
  void merge(in acdk::tools::mc::CfgProps other, in long flags);

  // orginal method name: merge
    void merge1(in acdk::tools::mc::CfgProps other);
  void put(in string name, in acdk::lang::dmi::DmiObject value);
  void putObject(in string name, in acdk::lang::AObject value);
  void setIntVal(in string key, in long val);
  void setName(in string name);
  void setParentProps(in acdk::tools::mc::CfgProps nparent);
  void setQuotedStringVal(in string key, in string value);
  void setStringArrayVal(in string key, in stringArray value);
  void setStringVal(in string key, in string value);
  long size();
  void unset(in string name);
};

interface CfgPropsCorFactory
{
  acdk::tools::mc::CfgProps createCorCfgProps(in string name, in acdk::tools::mc::CfgProps parent, in boolean private_props);

  // orginal method name: CfgProps
    acdk::tools::mc::CfgProps createCorCfgProps1(in string name);

  // orginal method name: CfgProps
    acdk::tools::mc::CfgProps createCorCfgProps2(in string name, in acdk::tools::mc::CfgProps parent);

  // orginal method name: CfgProps
    acdk::tools::mc::CfgProps createCorCfgProps3(in acdk::tools::mc::CfgProps parent, in boolean private_props);

  // orginal method name: CfgProps
    acdk::tools::mc::CfgProps createCorCfgProps4();

  // orginal method name: CfgProps
    acdk::tools::mc::CfgProps createCorCfgProps5(in acdk::tools::mc::CfgProps parent);
};

}; // module mc
}; // module tools
}; // module acdk
#endif // acdk_tools_mc_idl
