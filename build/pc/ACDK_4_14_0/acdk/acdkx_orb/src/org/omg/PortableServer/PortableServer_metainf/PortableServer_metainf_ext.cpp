// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../PortableServer.h"
#include "../POA.h"
#include "../POAManager.h"
#include <acdkx/orb/CorObject.h>
#include "../PortableServer.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>


struct acdk::lang::dmi::UnitInfo org_omg_PortableServer_unitInfo = {
  ::acdk::lang::dmi::MiUnitInfo, // flags
  0, //attributeRes
  "PortableServer", // name of unit
  -1, // hashCode
  "org/omg", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  0 // _firstChild first ClazzInfo of this unit
};

static ::acdk::lang::dmi::RegisterUnitInfo _register_org_omg_PortableServer_unitInfo(&org_omg_PortableServer_unitInfo);


namespace org { 
namespace omg { 
namespace PortableServer { 


//static
::acdk::lang::RObject
AdapterInactive_create_array(int length)
{
  return new ObjectArrayImpl<RAdapterInactive>(length);
}

//static
::acdk::lang::RObject
AdapterInactive_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AdapterInactive_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AdapterInactive_method_AdapterInactive__LRAdapterInactive__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AdapterInactive();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AdapterInactive_method_AdapterInactive_INLRString__LRAdapterInactive__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AdapterInactive((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AdapterInactive_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AdapterInactive::GetClass();
    return methinf;
  }
};


void ThrowException_AdapterInactive(IN(::acdk::lang::RThrowable) ex)
{
  throw RAdapterInactive(ex);
}

::acdk::lang::dmi::ClazzFieldInfo* _AdapterInactive_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* AdapterInactive_methods_AdapterInactive__LRAdapterInactive__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AdapterInactive_methods_AdapterInactive__LRAdapterInactive__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AdapterInactive_method_AdapterInactive__LRAdapterInactive_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AdapterInactive", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AdapterInactive::clazzInfo(), // return type
  "_0_AdapterInactive", // alternative name of method
  -1, // altlabelHashCode
  AdapterInactive_methods_AdapterInactive__LRAdapterInactive__args, // the arguments
  0, //arguments count
  AdapterInactive_methods_AdapterInactive__LRAdapterInactive__exceptions, // the declared exceptions
  AdapterInactive_MetainfoWrapper::AdapterInactive_method_AdapterInactive__LRAdapterInactive__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AdapterInactive_methods_AdapterInactive_INLRString__LRAdapterInactive__arg_msg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "msg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AdapterInactive_methods_AdapterInactive_INLRString__LRAdapterInactive__args[] = 
{
  &AdapterInactive_methods_AdapterInactive_INLRString__LRAdapterInactive__arg_msg,
  0
};

::acdk::lang::dmi::ClazzInfo* AdapterInactive_methods_AdapterInactive_INLRString__LRAdapterInactive__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AdapterInactive_method_AdapterInactive_INLRString__LRAdapterInactive_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AdapterInactive", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AdapterInactive::clazzInfo(), // return type
  "_1_AdapterInactive", // alternative name of method
  -1, // altlabelHashCode
  AdapterInactive_methods_AdapterInactive_INLRString__LRAdapterInactive__args, // the arguments
  0, //arguments count
  AdapterInactive_methods_AdapterInactive_INLRString__LRAdapterInactive__exceptions, // the declared exceptions
  AdapterInactive_MetainfoWrapper::AdapterInactive_method_AdapterInactive_INLRString__LRAdapterInactive__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AdapterInactive_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AdapterInactive_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AdapterInactive_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AdapterInactive_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AdapterInactive_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AdapterInactive_MetainfoWrapper::AdapterInactive_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AdapterInactive_methods[] = 
{
  &AdapterInactive_method_AdapterInactive__LRAdapterInactive_,
  &AdapterInactive_method_AdapterInactive_INLRString__LRAdapterInactive_,
  &AdapterInactive_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct AdapterInactive_MetaInfoInitializer
{  AdapterInactive_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AdapterInactive::clazzInfo();
    ci->fields =  _AdapterInactive_fields;
    ci->methods =  _AdapterInactive_methods;
    ci->_scopeParent = org_omg_PortableServer_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AdapterInactive_MetaInfoInitializer AdapterInactive_MetaInfoInitializer_staticinstance__;


struct AdapterInactive_clazzInfo_ClazzAttributesResInitializer1
{
  AdapterInactive_clazzInfo_ClazzAttributesResInitializer1()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)AdapterInactive::clazzInfo(), "__throwExceptionFunc", ::acdk::lang::dmi::ClazzAttributeResValue(0xFFFF, (void*)&ThrowException_AdapterInactive));
  }
};

AdapterInactive_clazzInfo_ClazzAttributesResInitializer1 AdapterInactive_clazzInfo_ClazzAttributesResInitializer1_instance;



} // namespace org
} // namespace omg
} // namespace PortableServer


namespace org { 
namespace omg { 
namespace PortableServer { 


//static
::acdk::lang::RObject
POAManager_create_array(int length)
{
  return new ObjectArrayImpl<RPOAManager>(length);
}

//static
::acdk::lang::RObject
POAManager_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class POAManager_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)POAManager::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_activate__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->activate();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_deactivate_OUTZOUTZ_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->deactivate(args[0].getBoolRef(), args[1].getBoolRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_discard_requests_OUTZ_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->discard_requests(args[0].getBoolRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_doSomething__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->doSomething();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_getManager__L_org_omg_CORBA_RObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    ret = (::acdk::lang::RObject)This->getManager();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_hold_requests_OUTZ_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->hold_requests(args[0].getBoolRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_inoutvalue_INOUTI_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->inoutvalue(args[0].getIntRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_invalue_INI_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->invalue(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_outvalue_OUTI_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    This->outvalue(args[0].getIntRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_retvalfoo__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
  ret = This->retvalfoo();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  POAManager_method_stringTest_INLRString_OUTLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    POAManager* This = dmi_cast<POAManager>(This_);
    ret = (::acdk::lang::RObject)This->stringTest((RString)args[0].getObjectVar(),  ::acdk::lang::getTypedObjectRef< RString >(args[1]));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _POAManager_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_b_GetClass", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods__args, // the arguments
  0, //arguments count
  POAManager_methods__exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_activate__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_activate__V_exceptions[] =
{
  RAdapterInactive::clazzInfo(), 
  0
};

void POAManager_activate__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, AdapterInactive) == true)
    THROW_INSTANCE( RAdapterInactive(ex));
}

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_activate__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "activate", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_0_activate", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_activate__V_args, // the arguments
  0, //arguments count
  POAManager_methods_activate__V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_activate__V_dispatch, // invoke this method
  POAManager_activate__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_deactivate_OUTZOUTZ_V_arg_etherealize_objects = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut, 
  0, //AttributesRes
  "etherealize_objects", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_deactivate_OUTZOUTZ_V_arg_wait_for_completion = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut, 
  0, //AttributesRes
  "wait_for_completion", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_deactivate_OUTZOUTZ_V_args[] = 
{
  &POAManager_methods_deactivate_OUTZOUTZ_V_arg_etherealize_objects,
  &POAManager_methods_deactivate_OUTZOUTZ_V_arg_wait_for_completion,
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_deactivate_OUTZOUTZ_V_exceptions[] =
{
  RAdapterInactive::clazzInfo(), 
  0
};

void POAManager_deactivate_OUTZOUTZ_V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, AdapterInactive) == true)
    THROW_INSTANCE( RAdapterInactive(ex));
}

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_deactivate_OUTZOUTZ_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "deactivate", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_deactivate", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_deactivate_OUTZOUTZ_V_args, // the arguments
  0, //arguments count
  POAManager_methods_deactivate_OUTZOUTZ_V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_deactivate_OUTZOUTZ_V_dispatch, // invoke this method
  POAManager_deactivate_OUTZOUTZ_V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_discard_requests_OUTZ_V_arg_wait_for_completion = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut, 
  0, //AttributesRes
  "wait_for_completion", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_discard_requests_OUTZ_V_args[] = 
{
  &POAManager_methods_discard_requests_OUTZ_V_arg_wait_for_completion,
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_discard_requests_OUTZ_V_exceptions[] =
{
  RAdapterInactive::clazzInfo(), 
  0
};

void POAManager_discard_requests_OUTZ_V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, AdapterInactive) == true)
    THROW_INSTANCE( RAdapterInactive(ex));
}

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_discard_requests_OUTZ_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "discard_requests", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_discard_requests", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_discard_requests_OUTZ_V_args, // the arguments
  0, //arguments count
  POAManager_methods_discard_requests_OUTZ_V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_discard_requests_OUTZ_V_dispatch, // invoke this method
  POAManager_discard_requests_OUTZ_V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_doSomething__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_doSomething__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_doSomething__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOneway | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "doSomething", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_doSomething", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_doSomething__V_args, // the arguments
  0, //arguments count
  POAManager_methods_doSomething__V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_doSomething__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_getManager__L_org_omg_CORBA_RObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_getManager__L_org_omg_CORBA_RObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_getManager__L_org_omg_CORBA_RObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getManager", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::org::omg::CORBA::RObject::clazzInfo(), // return type
  "_9_getManager", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_getManager__L_org_omg_CORBA_RObject__args, // the arguments
  0, //arguments count
  POAManager_methods_getManager__L_org_omg_CORBA_RObject__exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_getManager__L_org_omg_CORBA_RObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_hold_requests_OUTZ_V_arg_wait_for_completion = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut, 
  0, //AttributesRes
  "wait_for_completion", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_hold_requests_OUTZ_V_args[] = 
{
  &POAManager_methods_hold_requests_OUTZ_V_arg_wait_for_completion,
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_hold_requests_OUTZ_V_exceptions[] =
{
  RAdapterInactive::clazzInfo(), 
  0
};

void POAManager_hold_requests_OUTZ_V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, AdapterInactive) == true)
    THROW_INSTANCE( RAdapterInactive(ex));
}

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_hold_requests_OUTZ_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hold_requests", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1_hold_requests", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_hold_requests_OUTZ_V_args, // the arguments
  0, //arguments count
  POAManager_methods_hold_requests_OUTZ_V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_hold_requests_OUTZ_V_dispatch, // invoke this method
  POAManager_hold_requests_OUTZ_V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_inoutvalue_INOUTI_V_arg_inval = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiOut, 
  0, //AttributesRes
  "inval", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_inoutvalue_INOUTI_V_args[] = 
{
  &POAManager_methods_inoutvalue_INOUTI_V_arg_inval,
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_inoutvalue_INOUTI_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_inoutvalue_INOUTI_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "inoutvalue", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_inoutvalue", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_inoutvalue_INOUTI_V_args, // the arguments
  0, //arguments count
  POAManager_methods_inoutvalue_INOUTI_V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_inoutvalue_INOUTI_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_invalue_INI_V_arg_inval = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "inval", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_invalue_INI_V_args[] = 
{
  &POAManager_methods_invalue_INI_V_arg_inval,
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_invalue_INI_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_invalue_INI_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "invalue", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_invalue", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_invalue_INI_V_args, // the arguments
  0, //arguments count
  POAManager_methods_invalue_INI_V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_invalue_INI_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_outvalue_OUTI_V_arg_inval = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut, 
  0, //AttributesRes
  "inval", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_outvalue_OUTI_V_args[] = 
{
  &POAManager_methods_outvalue_OUTI_V_arg_inval,
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_outvalue_OUTI_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_outvalue_OUTI_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "outvalue", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_outvalue", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_outvalue_OUTI_V_args, // the arguments
  0, //arguments count
  POAManager_methods_outvalue_OUTI_V_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_outvalue_OUTI_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_retvalfoo__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_retvalfoo__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_retvalfoo__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "retvalfoo", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_4_retvalfoo", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_retvalfoo__I_args, // the arguments
  0, //arguments count
  POAManager_methods_retvalfoo__I_exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_retvalfoo__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_stringTest_INLRString_OUTLRString__LRString__arg_ostr = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ostr", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo POAManager_methods_stringTest_INLRString_OUTLRString__LRString__arg_istr = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut, 
  0, //AttributesRes
  "istr", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* POAManager_methods_stringTest_INLRString_OUTLRString__LRString__args[] = 
{
  &POAManager_methods_stringTest_INLRString_OUTLRString__LRString__arg_ostr,
  &POAManager_methods_stringTest_INLRString_OUTLRString__LRString__arg_istr,
  0
};

::acdk::lang::dmi::ClazzInfo* POAManager_methods_stringTest_INLRString_OUTLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo POAManager_method_stringTest_INLRString_OUTLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "stringTest", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_8_stringTest", // alternative name of method
  -1, // altlabelHashCode
  POAManager_methods_stringTest_INLRString_OUTLRString__LRString__args, // the arguments
  0, //arguments count
  POAManager_methods_stringTest_INLRString_OUTLRString__LRString__exceptions, // the declared exceptions
  POAManager_MetainfoWrapper::POAManager_method_stringTest_INLRString_OUTLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _POAManager_methods[] = 
{
  &POAManager_method_,
  &POAManager_method_activate__V,
  &POAManager_method_deactivate_OUTZOUTZ_V,
  &POAManager_method_discard_requests_OUTZ_V,
  &POAManager_method_doSomething__V,
  &POAManager_method_getManager__L_org_omg_CORBA_RObject_,
  &POAManager_method_hold_requests_OUTZ_V,
  &POAManager_method_inoutvalue_INOUTI_V,
  &POAManager_method_invalue_INI_V,
  &POAManager_method_outvalue_OUTI_V,
  &POAManager_method_retvalfoo__I,
  &POAManager_method_stringTest_INLRString_OUTLRString__LRString_,
  0
};


struct POAManager_MetaInfoInitializer
{  POAManager_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = POAManager::clazzInfo();
    ci->fields =  _POAManager_fields;
    ci->methods =  _POAManager_methods;
    ci->_scopeParent = org_omg_PortableServer_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
POAManager_MetaInfoInitializer POAManager_MetaInfoInitializer_staticinstance__;


struct POAManager_clazzInfo_ClazzAttributesResInitializer2
{
  POAManager_clazzInfo_ClazzAttributesResInitializer2()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)POAManager::clazzInfo(), "acdkx_orb_ClassType", ::acdk::lang::dmi::ClazzAttributeResValue::makeStringRes("", false));
  }
};

POAManager_clazzInfo_ClazzAttributesResInitializer2 POAManager_clazzInfo_ClazzAttributesResInitializer2_instance;


char* _POAManager_Skel__ids[] = {
  "IDL:org/omg/PortableServer/POAManager:1.0",
  0
};

class ACDKX_ORB_PUBLIC POAManager_Skel
: extends ::acdkx::orb::CorObject,
  implements POAManager
{
public:
  char** _ids() { return _POAManager_Skel__ids; }
  POAManager_Skel() : ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject()) { }
  POAManager_Skel(IN(::acdk::lang::RString) objKey) : ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject(objKey)) { }
  static ::acdk::lang::RObject create_instance() { return new POAManager_Skel(); }
  virtual void activate() THROWS1(RAdapterInactive)
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->activate();
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("activate", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
         if (_exClass == AdapterInactive::GetClass()) {
           ::acdk::lang::RObject obj = (::acdk::lang::RObject)__input->read_acdk_object(AdapterInactive::GetClass());
           _releaseReply(__input);
           throw (RAdapterInactive)obj;
         }
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual void hold_requests(OUT(bool) wait_for_completion) THROWS1(RAdapterInactive)
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->hold_requests(wait_for_completion);
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("hold_requests", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        wait_for_completion = (bool) __input->read_boolean();
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
         if (_exClass == AdapterInactive::GetClass()) {
           ::acdk::lang::RObject obj = (::acdk::lang::RObject)__input->read_acdk_object(AdapterInactive::GetClass());
           _releaseReply(__input);
           throw (RAdapterInactive)obj;
         }
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual void discard_requests(OUT(bool) wait_for_completion) THROWS1(RAdapterInactive)
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->discard_requests(wait_for_completion);
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("discard_requests", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        wait_for_completion = (bool) __input->read_boolean();
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
         if (_exClass == AdapterInactive::GetClass()) {
           ::acdk::lang::RObject obj = (::acdk::lang::RObject)__input->read_acdk_object(AdapterInactive::GetClass());
           _releaseReply(__input);
           throw (RAdapterInactive)obj;
         }
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual void deactivate(OUT(bool) etherealize_objects, OUT(bool) wait_for_completion) THROWS1(RAdapterInactive)
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->deactivate(etherealize_objects, wait_for_completion);
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("deactivate", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        etherealize_objects = (bool) __input->read_boolean();
        wait_for_completion = (bool) __input->read_boolean();
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
         if (_exClass == AdapterInactive::GetClass()) {
           ::acdk::lang::RObject obj = (::acdk::lang::RObject)__input->read_acdk_object(AdapterInactive::GetClass());
           _releaseReply(__input);
           throw (RAdapterInactive)obj;
         }
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual int retvalfoo()
  {
    while (true) {
    if (is_local() == true) {
        int __retvalue = dynamic_cast< POAManager*>(localObject())->retvalfoo();
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("retvalfoo", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        int __retvalue = (int)__input->read_long();
        return __retvalue;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual void outvalue(OUT(int) inval)
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->outvalue(inval);
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("outvalue", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        inval = (int) __input->read_long();
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual void invalue(IN(int) inval)
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->invalue(inval);
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("invalue", true);
        __output->write_long(inval);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual void inoutvalue(INOUT(int) inval)
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->inoutvalue(inval);
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("inoutvalue", true);
        __output->write_long(inval);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        inval = (int) __input->read_long();
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual RString stringTest(IN(RString) ostr, OUT(RString) istr)
  {
    while (true) {
    if (is_local() == true) {
        RString __retvalue = dynamic_cast< POAManager*>(localObject())->stringTest(ostr, istr);
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("stringTest", true);
        __output->write_string(ostr);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        RString __retvalue = (RString)__input->read_string();
        istr = (RString) __input->read_string();
        return __retvalue;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual ::org::omg::CORBA::RObject getManager()
  {
    while (true) {
    if (is_local() == true) {
        ::org::omg::CORBA::RObject __retvalue = dynamic_cast< POAManager*>(localObject())->getManager();
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("getManager", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        ::org::omg::CORBA::RObject __retvalue = (::org::omg::CORBA::RObject)__input->read_acdk_object(::org::omg::CORBA::Object::GetClass());
        return __retvalue;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual void doSomething()
  {
    while (true) {
    if (is_local() == true) {
        dynamic_cast< POAManager*>(localObject())->doSomething();
        return;
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("doSomething", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        return;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
  virtual ::acdk::lang::RClass GetClass()
  {
    while (true) {
    if (is_local() == true) {
        ::acdk::lang::RClass __retvalue = dynamic_cast< POAManager*>(localObject())->GetClass();
     } else { // not local
      ::org::omg::CORBA::portable::ROutputStream __output = Nil;
      ::org::omg::CORBA::portable::RInputStream __input = Nil;
      try {
        __output = _request("GetClass", true);
        __input = ACDK_FQ_SUPER_QUALIFIER(::acdkx::orb::, CorObject)::_invoke(__output);
        ::acdk::lang::RClass __retvalue = (::acdk::lang::RClass)__input->read_acdk_object(::acdk::lang::Class::GetClass());
        return __retvalue;
      } catch (::org::omg::CORBA::portable::RRemarshalException ) {
        ; //nothing continue;
      } catch (::org::omg::CORBA::portable::RApplicationException _exception ) {
         ::acdk::lang::RClass _exClass = _exception->getUserExceptionClass();
         __input = _exception->getInputStream();
           THROW1_FQ(::org::omg::CORBA::, UNKNOWN, RString("Unexpected User Exception: ") + _exClass->getName());
      } 
    } // not local
    } // while (true);
  }
};

::acdkx::orb::SkelInfoClassesStruct __POAManager_Skel_Info = { POAManager::clazzInfo(), POAManager_Skel::create_instance, 0 };
static::acdkx::orb::RegisterSkelInfoClass _register_POAManager_Skel(&__POAManager_Skel_Info);

//static
RPOAManager POAManager::GetSkel(IN(::acdk::lang::RString) objKey)
{
  return new POAManager_Skel(objKey);
}
//virtual
::org::omg::CORBA::portable::ROutputStream
POAManager:: _invoke(IN(RString) method, ::org::omg::CORBA::portable::InputStream& __input, ::org::omg::CORBA::portable::ResponseHandler& handler) THROWS1(::org::omg::CORBA::RSystemException)
{
#if defined(__BORLANDC__) // Borland 5.51 bug has to be solved
  ::acdk::lang::RThrowable ex;
#endif //defined(__BORLANDC__)
  if (method->equals("_is_a") == true) {
    try {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      ::acdk::lang::RString name = __input.read_string();
      for (int i = 0; _POAManager_Skel__ids[i]; i++) {
        if (name->equals(_POAManager_Skel__ids[i]) == true) {
          __output->write_boolean(true);
          return __output;
        }
      }
      __output->write_boolean(false);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  const ::acdk::lang::dmi::ClazzMethodInfo* methinf =  ::acdkx::orb::AORB::lookupMethod(method, clazzInfo());
  if (methinf == 0)
    THROW1(Exception, RString("Cannot find matching function for ") + method);
  if (&POAManager_method_activate__V == methinf) {
    try {
      activate();
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_hold_requests_OUTZ_V == methinf) {
    try {
      bool wait_for_completion;
      hold_requests(wait_for_completion);
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_boolean(wait_for_completion);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_discard_requests_OUTZ_V == methinf) {
    try {
      bool wait_for_completion;
      discard_requests(wait_for_completion);
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_boolean(wait_for_completion);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_deactivate_OUTZOUTZ_V == methinf) {
    try {
      bool etherealize_objects;
      bool wait_for_completion;
      deactivate(etherealize_objects, wait_for_completion);
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_boolean(etherealize_objects);
      __output->write_boolean(wait_for_completion);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_retvalfoo__I == methinf) {
    try {
      int __retval = retvalfoo();
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_long(__retval);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_outvalue_OUTI_V == methinf) {
    try {
      int inval;
      outvalue(inval);
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_long(inval);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_invalue_INI_V == methinf) {
    try {
      int inval = (int)__input.read_long();
      invalue(inval);
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_inoutvalue_INOUTI_V == methinf) {
    try {
      int inval = (int)__input.read_long();
      inoutvalue(inval);
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_long(inval);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_stringTest_INLRString_OUTLRString__LRString_ == methinf) {
    try {
      RString ostr = (RString)__input.read_string();
      RString istr;
      RString __retval = stringTest(ostr, istr);
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_string(__retval);
      __output->write_string(istr);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_getManager__L_org_omg_CORBA_RObject_ == methinf) {
    try {
      ::org::omg::CORBA::RObject __retval = getManager();
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      __output->write_acdk_object((::acdk::lang::RObject)__retval);
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  if (&POAManager_method_doSomething__V == methinf) {
    try {
      doSomething();
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createReply();
      return __output;
    } catch (::acdk::lang::RThrowable ex) {
      ::org::omg::CORBA::portable::ROutputStream __output = handler.createExceptionReply();
      __output->write_exception(ex);
      return __output;
    } catch (...) {
      throw;
    }
  }
  THROW0_FQ(::org::omg::CORBA::, BAD_OPERATION);
  return Nil;
}


} // namespace org
} // namespace omg
} // namespace PortableServer


#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) PortableServer_dummyExportFunc() {}
#endif

