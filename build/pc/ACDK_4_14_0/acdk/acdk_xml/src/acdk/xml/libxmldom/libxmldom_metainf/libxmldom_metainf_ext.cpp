// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../libxmldom.h"
#include "../LibXMLAttr.h"
#include "../LibXMLCDATASection.h"
#include "../LibXMLCharacterData.h"
#include "../LibXMLComment.h"
#include "../LibXMLDocument.h"
#include "../LibXMLDocumentBuilder.h"
#include "../LibXMLDocumentFragment.h"
#include "../LibXMLDocumentType.h"
#include "../libxmldom.h"
#include "../LibXMLDOMInternals.h"
#include "../LibXMLElement.h"
#include "../LibXMLEntity.h"
#include "../LibXMLEntityReference.h"
#include "../LibXMLNamedNodeMap.h"
#include "../LibXMLNode.h"
#include "../LibXMLNodeList.h"
#include "../LibXMLNotation.h"
#include "../LibXMLPathNodeList.h"
#include "../LibXMLProcessingInstruction.h"
#include "../LibXMLText.h"
#include "../LibXMLXPathExpression.h"
#include "../LibXMLXPathNSResolver.h"
#include "../LibXMLXPathResult.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>


struct acdk::lang::dmi::UnitInfo acdk_xml_libxmldom_unitInfo = {
  ::acdk::lang::dmi::MiUnitInfo, // flags
  0, //attributeRes
  "libxmldom", // name of unit
  -1, // hashCode
  "acdk/xml", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  0 // _firstChild first ClazzInfo of this unit
};

static ::acdk::lang::dmi::RegisterUnitInfo _register_acdk_xml_libxmldom_unitInfo(&acdk_xml_libxmldom_unitInfo);


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLAttr_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLAttr>(length);
}

//static
::acdk::lang::RObject
LibXMLAttr_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLAttr_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLAttr_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLAttr::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLAttr_method_getName__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLAttr* This = dmi_cast<LibXMLAttr>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLAttr::getName();
    else
        ret = (::acdk::lang::RObject)This->getName();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLAttr_method_getOwnerElement__Lorg_w3c_dom_RElement__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLAttr* This = dmi_cast<LibXMLAttr>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLAttr::getOwnerElement();
    else
        ret = (::acdk::lang::RObject)This->getOwnerElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLAttr_method_getSpecified__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLAttr* This = dmi_cast<LibXMLAttr>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLAttr::getSpecified();
    else
      ret = This->getSpecified();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLAttr_method_getValue__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLAttr* This = dmi_cast<LibXMLAttr>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLAttr::getValue();
    else
        ret = (::acdk::lang::RObject)This->getValue();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLAttr_method_setValue_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLAttr* This = dmi_cast<LibXMLAttr>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLAttr::setValue((RString)args[0].getObjectVar());
    else
        This->setValue((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLAttr_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLAttr* This = dmi_cast<LibXMLAttr>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLAttr::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLAttr_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLAttr_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLAttr_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_6_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLAttr_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLAttr_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLAttr_MetainfoWrapper::LibXMLAttr_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLAttr_methods_getName__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr_methods_getName__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLAttr_method_getName__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_0_getName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLAttr_methods_getName__LRString__args, // the arguments
  0, //arguments count
  LibXMLAttr_methods_getName__LRString__exceptions, // the declared exceptions
  LibXMLAttr_MetainfoWrapper::LibXMLAttr_method_getName__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLAttr_methods_getOwnerElement__Lorg_w3c_dom_RElement__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr_methods_getOwnerElement__Lorg_w3c_dom_RElement__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLAttr_method_getOwnerElement__Lorg_w3c_dom_RElement_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getOwnerElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RElement::clazzInfo(), // return type
  "_4_getOwnerElement", // alternative name of method
  -1, // altlabelHashCode
  LibXMLAttr_methods_getOwnerElement__Lorg_w3c_dom_RElement__args, // the arguments
  0, //arguments count
  LibXMLAttr_methods_getOwnerElement__Lorg_w3c_dom_RElement__exceptions, // the declared exceptions
  LibXMLAttr_MetainfoWrapper::LibXMLAttr_method_getOwnerElement__Lorg_w3c_dom_RElement__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLAttr_methods_getSpecified__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr_methods_getSpecified__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLAttr_method_getSpecified__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getSpecified", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_1_getSpecified", // alternative name of method
  -1, // altlabelHashCode
  LibXMLAttr_methods_getSpecified__Z_args, // the arguments
  0, //arguments count
  LibXMLAttr_methods_getSpecified__Z_exceptions, // the declared exceptions
  LibXMLAttr_MetainfoWrapper::LibXMLAttr_method_getSpecified__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLAttr_methods_getValue__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr_methods_getValue__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLAttr_method_getValue__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getValue", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_2_getValue", // alternative name of method
  -1, // altlabelHashCode
  LibXMLAttr_methods_getValue__LRString__args, // the arguments
  0, //arguments count
  LibXMLAttr_methods_getValue__LRString__exceptions, // the declared exceptions
  LibXMLAttr_MetainfoWrapper::LibXMLAttr_method_getValue__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLAttr_methods_setValue_INLRString__V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLAttr_methods_setValue_INLRString__V_args[] = 
{
  &LibXMLAttr_methods_setValue_INLRString__V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr_methods_setValue_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLAttr_setValue_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLAttr_method_setValue_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setValue", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_setValue", // alternative name of method
  -1, // altlabelHashCode
  LibXMLAttr_methods_setValue_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLAttr_methods_setValue_INLRString__V_exceptions, // the declared exceptions
  LibXMLAttr_MetainfoWrapper::LibXMLAttr_method_setValue_INLRString__V_dispatch, // invoke this method
  LibXMLAttr_setValue_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLAttr_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLAttr_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_5_toString", // alternative name of method
  -1, // altlabelHashCode
  LibXMLAttr_methods_toString__LRString__args, // the arguments
  0, //arguments count
  LibXMLAttr_methods_toString__LRString__exceptions, // the declared exceptions
  LibXMLAttr_MetainfoWrapper::LibXMLAttr_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLAttr_methods[] = 
{
  &LibXMLAttr_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLAttr_method_getName__LRString_,
  &LibXMLAttr_method_getOwnerElement__Lorg_w3c_dom_RElement_,
  &LibXMLAttr_method_getSpecified__Z,
  &LibXMLAttr_method_getValue__LRString_,
  &LibXMLAttr_method_setValue_INLRString__V,
  &LibXMLAttr_method_toString__LRString_,
  0
};


struct LibXMLAttr_MetaInfoInitializer
{  LibXMLAttr_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLAttr::clazzInfo();
    ci->fields =  _LibXMLAttr_fields;
    ci->methods =  _LibXMLAttr_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLAttr_MetaInfoInitializer LibXMLAttr_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLCDATASection_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLCDATASection>(length);
}

//static
::acdk::lang::RObject
LibXMLCDATASection_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLCDATASection_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCDATASection_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLCDATASection::GetClass();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLCDATASection_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCDATASection_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCDATASection_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLCDATASection_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_0_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCDATASection_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLCDATASection_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLCDATASection_MetainfoWrapper::LibXMLCDATASection_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLCDATASection_methods[] = 
{
  &LibXMLCDATASection_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct LibXMLCDATASection_MetaInfoInitializer
{  LibXMLCDATASection_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLCDATASection::clazzInfo();
    ci->fields =  _LibXMLCDATASection_fields;
    ci->methods =  _LibXMLCDATASection_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLCDATASection_MetaInfoInitializer LibXMLCDATASection_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLCharacterData_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLCharacterData>(length);
}

//static
::acdk::lang::RObject
LibXMLCharacterData_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLCharacterData_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLCharacterData::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_appendData_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLCharacterData::appendData((RString)args[0].getObjectVar());
    else
        This->appendData((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_deleteData_II_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLCharacterData::deleteData(args[0].getIntVar(), args[1].getIntVar());
    else
        This->deleteData(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_getData__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLCharacterData::getData();
    else
        ret = (::acdk::lang::RObject)This->getData();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_getLength__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLCharacterData::getLength();
    else
      ret = This->getLength();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_insertData_IINLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLCharacterData::insertData(args[0].getIntVar(), (RString)args[1].getObjectVar());
    else
        This->insertData(args[0].getIntVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_replaceData_IIINLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLCharacterData::replaceData(args[0].getIntVar(), args[1].getIntVar(), (RString)args[2].getObjectVar());
    else
        This->replaceData(args[0].getIntVar(), args[1].getIntVar(), (RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_setData_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLCharacterData::setData((RString)args[0].getObjectVar());
    else
        This->setData((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_subStringData_II_LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLCharacterData::subStringData(args[0].getIntVar(), args[1].getIntVar());
    else
        ret = (::acdk::lang::RObject)This->subStringData(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLCharacterData_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLCharacterData* This = dmi_cast<LibXMLCharacterData>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLCharacterData::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLCharacterData_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_9_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_appendData_INLRString__V_arg_arg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "arg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_appendData_INLRString__V_args[] = 
{
  &LibXMLCharacterData_methods_appendData_INLRString__V_arg_arg,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_appendData_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLCharacterData_appendData_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_appendData_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "appendData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_appendData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_appendData_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_appendData_INLRString__V_exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_appendData_INLRString__V_dispatch, // invoke this method
  LibXMLCharacterData_appendData_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_deleteData_II_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_deleteData_II_V_arg_count = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "count", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_deleteData_II_V_args[] = 
{
  &LibXMLCharacterData_methods_deleteData_II_V_arg_offset,
  &LibXMLCharacterData_methods_deleteData_II_V_arg_count,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_deleteData_II_V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLCharacterData_deleteData_II_V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_deleteData_II_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "deleteData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_deleteData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_deleteData_II_V_args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_deleteData_II_V_exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_deleteData_II_V_dispatch, // invoke this method
  LibXMLCharacterData_deleteData_II_V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_getData__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_getData__LRString__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLCharacterData_getData__LRString__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_getData__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_0_getData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_getData__LRString__args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_getData__LRString__exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_getData__LRString__dispatch, // invoke this method
  LibXMLCharacterData_getData__LRString__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_getLength__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_getLength__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_getLength__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLength", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_2_getLength", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_getLength__I_args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_getLength__I_exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_getLength__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_insertData_IINLRString__V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_insertData_IINLRString__V_arg_arg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "arg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_insertData_IINLRString__V_args[] = 
{
  &LibXMLCharacterData_methods_insertData_IINLRString__V_arg_offset,
  &LibXMLCharacterData_methods_insertData_IINLRString__V_arg_arg,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_insertData_IINLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLCharacterData_insertData_IINLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_insertData_IINLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "insertData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_insertData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_insertData_IINLRString__V_args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_insertData_IINLRString__V_exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_insertData_IINLRString__V_dispatch, // invoke this method
  LibXMLCharacterData_insertData_IINLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_replaceData_IIINLRString__V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_replaceData_IIINLRString__V_arg_count = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "count", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_replaceData_IIINLRString__V_arg_arg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "arg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_replaceData_IIINLRString__V_args[] = 
{
  &LibXMLCharacterData_methods_replaceData_IIINLRString__V_arg_offset,
  &LibXMLCharacterData_methods_replaceData_IIINLRString__V_arg_count,
  &LibXMLCharacterData_methods_replaceData_IIINLRString__V_arg_arg,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_replaceData_IIINLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLCharacterData_replaceData_IIINLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_replaceData_IIINLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "replaceData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_replaceData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_replaceData_IIINLRString__V_args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_replaceData_IIINLRString__V_exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_replaceData_IIINLRString__V_dispatch, // invoke this method
  LibXMLCharacterData_replaceData_IIINLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_setData_INLRString__V_arg_data = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "data", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_setData_INLRString__V_args[] = 
{
  &LibXMLCharacterData_methods_setData_INLRString__V_arg_data,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_setData_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLCharacterData_setData_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_setData_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1_setData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_setData_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_setData_INLRString__V_exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_setData_INLRString__V_dispatch, // invoke this method
  LibXMLCharacterData_setData_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_subStringData_II_LRString__arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLCharacterData_methods_subStringData_II_LRString__arg_count = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "count", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_subStringData_II_LRString__args[] = 
{
  &LibXMLCharacterData_methods_subStringData_II_LRString__arg_offset,
  &LibXMLCharacterData_methods_subStringData_II_LRString__arg_count,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_subStringData_II_LRString__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLCharacterData_subStringData_II_LRString__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_subStringData_II_LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "subStringData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_subStringData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_subStringData_II_LRString__args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_subStringData_II_LRString__exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_subStringData_II_LRString__dispatch, // invoke this method
  LibXMLCharacterData_subStringData_II_LRString__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLCharacterData_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLCharacterData_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_8_toString", // alternative name of method
  -1, // altlabelHashCode
  LibXMLCharacterData_methods_toString__LRString__args, // the arguments
  0, //arguments count
  LibXMLCharacterData_methods_toString__LRString__exceptions, // the declared exceptions
  LibXMLCharacterData_MetainfoWrapper::LibXMLCharacterData_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLCharacterData_methods[] = 
{
  &LibXMLCharacterData_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLCharacterData_method_appendData_INLRString__V,
  &LibXMLCharacterData_method_deleteData_II_V,
  &LibXMLCharacterData_method_getData__LRString_,
  &LibXMLCharacterData_method_getLength__I,
  &LibXMLCharacterData_method_insertData_IINLRString__V,
  &LibXMLCharacterData_method_replaceData_IIINLRString__V,
  &LibXMLCharacterData_method_setData_INLRString__V,
  &LibXMLCharacterData_method_subStringData_II_LRString_,
  &LibXMLCharacterData_method_toString__LRString_,
  0
};


struct LibXMLCharacterData_MetaInfoInitializer
{  LibXMLCharacterData_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLCharacterData::clazzInfo();
    ci->fields =  _LibXMLCharacterData_fields;
    ci->methods =  _LibXMLCharacterData_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLCharacterData_MetaInfoInitializer LibXMLCharacterData_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLComment_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLComment>(length);
}

//static
::acdk::lang::RObject
LibXMLComment_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLComment_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLComment_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLComment::GetClass();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLComment_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLComment_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLComment_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLComment_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_0_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLComment_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLComment_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLComment_MetainfoWrapper::LibXMLComment_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLComment_methods[] = 
{
  &LibXMLComment_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct LibXMLComment_MetaInfoInitializer
{  LibXMLComment_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLComment::clazzInfo();
    ci->fields =  _LibXMLComment_fields;
    ci->methods =  _LibXMLComment_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLComment_MetaInfoInitializer LibXMLComment_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLDocument_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLDocument>(length);
}

//static
::acdk::lang::RObject
LibXMLDocument_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLDocument_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLDocument::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::adoptNode((org::w3c::dom::RNode)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->adoptNode((org::w3c::dom::RNode)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_canSetParameter_INLRString_INLRObject__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLDocument::canSetParameter((RString)args[0].getObjectVar(), (RObject)args[1].getObjectVar());
    else
      ret = This->canSetParameter((RString)args[0].getObjectVar(), (RObject)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createAttribute_INLRString__Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createAttribute((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createAttribute((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createCDATASection((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createCDATASection((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createComment_INLRString__Lorg_w3c_dom_RComment__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createComment((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createComment((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createDocumentFragment();
    else
        ret = (::acdk::lang::RObject)This->createDocumentFragment();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createElement_INLRString__Lorg_w3c_dom_RElement__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createElement((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createElement((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createElementNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createElementNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createEntityReference((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createEntityReference((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createExpression((RString)args[0].getObjectVar(), (org::w3c::dom::xpath::RXPathNSResolver)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createExpression((RString)args[0].getObjectVar(), (org::w3c::dom::xpath::RXPathNSResolver)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createNSResolver((org::w3c::dom::RNode)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createNSResolver((org::w3c::dom::RNode)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createNodeIterator((org::w3c::dom::RNode)args[0].getObjectVar(), args[1].getIntVar(), (org::w3c::dom::traversal::RNodeFilter)args[2].getObjectVar(), args[3].getBoolVar());
    else
        ret = (::acdk::lang::RObject)This->createNodeIterator((org::w3c::dom::RNode)args[0].getObjectVar(), args[1].getIntVar(), (org::w3c::dom::traversal::RNodeFilter)args[2].getObjectVar(), args[3].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createProcessingInstruction((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createProcessingInstruction((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createTextNode_INLRString__Lorg_w3c_dom_RText__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createTextNode((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createTextNode((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::createTreeWalker((org::w3c::dom::RNode)args[0].getObjectVar(), args[1].getIntVar(), (org::w3c::dom::traversal::RNodeFilter)args[2].getObjectVar(), args[3].getBoolVar());
    else
        ret = (::acdk::lang::RObject)This->createTreeWalker((org::w3c::dom::RNode)args[0].getObjectVar(), args[1].getIntVar(), (org::w3c::dom::traversal::RNodeFilter)args[2].getObjectVar(), args[3].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::evaluate((RString)args[0].getObjectVar(), (org::w3c::dom::RNode)args[1].getObjectVar(), (org::w3c::dom::xpath::RXPathNSResolver)args[2].getObjectVar(), args[3].getShortVar(), (RObject)args[4].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->evaluate((RString)args[0].getObjectVar(), (org::w3c::dom::RNode)args[1].getObjectVar(), (org::w3c::dom::xpath::RXPathNSResolver)args[2].getObjectVar(), args[3].getShortVar(), (RObject)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_finalize__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocument::finalize();
    else
        This->finalize();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getDoctype__Lorg_w3c_dom_RDocumentType__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getDoctype();
    else
        ret = (::acdk::lang::RObject)This->getDoctype();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getDocumentElement__Lorg_w3c_dom_RElement__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getDocumentElement();
    else
        ret = (::acdk::lang::RObject)This->getDocumentElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getDocumentURI__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getDocumentURI();
    else
        ret = (::acdk::lang::RObject)This->getDocumentURI();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getDomConfig__Lorg_w3c_dom_RDOMConfiguration__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getDomConfig();
    else
        ret = (::acdk::lang::RObject)This->getDomConfig();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getElementById_INLRString__Lorg_w3c_dom_RElement__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getElementById((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getElementById((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getElementsByTagName((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getElementsByTagName((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getElementsByTagNameNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getElementsByTagNameNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getImplementation__Lorg_w3c_dom_RDOMImplementation__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getImplementation();
    else
        ret = (::acdk::lang::RObject)This->getImplementation();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getInputEncoding__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getInputEncoding();
    else
        ret = (::acdk::lang::RObject)This->getInputEncoding();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getParameter_INLRString__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getParameter((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getParameter((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getParameterNames__LRStringArray__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getParameterNames();
    else
        ret = (::acdk::lang::RObject)This->getParameterNames();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getStrictErrorChecking__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLDocument::getStrictErrorChecking();
    else
      ret = This->getStrictErrorChecking();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getXmlEncoding__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getXmlEncoding();
    else
        ret = (::acdk::lang::RObject)This->getXmlEncoding();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getXmlStandalone__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLDocument::getXmlStandalone();
    else
      ret = This->getXmlStandalone();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_getXmlVersion__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::getXmlVersion();
    else
        ret = (::acdk::lang::RObject)This->getXmlVersion();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::importNode((org::w3c::dom::RNode)args[0].getObjectVar(), args[1].getBoolVar());
    else
        ret = (::acdk::lang::RObject)This->importNode((org::w3c::dom::RNode)args[0].getObjectVar(), args[1].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_normalizeDocument__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocument::normalizeDocument();
    else
        This->normalizeDocument();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::renameNode((org::w3c::dom::RNode)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (RString)args[2].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->renameNode((org::w3c::dom::RNode)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_setDocumentURI_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocument::setDocumentURI((RString)args[0].getObjectVar());
    else
        This->setDocumentURI((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_setParameter_INLRString_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocument::setParameter((RString)args[0].getObjectVar(), (RObject)args[1].getObjectVar());
    else
        This->setParameter((RString)args[0].getObjectVar(), (RObject)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_setStrictErrorChecking_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocument::setStrictErrorChecking(args[0].getBoolVar());
    else
        This->setStrictErrorChecking(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_setXmlStandalone_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocument::setXmlStandalone(args[0].getBoolVar());
    else
        This->setXmlStandalone(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_setXmlVersion_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocument::setXmlVersion((RString)args[0].getObjectVar());
    else
        This->setXmlVersion((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocument_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocument::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__canonicalForm_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_canonicalForm, flags);
    else
      This->_canonicalForm = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__cdataSections_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_cdataSections, flags);
    else
      This->_cdataSections = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__checkCharacterNormalization_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_checkCharacterNormalization, flags);
    else
      This->_checkCharacterNormalization = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__comments_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_comments, flags);
    else
      This->_comments = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__datatypeNormalization_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_datatypeNormalization, flags);
    else
      This->_datatypeNormalization = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__domImpl_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_domImpl, flags);
    else
      This->_domImpl = (org::w3c::dom::RDOMImplementation)var.getObjectVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__elementContentWhitespace_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_elementContentWhitespace, flags);
    else
      This->_elementContentWhitespace = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__entities_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_entities, flags);
    else
      This->_entities = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__errorHandler_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_errorHandler, flags);
    else
      This->_errorHandler = (org::w3c::dom::RDOMErrorHandler)var.getObjectVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__namespaceDeclarations_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_namespaceDeclarations, flags);
    else
      This->_namespaceDeclarations = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__namespaces_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_namespaces, flags);
    else
      This->_namespaces = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__normalizeCharacters_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_normalizeCharacters, flags);
    else
      This->_normalizeCharacters = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__splitCdataSections_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_splitCdataSections, flags);
    else
      This->_splitCdataSections = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__strictErrorChecking_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_strictErrorChecking, flags);
    else
      This->_strictErrorChecking = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__validate_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_validate, flags);
    else
      This->_validate = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__validateIfSchema_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_validateIfSchema, flags);
    else
      This->_validateIfSchema = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocument_fields__wellFormed_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocument* This = dmi_cast<LibXMLDocument>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_wellFormed, flags);
    else
      This->_wellFormed = var.getBoolVar();
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__canonicalForm = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_canonicalForm", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__canonicalForm_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__cdataSections = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_cdataSections", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__cdataSections_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__checkCharacterNormalization = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_checkCharacterNormalization", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__checkCharacterNormalization_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__comments = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_comments", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__comments_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__datatypeNormalization = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_datatypeNormalization", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__datatypeNormalization_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__domImpl = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_domImpl", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDOMImplementation::clazzInfo(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__domImpl_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__elementContentWhitespace = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_elementContentWhitespace", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__elementContentWhitespace_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__entities = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_entities", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__entities_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__errorHandler = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_errorHandler", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDOMErrorHandler::clazzInfo(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__errorHandler_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__namespaceDeclarations = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_namespaceDeclarations", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__namespaceDeclarations_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__namespaces = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_namespaces", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__namespaces_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__normalizeCharacters = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_normalizeCharacters", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__normalizeCharacters_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__splitCdataSections = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_splitCdataSections", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__splitCdataSections_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__strictErrorChecking = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_strictErrorChecking", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__strictErrorChecking_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__validate = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_validate", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__validate_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__validateIfSchema = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_validateIfSchema", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__validateIfSchema_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocument_fields__wellFormed = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_wellFormed", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_fields__wellFormed_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLDocument_fields[] = 
{
  &LibXMLDocument_fields__canonicalForm,
  &LibXMLDocument_fields__cdataSections,
  &LibXMLDocument_fields__checkCharacterNormalization,
  &LibXMLDocument_fields__comments,
  &LibXMLDocument_fields__datatypeNormalization,
  &LibXMLDocument_fields__domImpl,
  &LibXMLDocument_fields__elementContentWhitespace,
  &LibXMLDocument_fields__entities,
  &LibXMLDocument_fields__errorHandler,
  &LibXMLDocument_fields__namespaceDeclarations,
  &LibXMLDocument_fields__namespaces,
  &LibXMLDocument_fields__normalizeCharacters,
  &LibXMLDocument_fields__splitCdataSections,
  &LibXMLDocument_fields__strictErrorChecking,
  &LibXMLDocument_fields__validate,
  &LibXMLDocument_fields__validateIfSchema,
  &LibXMLDocument_fields__wellFormed,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_G_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_source = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "source", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLDocument_methods_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_source,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "adoptNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_s_adoptNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLDocument_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_args[] = 
{
  &LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_arg_name,
  &LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_canSetParameter_INLRString_INLRObject__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "canSetParameter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_y_canSetParameter", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_canSetParameter_INLRString_INLRObject__Z_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_canSetParameter_INLRString_INLRObject__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createAttribute_INLRString__Lorg_w3c_dom_RAttr__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createAttribute_INLRString__Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLDocument_methods_createAttribute_INLRString__Lorg_w3c_dom_RAttr__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createAttribute_INLRString__Lorg_w3c_dom_RAttr__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createAttribute_INLRString__Lorg_w3c_dom_RAttr__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createAttribute_INLRString__Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_a_createAttribute", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createAttribute_INLRString__Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createAttribute_INLRString__Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createAttribute_INLRString__Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  LibXMLDocument_createAttribute_INLRString__Lorg_w3c_dom_RAttr__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_qualifiedName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "qualifiedName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_namespaceURI,
  &LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_qualifiedName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createAttributeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_f_createAttributeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  LibXMLDocument_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__arg_data = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "data", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__args[] = 
{
  &LibXMLDocument_methods_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__arg_data,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createCDATASection", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RCDATASection::clazzInfo(), // return type
  "_8_createCDATASection", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__dispatch, // invoke this method
  LibXMLDocument_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createComment_INLRString__Lorg_w3c_dom_RComment__arg_data = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "data", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createComment_INLRString__Lorg_w3c_dom_RComment__args[] = 
{
  &LibXMLDocument_methods_createComment_INLRString__Lorg_w3c_dom_RComment__arg_data,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createComment_INLRString__Lorg_w3c_dom_RComment__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createComment_INLRString__Lorg_w3c_dom_RComment_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createComment", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RComment::clazzInfo(), // return type
  "_7_createComment", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createComment_INLRString__Lorg_w3c_dom_RComment__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createComment_INLRString__Lorg_w3c_dom_RComment__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createComment_INLRString__Lorg_w3c_dom_RComment__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createDocumentFragment", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocumentFragment::clazzInfo(), // return type
  "_5_createDocumentFragment", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createElement_INLRString__Lorg_w3c_dom_RElement__arg_tagName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "tagName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createElement_INLRString__Lorg_w3c_dom_RElement__args[] = 
{
  &LibXMLDocument_methods_createElement_INLRString__Lorg_w3c_dom_RElement__arg_tagName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createElement_INLRString__Lorg_w3c_dom_RElement__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createElement_INLRString__Lorg_w3c_dom_RElement__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createElement_INLRString__Lorg_w3c_dom_RElement_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RElement::clazzInfo(), // return type
  "_4_createElement", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createElement_INLRString__Lorg_w3c_dom_RElement__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createElement_INLRString__Lorg_w3c_dom_RElement__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createElement_INLRString__Lorg_w3c_dom_RElement__dispatch, // invoke this method
  LibXMLDocument_createElement_INLRString__Lorg_w3c_dom_RElement__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__arg_qualifiedName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "qualifiedName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__args[] = 
{
  &LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__arg_namespaceURI,
  &LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__arg_qualifiedName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createElementNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RElement::clazzInfo(), // return type
  "_e_createElementNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__dispatch, // invoke this method
  LibXMLDocument_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__args[] = 
{
  &LibXMLDocument_methods_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createEntityReference", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::REntityReference::clazzInfo(), // return type
  "_b_createEntityReference", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__dispatch, // invoke this method
  LibXMLDocument_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__arg_expression = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "expression", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__arg_resolver = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "resolver", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::xpath::RXPathNSResolver::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__args[] = 
{
  &LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__arg_expression,
  &LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__arg_resolver,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__exceptions[] =
{
  org::w3c::dom::xpath::RXPathException::clazzInfo(), 
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::xpath::XPathException) == true)
    THROW_INSTANCE( org::w3c::dom::xpath::RXPathException(ex));
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createExpression", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::xpath::RXPathExpression::clazzInfo(), // return type
  "_A_createExpression", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__dispatch, // invoke this method
  LibXMLDocument_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__arg_nodeResolver = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "nodeResolver", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__args[] = 
{
  &LibXMLDocument_methods_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__arg_nodeResolver,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createNSResolver", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::xpath::RXPathNSResolver::clazzInfo(), // return type
  "_B_createNSResolver", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_root = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "root", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_whatToShow = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "whatToShow", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_filter = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "filter", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::traversal::RNodeFilter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_entityReferenceExpansion = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "entityReferenceExpansion", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__args[] = 
{
  &LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_root,
  &LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_whatToShow,
  &LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_filter,
  &LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__arg_entityReferenceExpansion,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createNodeIterator", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::traversal::RNodeIterator::clazzInfo(), // return type
  "_D_createNodeIterator", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__dispatch, // invoke this method
  LibXMLDocument_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__arg_target = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "target", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__arg_data = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "data", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__args[] = 
{
  &LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__arg_target,
  &LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__arg_data,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createProcessingInstruction", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RProcessingInstruction::clazzInfo(), // return type
  "_9_createProcessingInstruction", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__dispatch, // invoke this method
  LibXMLDocument_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createTextNode_INLRString__Lorg_w3c_dom_RText__arg_data = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "data", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createTextNode_INLRString__Lorg_w3c_dom_RText__args[] = 
{
  &LibXMLDocument_methods_createTextNode_INLRString__Lorg_w3c_dom_RText__arg_data,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createTextNode_INLRString__Lorg_w3c_dom_RText__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createTextNode_INLRString__Lorg_w3c_dom_RText_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createTextNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RText::clazzInfo(), // return type
  "_6_createTextNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createTextNode_INLRString__Lorg_w3c_dom_RText__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createTextNode_INLRString__Lorg_w3c_dom_RText__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createTextNode_INLRString__Lorg_w3c_dom_RText__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_root = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "root", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_whatToShow = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "whatToShow", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_filter = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "filter", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::traversal::RNodeFilter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_entityReferenceExpansion = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "entityReferenceExpansion", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__args[] = 
{
  &LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_root,
  &LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_whatToShow,
  &LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_filter,
  &LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__arg_entityReferenceExpansion,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createTreeWalker", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::traversal::RTreeWalker::clazzInfo(), // return type
  "_E_createTreeWalker", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__dispatch, // invoke this method
  LibXMLDocument_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_expression = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "expression", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_contextNode = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "contextNode", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_resolver = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "resolver", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::xpath::RXPathNSResolver::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_type = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "type", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_result = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "result", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__args[] = 
{
  &LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_expression,
  &LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_contextNode,
  &LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_resolver,
  &LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_type,
  &LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__arg_result,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__exceptions[] =
{
  org::w3c::dom::xpath::RXPathException::clazzInfo(), 
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::xpath::XPathException) == true)
    THROW_INSTANCE( org::w3c::dom::xpath::RXPathException(ex));
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "evaluate", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_C_evaluate", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__dispatch, // invoke this method
  LibXMLDocument_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_finalize__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_finalize__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_finalize__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "finalize", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_0_finalize", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_finalize__V_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_finalize__V_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_finalize__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getDoctype__Lorg_w3c_dom_RDocumentType__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getDoctype__Lorg_w3c_dom_RDocumentType__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getDoctype__Lorg_w3c_dom_RDocumentType_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getDoctype", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocumentType::clazzInfo(), // return type
  "_1_getDoctype", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getDoctype__Lorg_w3c_dom_RDocumentType__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getDoctype__Lorg_w3c_dom_RDocumentType__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getDoctype__Lorg_w3c_dom_RDocumentType__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getDocumentElement__Lorg_w3c_dom_RElement__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getDocumentElement__Lorg_w3c_dom_RElement__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getDocumentElement__Lorg_w3c_dom_RElement_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getDocumentElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RElement::clazzInfo(), // return type
  "_3_getDocumentElement", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getDocumentElement__Lorg_w3c_dom_RElement__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getDocumentElement__Lorg_w3c_dom_RElement__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getDocumentElement__Lorg_w3c_dom_RElement__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getDocumentURI__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getDocumentURI__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getDocumentURI__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getDocumentURI", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_q_getDocumentURI", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getDocumentURI__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getDocumentURI__LRString__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getDocumentURI__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getDomConfig__Lorg_w3c_dom_RDOMConfiguration__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getDomConfig__Lorg_w3c_dom_RDOMConfiguration__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getDomConfig__Lorg_w3c_dom_RDOMConfiguration_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getDomConfig", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDOMConfiguration::clazzInfo(), // return type
  "_t_getDomConfig", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getDomConfig__Lorg_w3c_dom_RDOMConfiguration__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getDomConfig__Lorg_w3c_dom_RDOMConfiguration__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getDomConfig__Lorg_w3c_dom_RDOMConfiguration__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_getElementById_INLRString__Lorg_w3c_dom_RElement__arg_elementId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "elementId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getElementById_INLRString__Lorg_w3c_dom_RElement__args[] = 
{
  &LibXMLDocument_methods_getElementById_INLRString__Lorg_w3c_dom_RElement__arg_elementId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getElementById_INLRString__Lorg_w3c_dom_RElement__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getElementById_INLRString__Lorg_w3c_dom_RElement_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getElementById", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RElement::clazzInfo(), // return type
  "_h_getElementById", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getElementById_INLRString__Lorg_w3c_dom_RElement__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getElementById_INLRString__Lorg_w3c_dom_RElement__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getElementById_INLRString__Lorg_w3c_dom_RElement__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__arg_tagName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "tagName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__args[] = 
{
  &LibXMLDocument_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__arg_tagName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getElementsByTagName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNodeList::clazzInfo(), // return type
  "_c_getElementsByTagName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__args[] = 
{
  &LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_namespaceURI,
  &LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getElementsByTagNameNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNodeList::clazzInfo(), // return type
  "_g_getElementsByTagNameNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getImplementation__Lorg_w3c_dom_RDOMImplementation__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getImplementation__Lorg_w3c_dom_RDOMImplementation__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getImplementation__Lorg_w3c_dom_RDOMImplementation_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getImplementation", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDOMImplementation::clazzInfo(), // return type
  "_2_getImplementation", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getImplementation__Lorg_w3c_dom_RDOMImplementation__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getImplementation__Lorg_w3c_dom_RDOMImplementation__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getImplementation__Lorg_w3c_dom_RDOMImplementation__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getInputEncoding__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getInputEncoding__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getInputEncoding__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getInputEncoding", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_i_getInputEncoding", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getInputEncoding__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getInputEncoding__LRString__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getInputEncoding__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_getParameter_INLRString__LRObject__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getParameter_INLRString__LRObject__args[] = 
{
  &LibXMLDocument_methods_getParameter_INLRString__LRObject__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getParameter_INLRString__LRObject__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_getParameter_INLRString__LRObject__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getParameter_INLRString__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getParameter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_x_getParameter", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getParameter_INLRString__LRObject__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getParameter_INLRString__LRObject__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getParameter_INLRString__LRObject__dispatch, // invoke this method
  LibXMLDocument_getParameter_INLRString__LRObject__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getParameterNames__LRStringArray__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getParameterNames__LRStringArray__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getParameterNames__LRStringArray_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getParameterNames", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RStringArray::clazzInfo(), // return type
  "_z_getParameterNames", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getParameterNames__LRStringArray__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getParameterNames__LRStringArray__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getParameterNames__LRStringArray__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getStrictErrorChecking__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getStrictErrorChecking__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getStrictErrorChecking__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getStrictErrorChecking", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_o_getStrictErrorChecking", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getStrictErrorChecking__Z_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getStrictErrorChecking__Z_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getStrictErrorChecking__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getXmlEncoding__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getXmlEncoding__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getXmlEncoding__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getXmlEncoding", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_j_getXmlEncoding", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getXmlEncoding__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getXmlEncoding__LRString__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getXmlEncoding__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getXmlStandalone__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getXmlStandalone__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getXmlStandalone__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getXmlStandalone", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_k_getXmlStandalone", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getXmlStandalone__Z_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getXmlStandalone__Z_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getXmlStandalone__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_getXmlVersion__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_getXmlVersion__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_getXmlVersion__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getXmlVersion", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_m_getXmlVersion", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_getXmlVersion__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_getXmlVersion__LRString__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_getXmlVersion__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__arg_importedNode = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "importedNode", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__arg_deep = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "deep", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__arg_importedNode,
  &LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__arg_deep,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "importNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_d_importNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLDocument_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_normalizeDocument__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_normalizeDocument__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_normalizeDocument__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "normalizeDocument", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_u_normalizeDocument", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_normalizeDocument__V_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_normalizeDocument__V_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_normalizeDocument__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_n = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "n", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_qualifiedName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "qualifiedName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_n,
  &LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_namespaceURI,
  &LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_qualifiedName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "renameNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_v_renameNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_setDocumentURI_INLRString__V_arg_documentURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "documentURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_setDocumentURI_INLRString__V_args[] = 
{
  &LibXMLDocument_methods_setDocumentURI_INLRString__V_arg_documentURI,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_setDocumentURI_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_setDocumentURI_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setDocumentURI", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_r_setDocumentURI", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_setDocumentURI_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_setDocumentURI_INLRString__V_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_setDocumentURI_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_args[] = 
{
  &LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_arg_name,
  &LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLDocument_setParameter_INLRString_INLRObject__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_setParameter_INLRString_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setParameter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_w_setParameter", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_setParameter_INLRString_INLRObject__V_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_setParameter_INLRString_INLRObject__V_dispatch, // invoke this method
  LibXMLDocument_setParameter_INLRString_INLRObject__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_setStrictErrorChecking_Z_V_arg_strictErrorChecking = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "strictErrorChecking", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_setStrictErrorChecking_Z_V_args[] = 
{
  &LibXMLDocument_methods_setStrictErrorChecking_Z_V_arg_strictErrorChecking,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_setStrictErrorChecking_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_setStrictErrorChecking_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setStrictErrorChecking", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_p_setStrictErrorChecking", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_setStrictErrorChecking_Z_V_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_setStrictErrorChecking_Z_V_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_setStrictErrorChecking_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_setXmlStandalone_Z_V_arg_xmlStandalone = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "xmlStandalone", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_setXmlStandalone_Z_V_args[] = 
{
  &LibXMLDocument_methods_setXmlStandalone_Z_V_arg_xmlStandalone,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_setXmlStandalone_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_setXmlStandalone_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setXmlStandalone", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_l_setXmlStandalone", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_setXmlStandalone_Z_V_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_setXmlStandalone_Z_V_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_setXmlStandalone_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocument_methods_setXmlVersion_INLRString__V_arg_xmlVersion = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "xmlVersion", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_setXmlVersion_INLRString__V_args[] = 
{
  &LibXMLDocument_methods_setXmlVersion_INLRString__V_arg_xmlVersion,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_setXmlVersion_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_setXmlVersion_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setXmlVersion", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_n_setXmlVersion", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_setXmlVersion_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_setXmlVersion_INLRString__V_exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_setXmlVersion_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocument_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocument_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_F_toString", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocument_methods_toString__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocument_methods_toString__LRString__exceptions, // the declared exceptions
  LibXMLDocument_MetainfoWrapper::LibXMLDocument_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLDocument_methods[] = 
{
  &LibXMLDocument_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLDocument_method_adoptNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_,
  &LibXMLDocument_method_canSetParameter_INLRString_INLRObject__Z,
  &LibXMLDocument_method_createAttribute_INLRString__Lorg_w3c_dom_RAttr_,
  &LibXMLDocument_method_createAttributeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr_,
  &LibXMLDocument_method_createCDATASection_INLRString__Lorg_w3c_dom_RCDATASection_,
  &LibXMLDocument_method_createComment_INLRString__Lorg_w3c_dom_RComment_,
  &LibXMLDocument_method_createDocumentFragment__Lorg_w3c_dom_RDocumentFragment_,
  &LibXMLDocument_method_createElement_INLRString__Lorg_w3c_dom_RElement_,
  &LibXMLDocument_method_createElementNS_INLRString_INLRString__Lorg_w3c_dom_RElement_,
  &LibXMLDocument_method_createEntityReference_INLRString__Lorg_w3c_dom_REntityReference_,
  &LibXMLDocument_method_createExpression_INLRString_INLorg_w3c_dom_xpath_RXPathNSResolver__Lorg_w3c_dom_xpath_RXPathExpression_,
  &LibXMLDocument_method_createNSResolver_INLorg_w3c_dom_RNode__Lorg_w3c_dom_xpath_RXPathNSResolver_,
  &LibXMLDocument_method_createNodeIterator_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RNodeIterator_,
  &LibXMLDocument_method_createProcessingInstruction_INLRString_INLRString__Lorg_w3c_dom_RProcessingInstruction_,
  &LibXMLDocument_method_createTextNode_INLRString__Lorg_w3c_dom_RText_,
  &LibXMLDocument_method_createTreeWalker_INLorg_w3c_dom_RNode_IINLorg_w3c_dom_traversal_RNodeFilter_Z_Lorg_w3c_dom_traversal_RTreeWalker_,
  &LibXMLDocument_method_evaluate_INLRString_INLorg_w3c_dom_RNode_INLorg_w3c_dom_xpath_RXPathNSResolver_SINLRObject__LRObject_,
  &LibXMLDocument_method_finalize__V,
  &LibXMLDocument_method_getDoctype__Lorg_w3c_dom_RDocumentType_,
  &LibXMLDocument_method_getDocumentElement__Lorg_w3c_dom_RElement_,
  &LibXMLDocument_method_getDocumentURI__LRString_,
  &LibXMLDocument_method_getDomConfig__Lorg_w3c_dom_RDOMConfiguration_,
  &LibXMLDocument_method_getElementById_INLRString__Lorg_w3c_dom_RElement_,
  &LibXMLDocument_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList_,
  &LibXMLDocument_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList_,
  &LibXMLDocument_method_getImplementation__Lorg_w3c_dom_RDOMImplementation_,
  &LibXMLDocument_method_getInputEncoding__LRString_,
  &LibXMLDocument_method_getParameter_INLRString__LRObject_,
  &LibXMLDocument_method_getParameterNames__LRStringArray_,
  &LibXMLDocument_method_getStrictErrorChecking__Z,
  &LibXMLDocument_method_getXmlEncoding__LRString_,
  &LibXMLDocument_method_getXmlStandalone__Z,
  &LibXMLDocument_method_getXmlVersion__LRString_,
  &LibXMLDocument_method_importNode_INLorg_w3c_dom_RNode_Z_Lorg_w3c_dom_RNode_,
  &LibXMLDocument_method_normalizeDocument__V,
  &LibXMLDocument_method_renameNode_INLorg_w3c_dom_RNode_INLRString_INLRString__Lorg_w3c_dom_RNode_,
  &LibXMLDocument_method_setDocumentURI_INLRString__V,
  &LibXMLDocument_method_setParameter_INLRString_INLRObject__V,
  &LibXMLDocument_method_setStrictErrorChecking_Z_V,
  &LibXMLDocument_method_setXmlStandalone_Z_V,
  &LibXMLDocument_method_setXmlVersion_INLRString__V,
  &LibXMLDocument_method_toString__LRString_,
  0
};


struct LibXMLDocument_MetaInfoInitializer
{  LibXMLDocument_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLDocument::clazzInfo();
    ci->fields =  _LibXMLDocument_fields;
    ci->methods =  _LibXMLDocument_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLDocument_MetaInfoInitializer LibXMLDocument_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLDocumentBuilder_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLDocumentBuilder>(length);
}

//static
::acdk::lang::RObject
LibXMLDocumentBuilder_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLDocumentBuilder_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLDocumentBuilder::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new LibXMLDocumentBuilder(args[0].getBoolVar(), args[1].getBoolVar(), args[2].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new LibXMLDocumentBuilder();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new LibXMLDocumentBuilder(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new LibXMLDocumentBuilder(args[0].getBoolVar(), args[1].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method__error_INLRString_IIINLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocumentBuilder::_error((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar());
    else
        This->_error((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method__fatalError_INLRString_IIINLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocumentBuilder::_fatalError((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar());
    else
        This->_fatalError((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::_parseStream((acdk::io::RReader)args[0].getObjectVar(), (RbyteArray)args[1].getObjectVar(), (RString)args[2].getObjectVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar(), args[5].getBoolVar(), args[6].getBoolVar(), args[7].getBoolVar(), args[8].getBoolVar(), args[9].getBoolVar());
    else
        ret = (::acdk::lang::RObject)This->_parseStream((acdk::io::RReader)args[0].getObjectVar(), (RbyteArray)args[1].getObjectVar(), (RString)args[2].getObjectVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar(), args[5].getBoolVar(), args[6].getBoolVar(), args[7].getBoolVar(), args[8].getBoolVar(), args[9].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::_resolveEntity((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->_resolveEntity((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method__setDocumentLocator_INLRObject_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocumentBuilder::_setDocumentLocator((RObject)args[0].getObjectVar(), (RObject)args[1].getObjectVar());
    else
        This->_setDocumentLocator((RObject)args[0].getObjectVar(), (RObject)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method__warning_INLRString_IIINLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocumentBuilder::_warning((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar());
    else
        This->_warning((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (RString)args[3].getObjectVar(), (RString)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::createDocument((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (org::w3c::dom::RDocumentType)args[2].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createDocument((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (org::w3c::dom::RDocumentType)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::createDocumentType((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (RString)args[2].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->createDocumentType((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::getDOMImplementation();
    else
        ret = (::acdk::lang::RObject)This->getDOMImplementation();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_getExtendedFlags__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLDocumentBuilder::getExtendedFlags();
    else
      ret = This->getExtendedFlags();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_getFeature_INLRString_INLRString__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::getFeature((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getFeature((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_hasFeature_INLRString_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLDocumentBuilder::hasFeature((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
      ret = This->hasFeature((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_isNamespaceAware__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLDocumentBuilder::isNamespaceAware();
    else
      ret = This->isNamespaceAware();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_isValidating__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLDocumentBuilder::isValidating();
    else
      ret = This->isValidating();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::newDocument();
    else
        ret = (::acdk::lang::RObject)This->newDocument();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::parse((org::xml::sax::RInputSource)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((org::xml::sax::RInputSource)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::parse((acdk::io::RFile)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((acdk::io::RFile)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::parse((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::parse((acdk::io::RReader)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((acdk::io::RReader)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentBuilder::parse((acdk::io::RReader)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((acdk::io::RReader)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocumentBuilder::setEntityResolver((org::xml::sax::REntityResolver)args[0].getObjectVar());
    else
        This->setEntityResolver((org::xml::sax::REntityResolver)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocumentBuilder::setErrorHandler((org::xml::sax::RErrorHandler)args[0].getObjectVar());
    else
        This->setErrorHandler((org::xml::sax::RErrorHandler)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentBuilder_method_setExtendedFlags_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLDocumentBuilder::setExtendedFlags(args[0].getIntVar());
    else
        This->setExtendedFlags(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocumentBuilder_fields__coalesce_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_coalesce, flags);
    else
      This->_coalesce = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocumentBuilder_fields__entityResolver_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_entityResolver, flags);
    else
      This->_entityResolver = (org::xml::sax::REntityResolver)var.getObjectVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocumentBuilder_fields__errorHandler_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_errorHandler, flags);
    else
      This->_errorHandler = (org::xml::sax::RErrorHandler)var.getObjectVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocumentBuilder_fields__expandEntities_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_expandEntities, flags);
    else
      This->_expandEntities = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocumentBuilder_fields__extendedFlags_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_extendedFlags, flags);
    else
      This->_extendedFlags = var.getIntVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocumentBuilder_fields__seenFatalError_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_seenFatalError, flags);
    else
      This->_seenFatalError = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLDocumentBuilder_fields__validate_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLDocumentBuilder* This = dmi_cast<LibXMLDocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_validate, flags);
    else
      This->_validate = var.getBoolVar();
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocumentBuilder_fields__coalesce = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_coalesce", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_fields__coalesce_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocumentBuilder_fields__entityResolver = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_entityResolver", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::REntityResolver::clazzInfo(),
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_fields__entityResolver_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocumentBuilder_fields__errorHandler = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_errorHandler", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::RErrorHandler::clazzInfo(),
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_fields__errorHandler_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocumentBuilder_fields__expandEntities = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_expandEntities", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_fields__expandEntities_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocumentBuilder_fields__extendedFlags = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_extendedFlags", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_fields__extendedFlags_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocumentBuilder_fields__seenFatalError = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_seenFatalError", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_fields__seenFatalError_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLDocumentBuilder_fields__validate = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_validate", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_fields__validate_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLDocumentBuilder_fields[] = 
{
  &LibXMLDocumentBuilder_fields__coalesce,
  &LibXMLDocumentBuilder_fields__entityResolver,
  &LibXMLDocumentBuilder_fields__errorHandler,
  &LibXMLDocumentBuilder_fields__expandEntities,
  &LibXMLDocumentBuilder_fields__extendedFlags,
  &LibXMLDocumentBuilder_fields__seenFatalError,
  &LibXMLDocumentBuilder_fields__validate,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_r_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__arg_validate = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "validate", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__arg_coalesce = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "coalesce", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__arg_expandEntities = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "expandEntities", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__args[] = 
{
  &LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__arg_validate,
  &LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__arg_coalesce,
  &LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__arg_expandEntities,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "LibXMLDocumentBuilder", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  LibXMLDocumentBuilder::clazzInfo(), // return type
  "_0_LibXMLDocumentBuilder", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "LibXMLDocumentBuilder", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  LibXMLDocumentBuilder::clazzInfo(), // return type
  "_1_LibXMLDocumentBuilder", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__arg_validate = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "validate", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__args[] = 
{
  &LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__arg_validate,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "LibXMLDocumentBuilder", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  LibXMLDocumentBuilder::clazzInfo(), // return type
  "_2_LibXMLDocumentBuilder", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__arg_validate = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "validate", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__arg_coalesce = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "coalesce", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__args[] = 
{
  &LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__arg_validate,
  &LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__arg_coalesce,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "LibXMLDocumentBuilder", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  LibXMLDocumentBuilder::clazzInfo(), // return type
  "_3_LibXMLDocumentBuilder", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_message = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "message", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_lineNumber = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "lineNumber", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_columnNumber = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "columnNumber", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_publicId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "publicId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_systemId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_args[] = 
{
  &LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_message,
  &LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_lineNumber,
  &LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_columnNumber,
  &LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_publicId,
  &LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_arg_systemId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method__error_INLRString_IIINLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_error", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_p__error", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods__error_INLRString_IIINLRString_INLRString__V_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method__error_INLRString_IIINLRString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_message = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "message", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_lineNumber = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "lineNumber", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_columnNumber = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "columnNumber", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_publicId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "publicId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_systemId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_args[] = 
{
  &LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_message,
  &LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_lineNumber,
  &LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_columnNumber,
  &LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_publicId,
  &LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_arg_systemId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method__fatalError_INLRString_IIINLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_fatalError", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_q__fatalError", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods__fatalError_INLRString_IIINLRString_INLRString__V_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method__fatalError_INLRString_IIINLRString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_detectBuffer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "detectBuffer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_publicId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "publicId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_systemId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_base = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "base", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_validate = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "validate", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_coalesce = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "coalesce", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_expandEntities = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "expandEntities", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_entityResolver = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "entityResolver", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_errorHandler = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "errorHandler", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__args[] = 
{
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_in,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_detectBuffer,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_publicId,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_systemId,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_base,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_validate,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_coalesce,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_expandEntities,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_entityResolver,
  &LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__arg_errorHandler,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_parseStream", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_f__parseStream", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__arg_publicId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "publicId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__arg_systemId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__args[] = 
{
  &LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__arg_publicId,
  &LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__arg_systemId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void LibXMLDocumentBuilder__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method__resolveEntity_INLRString_INLRString__Lacdk_io_RReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_resolveEntity", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RReader::clazzInfo(), // return type
  "_n__resolveEntity", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__dispatch, // invoke this method
  LibXMLDocumentBuilder__resolveEntity_INLRString_INLRString__Lacdk_io_RReader__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_arg_ctx = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ctx", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_arg_loc = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "loc", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_args[] = 
{
  &LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_arg_ctx,
  &LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_arg_loc,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method__setDocumentLocator_INLRObject_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_setDocumentLocator", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_m__setDocumentLocator", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods__setDocumentLocator_INLRObject_INLRObject__V_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method__setDocumentLocator_INLRObject_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_message = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "message", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_lineNumber = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "lineNumber", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_columnNumber = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "columnNumber", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_publicId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "publicId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_systemId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_args[] = 
{
  &LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_message,
  &LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_lineNumber,
  &LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_columnNumber,
  &LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_publicId,
  &LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_arg_systemId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method__warning_INLRString_IIINLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_warning", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_o__warning", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods__warning_INLRString_IIINLRString_INLRString__V_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method__warning_INLRString_IIINLRString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__arg_qualifiedName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "qualifiedName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__arg_doctype = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "doctype", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocumentType::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__args[] = 
{
  &LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__arg_namespaceURI,
  &LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__arg_qualifiedName,
  &LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__arg_doctype,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createDocument", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_k_createDocument", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__arg_qualifiedName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "qualifiedName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__arg_publicId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "publicId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__arg_systemId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__args[] = 
{
  &LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__arg_qualifiedName,
  &LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__arg_publicId,
  &LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__arg_systemId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "createDocumentType", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocumentType::clazzInfo(), // return type
  "_l_createDocumentType", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getDOMImplementation", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDOMImplementation::clazzInfo(), // return type
  "_4_getDOMImplementation", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_getExtendedFlags__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_getExtendedFlags__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_getExtendedFlags__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getExtendedFlags", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_8_getExtendedFlags", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_getExtendedFlags__I_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_getExtendedFlags__I_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_getExtendedFlags__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__arg_feature = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "feature", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__arg_version = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "version", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__args[] = 
{
  &LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__arg_feature,
  &LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__arg_version,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_getFeature_INLRString_INLRString__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getFeature", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_j_getFeature", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_getFeature_INLRString_INLRString__LRObject__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_getFeature_INLRString_INLRString__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_arg_feature = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "feature", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_arg_version = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "version", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_args[] = 
{
  &LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_arg_feature,
  &LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_arg_version,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_hasFeature_INLRString_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hasFeature", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_i_hasFeature", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_hasFeature_INLRString_INLRString__Z_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_hasFeature_INLRString_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_isNamespaceAware__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_isNamespaceAware__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_isNamespaceAware__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isNamespaceAware", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_5_isNamespaceAware", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_isNamespaceAware__Z_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_isNamespaceAware__Z_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_isNamespaceAware__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_isValidating__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_isValidating__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_isValidating__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isValidating", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_6_isValidating", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_isValidating__Z_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_isValidating__Z_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_isValidating__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "newDocument", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_9_newDocument", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__arg_input = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "input", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::RInputSource::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__args[] = 
{
  &LibXMLDocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__arg_input,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void LibXMLDocumentBuilder_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_a_parse", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  LibXMLDocumentBuilder_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RFile::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__args[] = 
{
  &LibXMLDocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__arg_file,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void LibXMLDocumentBuilder_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_b_parse", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  LibXMLDocumentBuilder_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__arg_uri = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "uri", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__args[] = 
{
  &LibXMLDocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__arg_uri,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void LibXMLDocumentBuilder_parse_INLRString__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_e_parse", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  LibXMLDocumentBuilder_parse_INLRString__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__arg_reader = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "reader", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__args[] = 
{
  &LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__arg_reader,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void LibXMLDocumentBuilder_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_c_parse", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  LibXMLDocumentBuilder_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_reader = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "reader", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_systemID = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemID", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__args[] = 
{
  &LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_reader,
  &LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_systemID,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void LibXMLDocumentBuilder_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_d_parse", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  LibXMLDocumentBuilder_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_arg_resolver = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "resolver", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::REntityResolver::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_args[] = 
{
  &LibXMLDocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_arg_resolver,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setEntityResolver", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_g_setEntityResolver", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_arg_handler = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "handler", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::RErrorHandler::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_args[] = 
{
  &LibXMLDocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_arg_handler,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setErrorHandler", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_h_setErrorHandler", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLDocumentBuilder_methods_setExtendedFlags_I_V_arg_flags = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "flags", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentBuilder_methods_setExtendedFlags_I_V_args[] = 
{
  &LibXMLDocumentBuilder_methods_setExtendedFlags_I_V_arg_flags,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder_methods_setExtendedFlags_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentBuilder_method_setExtendedFlags_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setExtendedFlags", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_setExtendedFlags", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentBuilder_methods_setExtendedFlags_I_V_args, // the arguments
  0, //arguments count
  LibXMLDocumentBuilder_methods_setExtendedFlags_I_V_exceptions, // the declared exceptions
  LibXMLDocumentBuilder_MetainfoWrapper::LibXMLDocumentBuilder_method_setExtendedFlags_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLDocumentBuilder_methods[] = 
{
  &LibXMLDocumentBuilder_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZZ_LRLibXMLDocumentBuilder_,
  &LibXMLDocumentBuilder_method_LibXMLDocumentBuilder__LRLibXMLDocumentBuilder_,
  &LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_Z_LRLibXMLDocumentBuilder_,
  &LibXMLDocumentBuilder_method_LibXMLDocumentBuilder_ZZ_LRLibXMLDocumentBuilder_,
  &LibXMLDocumentBuilder_method__error_INLRString_IIINLRString_INLRString__V,
  &LibXMLDocumentBuilder_method__fatalError_INLRString_IIINLRString_INLRString__V,
  &LibXMLDocumentBuilder_method__parseStream_INLacdk_io_RReader_INLRbyteArray_INLRString_INLRString_INLRString_ZZZZZ_Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method__resolveEntity_INLRString_INLRString__Lacdk_io_RReader_,
  &LibXMLDocumentBuilder_method__setDocumentLocator_INLRObject_INLRObject__V,
  &LibXMLDocumentBuilder_method__warning_INLRString_IIINLRString_INLRString__V,
  &LibXMLDocumentBuilder_method_createDocument_INLRString_INLRString_INLorg_w3c_dom_RDocumentType__Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method_createDocumentType_INLRString_INLRString_INLRString__Lorg_w3c_dom_RDocumentType_,
  &LibXMLDocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation_,
  &LibXMLDocumentBuilder_method_getExtendedFlags__I,
  &LibXMLDocumentBuilder_method_getFeature_INLRString_INLRString__LRObject_,
  &LibXMLDocumentBuilder_method_hasFeature_INLRString_INLRString__Z,
  &LibXMLDocumentBuilder_method_isNamespaceAware__Z,
  &LibXMLDocumentBuilder_method_isValidating__Z,
  &LibXMLDocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument_,
  &LibXMLDocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V,
  &LibXMLDocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V,
  &LibXMLDocumentBuilder_method_setExtendedFlags_I_V,
  0
};


struct LibXMLDocumentBuilder_MetaInfoInitializer
{  LibXMLDocumentBuilder_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLDocumentBuilder::clazzInfo();
    ci->fields =  _LibXMLDocumentBuilder_fields;
    ci->methods =  _LibXMLDocumentBuilder_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLDocumentBuilder_MetaInfoInitializer LibXMLDocumentBuilder_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLDocumentFragment_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLDocumentFragment>(length);
}

//static
::acdk::lang::RObject
LibXMLDocumentFragment_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLDocumentFragment_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentFragment_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLDocumentFragment::GetClass();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLDocumentFragment_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentFragment_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentFragment_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentFragment_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_0_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentFragment_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLDocumentFragment_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLDocumentFragment_MetainfoWrapper::LibXMLDocumentFragment_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLDocumentFragment_methods[] = 
{
  &LibXMLDocumentFragment_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct LibXMLDocumentFragment_MetaInfoInitializer
{  LibXMLDocumentFragment_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLDocumentFragment::clazzInfo();
    ci->fields =  _LibXMLDocumentFragment_fields;
    ci->methods =  _LibXMLDocumentFragment_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLDocumentFragment_MetaInfoInitializer LibXMLDocumentFragment_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLDocumentType_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLDocumentType>(length);
}

//static
::acdk::lang::RObject
LibXMLDocumentType_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLDocumentType_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLDocumentType::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_getEntities__Lorg_w3c_dom_RNamedNodeMap__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentType* This = dmi_cast<LibXMLDocumentType>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentType::getEntities();
    else
        ret = (::acdk::lang::RObject)This->getEntities();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_getInternalSubset__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentType* This = dmi_cast<LibXMLDocumentType>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentType::getInternalSubset();
    else
        ret = (::acdk::lang::RObject)This->getInternalSubset();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_getName__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentType* This = dmi_cast<LibXMLDocumentType>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentType::getName();
    else
        ret = (::acdk::lang::RObject)This->getName();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_getNotations__Lorg_w3c_dom_RNamedNodeMap__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentType* This = dmi_cast<LibXMLDocumentType>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentType::getNotations();
    else
        ret = (::acdk::lang::RObject)This->getNotations();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_getPublicID__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentType* This = dmi_cast<LibXMLDocumentType>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentType::getPublicID();
    else
        ret = (::acdk::lang::RObject)This->getPublicID();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_getSystemID__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentType* This = dmi_cast<LibXMLDocumentType>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentType::getSystemID();
    else
        ret = (::acdk::lang::RObject)This->getSystemID();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLDocumentType_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLDocumentType* This = dmi_cast<LibXMLDocumentType>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLDocumentType::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLDocumentType_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_7_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_getEntities__Lorg_w3c_dom_RNamedNodeMap__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_getEntities__Lorg_w3c_dom_RNamedNodeMap__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_getEntities__Lorg_w3c_dom_RNamedNodeMap_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getEntities", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNamedNodeMap::clazzInfo(), // return type
  "_1_getEntities", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_getEntities__Lorg_w3c_dom_RNamedNodeMap__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_getEntities__Lorg_w3c_dom_RNamedNodeMap__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_getEntities__Lorg_w3c_dom_RNamedNodeMap__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_getInternalSubset__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_getInternalSubset__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_getInternalSubset__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getInternalSubset", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_5_getInternalSubset", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_getInternalSubset__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_getInternalSubset__LRString__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_getInternalSubset__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_getName__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_getName__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_getName__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_0_getName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_getName__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_getName__LRString__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_getName__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_getNotations__Lorg_w3c_dom_RNamedNodeMap__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_getNotations__Lorg_w3c_dom_RNamedNodeMap__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_getNotations__Lorg_w3c_dom_RNamedNodeMap_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNotations", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNamedNodeMap::clazzInfo(), // return type
  "_2_getNotations", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_getNotations__Lorg_w3c_dom_RNamedNodeMap__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_getNotations__Lorg_w3c_dom_RNamedNodeMap__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_getNotations__Lorg_w3c_dom_RNamedNodeMap__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_getPublicID__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_getPublicID__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_getPublicID__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getPublicID", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_getPublicID", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_getPublicID__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_getPublicID__LRString__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_getPublicID__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_getSystemID__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_getSystemID__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_getSystemID__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getSystemID", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_4_getSystemID", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_getSystemID__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_getSystemID__LRString__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_getSystemID__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLDocumentType_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLDocumentType_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_6_toString", // alternative name of method
  -1, // altlabelHashCode
  LibXMLDocumentType_methods_toString__LRString__args, // the arguments
  0, //arguments count
  LibXMLDocumentType_methods_toString__LRString__exceptions, // the declared exceptions
  LibXMLDocumentType_MetainfoWrapper::LibXMLDocumentType_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLDocumentType_methods[] = 
{
  &LibXMLDocumentType_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLDocumentType_method_getEntities__Lorg_w3c_dom_RNamedNodeMap_,
  &LibXMLDocumentType_method_getInternalSubset__LRString_,
  &LibXMLDocumentType_method_getName__LRString_,
  &LibXMLDocumentType_method_getNotations__Lorg_w3c_dom_RNamedNodeMap_,
  &LibXMLDocumentType_method_getPublicID__LRString_,
  &LibXMLDocumentType_method_getSystemID__LRString_,
  &LibXMLDocumentType_method_toString__LRString_,
  0
};


struct LibXMLDocumentType_MetaInfoInitializer
{  LibXMLDocumentType_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLDocumentType::clazzInfo();
    ci->fields =  _LibXMLDocumentType_fields;
    ci->methods =  _LibXMLDocumentType_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLDocumentType_MetaInfoInitializer LibXMLDocumentType_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLElement_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLElement>(length);
}

//static
::acdk::lang::RObject
LibXMLElement_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLElement_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLElement::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_attribute_I_Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::attribute(args[0].getIntVar());
    else
        ret = (::acdk::lang::RObject)This->attribute(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_attributeCount__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLElement::attributeCount();
    else
      ret = This->attributeCount();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_getAttribute_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::getAttribute((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getAttribute((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_getAttributeNS_INLRString_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::getAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::getAttributeNode((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getAttributeNode((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::getAttributeNodeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getAttributeNodeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::getElementsByTagName((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getElementsByTagName((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::getElementsByTagNameNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getElementsByTagNameNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_getTagName__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::getTagName();
    else
        ret = (::acdk::lang::RObject)This->getTagName();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_hasAttribute_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLElement::hasAttribute((RString)args[0].getObjectVar());
    else
      ret = This->hasAttribute((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_hasAttributeNS_INLRString_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLElement::hasAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
      ret = This->hasAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_normalize__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::normalize();
    else
        This->normalize();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_removeAttribute_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::removeAttribute((RString)args[0].getObjectVar());
    else
        This->removeAttribute((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_removeAttributeNS_INLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::removeAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        This->removeAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::removeAttributeNode((org::w3c::dom::RAttr)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->removeAttributeNode((org::w3c::dom::RAttr)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_setAttribute_INLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::setAttribute((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        This->setAttribute((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_setAttributeNS_INLRString_INLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::setAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (RString)args[2].getObjectVar());
    else
        This->setAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), (RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::setAttributeNode((org::w3c::dom::RAttr)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->setAttributeNode((org::w3c::dom::RAttr)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::setAttributeNodeNS((org::w3c::dom::RAttr)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->setAttributeNodeNS((org::w3c::dom::RAttr)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_setIdAttribute_INLRString_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::setIdAttribute((RString)args[0].getObjectVar(), args[1].getBoolVar());
    else
        This->setIdAttribute((RString)args[0].getObjectVar(), args[1].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_setIdAttributeNS_INLRString_INLRString_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::setIdAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), args[2].getBoolVar());
    else
        This->setIdAttributeNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar(), args[2].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLElement::setIdAttributeNode((org::w3c::dom::RAttr)args[0].getObjectVar(), args[1].getBoolVar());
    else
        This->setIdAttributeNode((org::w3c::dom::RAttr)args[0].getObjectVar(), args[1].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLElement_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLElement* This = dmi_cast<LibXMLElement>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLElement::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLElement_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_n_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_attribute_I_Lorg_w3c_dom_RAttr__arg_idx = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "idx", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_attribute_I_Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLElement_methods_attribute_I_Lorg_w3c_dom_RAttr__arg_idx,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_attribute_I_Lorg_w3c_dom_RAttr__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_attribute_I_Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "attribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_m_attribute", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_attribute_I_Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_attribute_I_Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_attribute_I_Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_attributeCount__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_attributeCount__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_attributeCount__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "attributeCount", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_l_attributeCount", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_attributeCount__I_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_attributeCount__I_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_attributeCount__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getAttribute_INLRString__LRString__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_getAttribute_INLRString__LRString__args[] = 
{
  &LibXMLElement_methods_getAttribute_INLRString__LRString__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_getAttribute_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_getAttribute_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_1_getAttribute", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_getAttribute_INLRString__LRString__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_getAttribute_INLRString__LRString__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_getAttribute_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__args[] = 
{
  &LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__arg_namespaceURI,
  &LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_getAttributeNS_INLRString_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getAttributeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_8_getAttributeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_getAttributeNS_INLRString_INLRString__LRString__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_getAttributeNS_INLRString_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLElement_methods_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getAttributeNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_4_getAttributeNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_namespaceURI,
  &LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getAttributeNodeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_b_getAttributeNodeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__args[] = 
{
  &LibXMLElement_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getElementsByTagName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNodeList::clazzInfo(), // return type
  "_7_getElementsByTagName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__args[] = 
{
  &LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_namespaceURI,
  &LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getElementsByTagNameNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNodeList::clazzInfo(), // return type
  "_d_getElementsByTagNameNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_getTagName__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_getTagName__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_getTagName__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getTagName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_0_getTagName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_getTagName__LRString__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_getTagName__LRString__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_getTagName__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_hasAttribute_INLRString__Z_arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_hasAttribute_INLRString__Z_args[] = 
{
  &LibXMLElement_methods_hasAttribute_INLRString__Z_arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_hasAttribute_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_hasAttribute_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hasAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_e_hasAttribute", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_hasAttribute_INLRString__Z_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_hasAttribute_INLRString__Z_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_hasAttribute_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_args[] = 
{
  &LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_arg_namespaceURI,
  &LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_hasAttributeNS_INLRString_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hasAttributeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_f_hasAttributeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_hasAttributeNS_INLRString_INLRString__Z_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_hasAttributeNS_INLRString_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_normalize__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_normalize__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_normalize__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "normalize", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_k_normalize", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_normalize__V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_normalize__V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_normalize__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_removeAttribute_INLRString__V_arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_removeAttribute_INLRString__V_args[] = 
{
  &LibXMLElement_methods_removeAttribute_INLRString__V_arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_removeAttribute_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLElement_removeAttribute_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_removeAttribute_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "removeAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_removeAttribute", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_removeAttribute_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_removeAttribute_INLRString__V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_removeAttribute_INLRString__V_dispatch, // invoke this method
  LibXMLElement_removeAttribute_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_args[] = 
{
  &LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_arg_namespaceURI,
  &LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLElement_removeAttributeNS_INLRString_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_removeAttributeNS_INLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "removeAttributeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_removeAttributeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_removeAttributeNS_INLRString_INLRString__V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_removeAttributeNS_INLRString_INLRString__V_dispatch, // invoke this method
  LibXMLElement_removeAttributeNS_INLRString_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__arg_oldAttr = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "oldAttr", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLElement_methods_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__arg_oldAttr,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLElement_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "removeAttributeNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_6_removeAttributeNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  LibXMLElement_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setAttribute_INLRString_INLRString__V_arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setAttribute_INLRString_INLRString__V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_setAttribute_INLRString_INLRString__V_args[] = 
{
  &LibXMLElement_methods_setAttribute_INLRString_INLRString__V_arg_name,
  &LibXMLElement_methods_setAttribute_INLRString_INLRString__V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_setAttribute_INLRString_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLElement_setAttribute_INLRString_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_setAttribute_INLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_setAttribute", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_setAttribute_INLRString_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_setAttribute_INLRString_INLRString__V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_setAttribute_INLRString_INLRString__V_dispatch, // invoke this method
  LibXMLElement_setAttribute_INLRString_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_arg_qualifiedName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "qualifiedName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_args[] = 
{
  &LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_arg_namespaceURI,
  &LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_arg_qualifiedName,
  &LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLElement_setAttributeNS_INLRString_INLRString_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_setAttributeNS_INLRString_INLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setAttributeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_9_setAttributeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_setAttributeNS_INLRString_INLRString_INLRString__V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_setAttributeNS_INLRString_INLRString_INLRString__V_dispatch, // invoke this method
  LibXMLElement_setAttributeNS_INLRString_INLRString_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__arg_newAttr = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "newAttr", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLElement_methods_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__arg_newAttr,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLElement_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setAttributeNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_5_setAttributeNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  LibXMLElement_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__arg_newAttr = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "newAttr", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__args[] = 
{
  &LibXMLElement_methods_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__arg_newAttr,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLElement_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setAttributeNodeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo(), // return type
  "_c_setAttributeNodeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__dispatch, // invoke this method
  LibXMLElement_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setIdAttribute_INLRString_Z_V_arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setIdAttribute_INLRString_Z_V_arg_isId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "isId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_setIdAttribute_INLRString_Z_V_args[] = 
{
  &LibXMLElement_methods_setIdAttribute_INLRString_Z_V_arg_name,
  &LibXMLElement_methods_setIdAttribute_INLRString_Z_V_arg_isId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_setIdAttribute_INLRString_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_setIdAttribute_INLRString_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setIdAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_g_setIdAttribute", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_setIdAttribute_INLRString_Z_V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_setIdAttribute_INLRString_Z_V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_setIdAttribute_INLRString_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_arg_isId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "isId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_args[] = 
{
  &LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_arg_namespaceURI,
  &LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_arg_localName,
  &LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_arg_isId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_setIdAttributeNS_INLRString_INLRString_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setIdAttributeNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_i_setIdAttributeNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_setIdAttributeNS_INLRString_INLRString_Z_V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_setIdAttributeNS_INLRString_INLRString_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_arg_isAddr = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "isAddr", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RAttr::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_arg_isId = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "isId", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_args[] = 
{
  &LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_arg_isAddr,
  &LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_arg_isId,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setIdAttributeNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_h_setIdAttributeNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_args, // the arguments
  0, //arguments count
  LibXMLElement_methods_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLElement_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLElement_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_j_toString", // alternative name of method
  -1, // altlabelHashCode
  LibXMLElement_methods_toString__LRString__args, // the arguments
  0, //arguments count
  LibXMLElement_methods_toString__LRString__exceptions, // the declared exceptions
  LibXMLElement_MetainfoWrapper::LibXMLElement_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLElement_methods[] = 
{
  &LibXMLElement_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLElement_method_attribute_I_Lorg_w3c_dom_RAttr_,
  &LibXMLElement_method_attributeCount__I,
  &LibXMLElement_method_getAttribute_INLRString__LRString_,
  &LibXMLElement_method_getAttributeNS_INLRString_INLRString__LRString_,
  &LibXMLElement_method_getAttributeNode_INLRString__Lorg_w3c_dom_RAttr_,
  &LibXMLElement_method_getAttributeNodeNS_INLRString_INLRString__Lorg_w3c_dom_RAttr_,
  &LibXMLElement_method_getElementsByTagName_INLRString__Lorg_w3c_dom_RNodeList_,
  &LibXMLElement_method_getElementsByTagNameNS_INLRString_INLRString__Lorg_w3c_dom_RNodeList_,
  &LibXMLElement_method_getTagName__LRString_,
  &LibXMLElement_method_hasAttribute_INLRString__Z,
  &LibXMLElement_method_hasAttributeNS_INLRString_INLRString__Z,
  &LibXMLElement_method_normalize__V,
  &LibXMLElement_method_removeAttribute_INLRString__V,
  &LibXMLElement_method_removeAttributeNS_INLRString_INLRString__V,
  &LibXMLElement_method_removeAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr_,
  &LibXMLElement_method_setAttribute_INLRString_INLRString__V,
  &LibXMLElement_method_setAttributeNS_INLRString_INLRString_INLRString__V,
  &LibXMLElement_method_setAttributeNode_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr_,
  &LibXMLElement_method_setAttributeNodeNS_INLorg_w3c_dom_RAttr__Lorg_w3c_dom_RAttr_,
  &LibXMLElement_method_setIdAttribute_INLRString_Z_V,
  &LibXMLElement_method_setIdAttributeNS_INLRString_INLRString_Z_V,
  &LibXMLElement_method_setIdAttributeNode_INLorg_w3c_dom_RAttr_Z_V,
  &LibXMLElement_method_toString__LRString_,
  0
};


struct LibXMLElement_MetaInfoInitializer
{  LibXMLElement_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLElement::clazzInfo();
    ci->fields =  _LibXMLElement_fields;
    ci->methods =  _LibXMLElement_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLElement_MetaInfoInitializer LibXMLElement_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLEntity_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLEntity>(length);
}

//static
::acdk::lang::RObject
LibXMLEntity_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLEntity_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLEntity::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_getInputEncoding__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLEntity* This = dmi_cast<LibXMLEntity>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLEntity::getInputEncoding();
    else
        ret = (::acdk::lang::RObject)This->getInputEncoding();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_getNotationName__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLEntity* This = dmi_cast<LibXMLEntity>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLEntity::getNotationName();
    else
        ret = (::acdk::lang::RObject)This->getNotationName();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_getPublicId__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLEntity* This = dmi_cast<LibXMLEntity>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLEntity::getPublicId();
    else
        ret = (::acdk::lang::RObject)This->getPublicId();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_getSystemId__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLEntity* This = dmi_cast<LibXMLEntity>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLEntity::getSystemId();
    else
        ret = (::acdk::lang::RObject)This->getSystemId();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_getXmlEncoding__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLEntity* This = dmi_cast<LibXMLEntity>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLEntity::getXmlEncoding();
    else
        ret = (::acdk::lang::RObject)This->getXmlEncoding();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_getXmlVersion__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLEntity* This = dmi_cast<LibXMLEntity>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLEntity::getXmlVersion();
    else
        ret = (::acdk::lang::RObject)This->getXmlVersion();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntity_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLEntity* This = dmi_cast<LibXMLEntity>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLEntity::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLEntity_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_7_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_getInputEncoding__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_getInputEncoding__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_getInputEncoding__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getInputEncoding", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_getInputEncoding", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_getInputEncoding__LRString__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_getInputEncoding__LRString__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_getInputEncoding__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_getNotationName__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_getNotationName__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_getNotationName__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNotationName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_2_getNotationName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_getNotationName__LRString__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_getNotationName__LRString__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_getNotationName__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_getPublicId__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_getPublicId__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_getPublicId__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getPublicId", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_0_getPublicId", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_getPublicId__LRString__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_getPublicId__LRString__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_getPublicId__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_getSystemId__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_getSystemId__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_getSystemId__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getSystemId", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_1_getSystemId", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_getSystemId__LRString__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_getSystemId__LRString__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_getSystemId__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_getXmlEncoding__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_getXmlEncoding__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_getXmlEncoding__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getXmlEncoding", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_4_getXmlEncoding", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_getXmlEncoding__LRString__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_getXmlEncoding__LRString__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_getXmlEncoding__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_getXmlVersion__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_getXmlVersion__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_getXmlVersion__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getXmlVersion", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_5_getXmlVersion", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_getXmlVersion__LRString__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_getXmlVersion__LRString__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_getXmlVersion__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntity_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntity_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_6_toString", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntity_methods_toString__LRString__args, // the arguments
  0, //arguments count
  LibXMLEntity_methods_toString__LRString__exceptions, // the declared exceptions
  LibXMLEntity_MetainfoWrapper::LibXMLEntity_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLEntity_methods[] = 
{
  &LibXMLEntity_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLEntity_method_getInputEncoding__LRString_,
  &LibXMLEntity_method_getNotationName__LRString_,
  &LibXMLEntity_method_getPublicId__LRString_,
  &LibXMLEntity_method_getSystemId__LRString_,
  &LibXMLEntity_method_getXmlEncoding__LRString_,
  &LibXMLEntity_method_getXmlVersion__LRString_,
  &LibXMLEntity_method_toString__LRString_,
  0
};


struct LibXMLEntity_MetaInfoInitializer
{  LibXMLEntity_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLEntity::clazzInfo();
    ci->fields =  _LibXMLEntity_fields;
    ci->methods =  _LibXMLEntity_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLEntity_MetaInfoInitializer LibXMLEntity_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLEntityReference_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLEntityReference>(length);
}

//static
::acdk::lang::RObject
LibXMLEntityReference_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLEntityReference_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLEntityReference_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLEntityReference::GetClass();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLEntityReference_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLEntityReference_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntityReference_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLEntityReference_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_0_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLEntityReference_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLEntityReference_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLEntityReference_MetainfoWrapper::LibXMLEntityReference_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLEntityReference_methods[] = 
{
  &LibXMLEntityReference_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct LibXMLEntityReference_MetaInfoInitializer
{  LibXMLEntityReference_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLEntityReference::clazzInfo();
    ci->fields =  _LibXMLEntityReference_fields;
    ci->methods =  _LibXMLEntityReference_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLEntityReference_MetaInfoInitializer LibXMLEntityReference_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLNamedNodeMap_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLNamedNodeMap>(length);
}

//static
::acdk::lang::RObject
LibXMLNamedNodeMap_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLNamedNodeMap_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLNamedNodeMap::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_getLength__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNamedNodeMap::getLength();
    else
      ret = This->getLength();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_getNamedItem_INLRString__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNamedNodeMap::getNamedItem((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getNamedItem((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNamedNodeMap::getNamedItemNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getNamedItemNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_item_I_Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNamedNodeMap::item(args[0].getIntVar());
    else
        ret = (::acdk::lang::RObject)This->item(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNamedNodeMap::removeNamedItem((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->removeNamedItem((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNamedNodeMap::removeNamedItemNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->removeNamedItemNS((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNamedNodeMap::setNamedItem((org::w3c::dom::RNode)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->setNamedItem((org::w3c::dom::RNode)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNamedNodeMap_method_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNamedNodeMap::setNamedItemNS((org::w3c::dom::RNode)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->setNamedItemNS((org::w3c::dom::RNode)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  LibXMLNamedNodeMap_fields__type_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    LibXMLNamedNodeMap* This = dmi_cast<LibXMLNamedNodeMap>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_type, flags);
    else
      This->_type = var.getIntVar();
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo LibXMLNamedNodeMap_fields__type = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_type", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_fields__type_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLNamedNodeMap_fields[] = 
{
  &LibXMLNamedNodeMap_fields__type,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_8_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_getLength__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_getLength__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_getLength__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLength", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_4_getLength", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_getLength__I_args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_getLength__I_exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_getLength__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_getNamedItem_INLRString__Lorg_w3c_dom_RNode__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_getNamedItem_INLRString__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNamedNodeMap_methods_getNamedItem_INLRString__Lorg_w3c_dom_RNode__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_getNamedItem_INLRString__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_getNamedItem_INLRString__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNamedItem", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_0_getNamedItem", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_getNamedItem_INLRString__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_getNamedItem_INLRString__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_getNamedItem_INLRString__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_namespaceURI,
  &LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNamedItemNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_5_getNamedItemNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_item_I_Lorg_w3c_dom_RNode__arg_index = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "index", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_item_I_Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNamedNodeMap_methods_item_I_Lorg_w3c_dom_RNode__arg_index,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_item_I_Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_item_I_Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "item", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_3_item", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_item_I_Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_item_I_Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_item_I_Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNamedNodeMap_methods_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNamedNodeMap_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_removeNamedItem_INLRString__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "removeNamedItem", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_2_removeNamedItem", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLNamedNodeMap_removeNamedItem_INLRString__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_localName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "localName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_namespaceURI,
  &LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__arg_localName,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "removeNamedItemNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_7_removeNamedItemNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_arg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "arg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNamedNodeMap_methods_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_arg,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNamedNodeMap_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setNamedItem", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_1_setNamedItem", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLNamedNodeMap_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNamedNodeMap_methods_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_arg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "arg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNamedNodeMap_methods_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNamedNodeMap_methods_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_arg,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap_methods_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNamedNodeMap_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNamedNodeMap_method_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setNamedItemNS", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_6_setNamedItemNS", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNamedNodeMap_methods_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNamedNodeMap_methods_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNamedNodeMap_MetainfoWrapper::LibXMLNamedNodeMap_method_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLNamedNodeMap_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLNamedNodeMap_methods[] = 
{
  &LibXMLNamedNodeMap_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLNamedNodeMap_method_getLength__I,
  &LibXMLNamedNodeMap_method_getNamedItem_INLRString__Lorg_w3c_dom_RNode_,
  &LibXMLNamedNodeMap_method_getNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode_,
  &LibXMLNamedNodeMap_method_item_I_Lorg_w3c_dom_RNode_,
  &LibXMLNamedNodeMap_method_removeNamedItem_INLRString__Lorg_w3c_dom_RNode_,
  &LibXMLNamedNodeMap_method_removeNamedItemNS_INLRString_INLRString__Lorg_w3c_dom_RNode_,
  &LibXMLNamedNodeMap_method_setNamedItem_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_,
  &LibXMLNamedNodeMap_method_setNamedItemNS_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_,
  0
};


struct LibXMLNamedNodeMap_MetaInfoInitializer
{  LibXMLNamedNodeMap_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLNamedNodeMap::clazzInfo();
    ci->fields =  _LibXMLNamedNodeMap_fields;
    ci->methods =  _LibXMLNamedNodeMap_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLNamedNodeMap_MetaInfoInitializer LibXMLNamedNodeMap_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


//static
::acdk::lang::RObject
LibXMLNode_create_array(int length)
{
  return new ObjectArrayImpl<RLibXMLNode>(length);
}

//static
::acdk::lang::RObject
LibXMLNode_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class LibXMLNode_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)LibXMLNode::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method__mapDomTypeToLibXMLType_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
  ret = LibXMLNode::_mapDomTypeToLibXMLType(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method__mapLibXMLTypeToDomType_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
  ret = LibXMLNode::_mapLibXMLTypeToDomType(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::appendChild((org::w3c::dom::RNode)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->appendChild((org::w3c::dom::RNode)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_cloneNode_Z_Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::cloneNode(args[0].getBoolVar());
    else
        ret = (::acdk::lang::RObject)This->cloneNode(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getAttributes__Lorg_w3c_dom_RNamedNodeMap__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getAttributes();
    else
        ret = (::acdk::lang::RObject)This->getAttributes();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getBaseURI__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getBaseURI();
    else
        ret = (::acdk::lang::RObject)This->getBaseURI();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getChildCount__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNode::getChildCount();
    else
      ret = This->getChildCount();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getChildNodes__Lorg_w3c_dom_RNodeList__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getChildNodes();
    else
        ret = (::acdk::lang::RObject)This->getChildNodes();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getFirstChild__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getFirstChild();
    else
        ret = (::acdk::lang::RObject)This->getFirstChild();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getLastChild__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getLastChild();
    else
        ret = (::acdk::lang::RObject)This->getLastChild();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getLocalName__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getLocalName();
    else
        ret = (::acdk::lang::RObject)This->getLocalName();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getNamespaceURI__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getNamespaceURI();
    else
        ret = (::acdk::lang::RObject)This->getNamespaceURI();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getNextSibling__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getNextSibling();
    else
        ret = (::acdk::lang::RObject)This->getNextSibling();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getNodeName__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getNodeName();
    else
        ret = (::acdk::lang::RObject)This->getNodeName();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getNodeType__S_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNode::getNodeType();
    else
      ret = This->getNodeType();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getNodeValue__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getNodeValue();
    else
        ret = (::acdk::lang::RObject)This->getNodeValue();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getOwnerDocument__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getOwnerDocument();
    else
        ret = (::acdk::lang::RObject)This->getOwnerDocument();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getParentNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getParentNode();
    else
        ret = (::acdk::lang::RObject)This->getParentNode();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getPrefix__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getPrefix();
    else
        ret = (::acdk::lang::RObject)This->getPrefix();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getPreviousSibling__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getPreviousSibling();
    else
        ret = (::acdk::lang::RObject)This->getPreviousSibling();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getTextContent__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getTextContent();
    else
        ret = (::acdk::lang::RObject)This->getTextContent();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_getUserData_INLRString__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::getUserData((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->getUserData((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_hasAttributes__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNode::hasAttributes();
    else
      ret = This->hasAttributes();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_hasChildNodes__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNode::hasChildNodes();
    else
      ret = This->hasChildNodes();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::insertBefore((org::w3c::dom::RNode)args[0].getObjectVar(), (org::w3c::dom::RNode)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->insertBefore((org::w3c::dom::RNode)args[0].getObjectVar(), (org::w3c::dom::RNode)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_isDefaultNamespace_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNode::isDefaultNamespace((RString)args[0].getObjectVar());
    else
      ret = This->isDefaultNamespace((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_isEqualNode_INLorg_w3c_dom_RNode__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNode::isEqualNode((org::w3c::dom::RNode)args[0].getObjectVar());
    else
      ret = This->isEqualNode((org::w3c::dom::RNode)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_isSupported_INLRString_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->LibXMLNode::isSupported((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
      ret = This->isSupported((RString)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_lookupNamespaceURI_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::lookupNamespaceURI((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->lookupNamespaceURI((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_lookupPrefix_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::lookupPrefix((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->lookupPrefix((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_normalize__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLNode::normalize();
    else
        This->normalize();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::removeChild((org::w3c::dom::RNode)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->removeChild((org::w3c::dom::RNode)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::replaceChild((org::w3c::dom::RNode)args[0].getObjectVar(), (org::w3c::dom::RNode)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->replaceChild((org::w3c::dom::RNode)args[0].getObjectVar(), (org::w3c::dom::RNode)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::selectBoolean((acdk::lang::RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->selectBoolean((acdk::lang::RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_selectNode_INLRString__Lorg_w3c_dom_RNode__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::selectNode((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->selectNode((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::selectNodes((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->selectNodes((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::selectObject((acdk::lang::RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->selectObject((acdk::lang::RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_selectText_INLacdk_lang_RString__Lacdk_lang_RString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::selectText((acdk::lang::RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->selectText((acdk::lang::RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_setNodeValue_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLNode::setNodeValue((RString)args[0].getObjectVar());
    else
        This->setNodeValue((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_setPrefix_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLNode::setPrefix((RString)args[0].getObjectVar());
    else
        This->setPrefix((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_setTextContent_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->LibXMLNode::setTextContent((RString)args[0].getObjectVar());
    else
        This->setTextContent((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  LibXMLNode_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    LibXMLNode* This = dmi_cast<LibXMLNode>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->LibXMLNode::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _LibXMLNode_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_G_GetClass", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods__mapDomTypeToLibXMLType_I_I_arg_tp = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "tp", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods__mapDomTypeToLibXMLType_I_I_args[] = 
{
  &LibXMLNode_methods__mapDomTypeToLibXMLType_I_I_arg_tp,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods__mapDomTypeToLibXMLType_I_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method__mapDomTypeToLibXMLType_I_I = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_mapDomTypeToLibXMLType", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_F__mapDomTypeToLibXMLType", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods__mapDomTypeToLibXMLType_I_I_args, // the arguments
  0, //arguments count
  LibXMLNode_methods__mapDomTypeToLibXMLType_I_I_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method__mapDomTypeToLibXMLType_I_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods__mapLibXMLTypeToDomType_I_I_arg_tp = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "tp", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods__mapLibXMLTypeToDomType_I_I_args[] = 
{
  &LibXMLNode_methods__mapLibXMLTypeToDomType_I_I_arg_tp,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods__mapLibXMLTypeToDomType_I_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method__mapLibXMLTypeToDomType_I_I = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_mapLibXMLTypeToDomType", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_E__mapLibXMLTypeToDomType", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods__mapLibXMLTypeToDomType_I_I_args, // the arguments
  0, //arguments count
  LibXMLNode_methods__mapLibXMLTypeToDomType_I_I_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method__mapLibXMLTypeToDomType_I_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_newChild = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "newChild", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNode_methods_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_newChild,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "appendChild", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_k_appendChild", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLNode_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_cloneNode_Z_Lorg_w3c_dom_RNode__arg_deep = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "deep", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_cloneNode_Z_Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNode_methods_cloneNode_Z_Lorg_w3c_dom_RNode__arg_deep,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_cloneNode_Z_Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_cloneNode_Z_Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "cloneNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_m_cloneNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_cloneNode_Z_Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_cloneNode_Z_Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_cloneNode_Z_Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getAttributes__Lorg_w3c_dom_RNamedNodeMap__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getAttributes__Lorg_w3c_dom_RNamedNodeMap__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getAttributes__Lorg_w3c_dom_RNamedNodeMap_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getAttributes", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNamedNodeMap::clazzInfo(), // return type
  "_f_getAttributes", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getAttributes__Lorg_w3c_dom_RNamedNodeMap__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getAttributes__Lorg_w3c_dom_RNamedNodeMap__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getAttributes__Lorg_w3c_dom_RNamedNodeMap__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getBaseURI__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getBaseURI__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getBaseURI__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getBaseURI", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_getBaseURI", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getBaseURI__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getBaseURI__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getBaseURI__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getChildCount__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getChildCount__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getChildCount__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getChildCount", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_D_getChildCount", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getChildCount__I_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getChildCount__I_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getChildCount__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getChildNodes__Lorg_w3c_dom_RNodeList__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getChildNodes__Lorg_w3c_dom_RNodeList__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getChildNodes__Lorg_w3c_dom_RNodeList_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getChildNodes", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNodeList::clazzInfo(), // return type
  "_a_getChildNodes", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getChildNodes__Lorg_w3c_dom_RNodeList__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getChildNodes__Lorg_w3c_dom_RNodeList__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getChildNodes__Lorg_w3c_dom_RNodeList__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getFirstChild__Lorg_w3c_dom_RNode__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getFirstChild__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getFirstChild__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getFirstChild", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_b_getFirstChild", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getFirstChild__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getFirstChild__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getFirstChild__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getLastChild__Lorg_w3c_dom_RNode__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getLastChild__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getLastChild__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLastChild", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_c_getLastChild", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getLastChild__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getLastChild__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getLastChild__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getLocalName__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getLocalName__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getLocalName__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLocalName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_2_getLocalName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getLocalName__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getLocalName__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getLocalName__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getNamespaceURI__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getNamespaceURI__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getNamespaceURI__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNamespaceURI", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_1_getNamespaceURI", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getNamespaceURI__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getNamespaceURI__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getNamespaceURI__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getNextSibling__Lorg_w3c_dom_RNode__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getNextSibling__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getNextSibling__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNextSibling", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_e_getNextSibling", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getNextSibling__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getNextSibling__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getNextSibling__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getNodeName__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getNodeName__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getNodeName__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNodeName", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_0_getNodeName", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getNodeName__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getNodeName__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getNodeName__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getNodeType__S_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getNodeType__S_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getNodeType__S = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNodeType", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz(), // return type
  "_8_getNodeType", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getNodeType__S_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getNodeType__S_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getNodeType__S_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getNodeValue__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getNodeValue__LRString__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_getNodeValue__LRString__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getNodeValue__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getNodeValue", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_6_getNodeValue", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getNodeValue__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getNodeValue__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getNodeValue__LRString__dispatch, // invoke this method
  LibXMLNode_getNodeValue__LRString__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getOwnerDocument__Lorg_w3c_dom_RDocument__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getOwnerDocument__Lorg_w3c_dom_RDocument__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getOwnerDocument__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getOwnerDocument", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_g_getOwnerDocument", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getOwnerDocument__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getOwnerDocument__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getOwnerDocument__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getParentNode__Lorg_w3c_dom_RNode__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getParentNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getParentNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getParentNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_9_getParentNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getParentNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getParentNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getParentNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getPrefix__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getPrefix__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getPrefix__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getPrefix", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_4_getPrefix", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getPrefix__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getPrefix__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getPrefix__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getPreviousSibling__Lorg_w3c_dom_RNode__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getPreviousSibling__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getPreviousSibling__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getPreviousSibling", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_d_getPreviousSibling", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getPreviousSibling__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getPreviousSibling__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getPreviousSibling__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getTextContent__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getTextContent__LRString__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_getTextContent__LRString__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getTextContent__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getTextContent", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_v_getTextContent", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getTextContent__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getTextContent__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getTextContent__LRString__dispatch, // invoke this method
  LibXMLNode_getTextContent__LRString__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_getUserData_INLRString__LRObject__arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_getUserData_INLRString__LRObject__args[] = 
{
  &LibXMLNode_methods_getUserData_INLRString__LRObject__arg_key,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_getUserData_INLRString__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_getUserData_INLRString__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getUserData", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_u_getUserData", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_getUserData_INLRString__LRObject__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_getUserData_INLRString__LRObject__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_getUserData_INLRString__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_hasAttributes__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_hasAttributes__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_hasAttributes__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hasAttributes", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_p_hasAttributes", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_hasAttributes__Z_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_hasAttributes__Z_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_hasAttributes__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_hasChildNodes__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_hasChildNodes__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_hasChildNodes__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hasChildNodes", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_l_hasChildNodes", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_hasChildNodes__Z_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_hasChildNodes__Z_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_hasChildNodes__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_newChild = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "newChild", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_refChild = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "refChild", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_newChild,
  &LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_refChild,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "insertBefore", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_h_insertBefore", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLNode_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_isDefaultNamespace_INLRString__Z_arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_isDefaultNamespace_INLRString__Z_args[] = 
{
  &LibXMLNode_methods_isDefaultNamespace_INLRString__Z_arg_namespaceURI,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_isDefaultNamespace_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_isDefaultNamespace_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isDefaultNamespace", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_r_isDefaultNamespace", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_isDefaultNamespace_INLRString__Z_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_isDefaultNamespace_INLRString__Z_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_isDefaultNamespace_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_isEqualNode_INLorg_w3c_dom_RNode__Z_arg_arg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "arg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_isEqualNode_INLorg_w3c_dom_RNode__Z_args[] = 
{
  &LibXMLNode_methods_isEqualNode_INLorg_w3c_dom_RNode__Z_arg_arg,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_isEqualNode_INLorg_w3c_dom_RNode__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_isEqualNode_INLorg_w3c_dom_RNode__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isEqualNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_t_isEqualNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_isEqualNode_INLorg_w3c_dom_RNode__Z_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_isEqualNode_INLorg_w3c_dom_RNode__Z_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_isEqualNode_INLorg_w3c_dom_RNode__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_isSupported_INLRString_INLRString__Z_arg_feature = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "feature", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_isSupported_INLRString_INLRString__Z_arg_version = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "version", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_isSupported_INLRString_INLRString__Z_args[] = 
{
  &LibXMLNode_methods_isSupported_INLRString_INLRString__Z_arg_feature,
  &LibXMLNode_methods_isSupported_INLRString_INLRString__Z_arg_version,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_isSupported_INLRString_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_isSupported_INLRString_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isSupported", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_o_isSupported", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_isSupported_INLRString_INLRString__Z_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_isSupported_INLRString_INLRString__Z_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_isSupported_INLRString_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_lookupNamespaceURI_INLRString__LRString__arg_prefix = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "prefix", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_lookupNamespaceURI_INLRString__LRString__args[] = 
{
  &LibXMLNode_methods_lookupNamespaceURI_INLRString__LRString__arg_prefix,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_lookupNamespaceURI_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_lookupNamespaceURI_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "lookupNamespaceURI", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_s_lookupNamespaceURI", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_lookupNamespaceURI_INLRString__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_lookupNamespaceURI_INLRString__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_lookupNamespaceURI_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_lookupPrefix_INLRString__LRString__arg_namespaceURI = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "namespaceURI", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_lookupPrefix_INLRString__LRString__args[] = 
{
  &LibXMLNode_methods_lookupPrefix_INLRString__LRString__arg_namespaceURI,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_lookupPrefix_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_lookupPrefix_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "lookupPrefix", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_q_lookupPrefix", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_lookupPrefix_INLRString__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_lookupPrefix_INLRString__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_lookupPrefix_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_normalize__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_normalize__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_normalize__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "normalize", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_n_normalize", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_normalize__V_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_normalize__V_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_normalize__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_oldChild = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "oldChild", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNode_methods_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_oldChild,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "removeChild", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_j_removeChild", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLNode_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_newChild = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "newChild", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_oldChild = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "oldChild", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_newChild,
  &LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__arg_oldChild,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "replaceChild", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_i_replaceChild", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  LibXMLNode_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__arg_xpath = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "xpath", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::lang::RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__args[] = 
{
  &LibXMLNode_methods_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__arg_xpath,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "selectBoolean", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::lang::RBoolean::clazzInfo(), // return type
  "_C_selectBoolean", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_selectNode_INLRString__Lorg_w3c_dom_RNode__arg_xpath = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "xpath", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_selectNode_INLRString__Lorg_w3c_dom_RNode__args[] = 
{
  &LibXMLNode_methods_selectNode_INLRString__Lorg_w3c_dom_RNode__arg_xpath,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_selectNode_INLRString__Lorg_w3c_dom_RNode__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_selectNode_INLRString__Lorg_w3c_dom_RNode_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "selectNode", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNode::clazzInfo(), // return type
  "_y_selectNode", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_selectNode_INLRString__Lorg_w3c_dom_RNode__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_selectNode_INLRString__Lorg_w3c_dom_RNode__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_selectNode_INLRString__Lorg_w3c_dom_RNode__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__arg_xpath = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "xpath", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__args[] = 
{
  &LibXMLNode_methods_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__arg_xpath,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_selectNodes_INLRString__Lorg_w3c_dom_RNodeList_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "selectNodes", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RNodeList::clazzInfo(), // return type
  "_z_selectNodes", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_selectNodes_INLRString__Lorg_w3c_dom_RNodeList__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__arg_xpath = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "xpath", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::lang::RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__args[] = 
{
  &LibXMLNode_methods_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__arg_xpath,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "selectObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::lang::RObject::clazzInfo(), // return type
  "_B_selectObject", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_selectText_INLacdk_lang_RString__Lacdk_lang_RString__arg_xpath = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "xpath", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::lang::RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_selectText_INLacdk_lang_RString__Lacdk_lang_RString__args[] = 
{
  &LibXMLNode_methods_selectText_INLacdk_lang_RString__Lacdk_lang_RString__arg_xpath,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_selectText_INLacdk_lang_RString__Lacdk_lang_RString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_selectText_INLacdk_lang_RString__Lacdk_lang_RString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "selectText", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::lang::RString::clazzInfo(), // return type
  "_A_selectText", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_selectText_INLacdk_lang_RString__Lacdk_lang_RString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_selectText_INLacdk_lang_RString__Lacdk_lang_RString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_selectText_INLacdk_lang_RString__Lacdk_lang_RString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_setNodeValue_INLRString__V_arg_nodeValue = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "nodeValue", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_setNodeValue_INLRString__V_args[] = 
{
  &LibXMLNode_methods_setNodeValue_INLRString__V_arg_nodeValue,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_setNodeValue_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_setNodeValue_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_setNodeValue_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setNodeValue", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_setNodeValue", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_setNodeValue_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_setNodeValue_INLRString__V_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_setNodeValue_INLRString__V_dispatch, // invoke this method
  LibXMLNode_setNodeValue_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_setPrefix_INLRString__V_arg_prefix = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "prefix", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_setPrefix_INLRString__V_args[] = 
{
  &LibXMLNode_methods_setPrefix_INLRString__V_arg_prefix,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_setPrefix_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_setPrefix_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_setPrefix_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setPrefix", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_setPrefix", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_setPrefix_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_setPrefix_INLRString__V_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_setPrefix_INLRString__V_dispatch, // invoke this method
  LibXMLNode_setPrefix_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo LibXMLNode_methods_setTextContent_INLRString__V_arg_textContent = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "textContent", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_setTextContent_INLRString__V_args[] = 
{
  &LibXMLNode_methods_setTextContent_INLRString__V_arg_textContent,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_setTextContent_INLRString__V_exceptions[] =
{
  org::w3c::dom::RDOMException::clazzInfo(), 
  0
};

void LibXMLNode_setTextContent_INLRString__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::w3c::dom::DOMException) == true)
    THROW_INSTANCE( org::w3c::dom::RDOMException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_setTextContent_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setTextContent", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_w_setTextContent", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_setTextContent_INLRString__V_args, // the arguments
  0, //arguments count
  LibXMLNode_methods_setTextContent_INLRString__V_exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_setTextContent_INLRString__V_dispatch, // invoke this method
  LibXMLNode_setTextContent_INLRString__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* LibXMLNode_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LibXMLNode_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_x_toString", // alternative name of method
  -1, // altlabelHashCode
  LibXMLNode_methods_toString__LRString__args, // the arguments
  0, //arguments count
  LibXMLNode_methods_toString__LRString__exceptions, // the declared exceptions
  LibXMLNode_MetainfoWrapper::LibXMLNode_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _LibXMLNode_methods[] = 
{
  &LibXMLNode_method_GetClass__L_acdk_lang_RClass_,
  &LibXMLNode_method__mapDomTypeToLibXMLType_I_I,
  &LibXMLNode_method__mapLibXMLTypeToDomType_I_I,
  &LibXMLNode_method_appendChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_cloneNode_Z_Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_getAttributes__Lorg_w3c_dom_RNamedNodeMap_,
  &LibXMLNode_method_getBaseURI__LRString_,
  &LibXMLNode_method_getChildCount__I,
  &LibXMLNode_method_getChildNodes__Lorg_w3c_dom_RNodeList_,
  &LibXMLNode_method_getFirstChild__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_getLastChild__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_getLocalName__LRString_,
  &LibXMLNode_method_getNamespaceURI__LRString_,
  &LibXMLNode_method_getNextSibling__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_getNodeName__LRString_,
  &LibXMLNode_method_getNodeType__S,
  &LibXMLNode_method_getNodeValue__LRString_,
  &LibXMLNode_method_getOwnerDocument__Lorg_w3c_dom_RDocument_,
  &LibXMLNode_method_getParentNode__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_getPrefix__LRString_,
  &LibXMLNode_method_getPreviousSibling__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_getTextContent__LRString_,
  &LibXMLNode_method_getUserData_INLRString__LRObject_,
  &LibXMLNode_method_hasAttributes__Z,
  &LibXMLNode_method_hasChildNodes__Z,
  &LibXMLNode_method_insertBefore_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_isDefaultNamespace_INLRString__Z,
  &LibXMLNode_method_isEqualNode_INLorg_w3c_dom_RNode__Z,
  &LibXMLNode_method_isSupported_INLRString_INLRString__Z,
  &LibXMLNode_method_lookupNamespaceURI_INLRString__LRString_,
  &LibXMLNode_method_lookupPrefix_INLRString__LRString_,
  &LibXMLNode_method_normalize__V,
  &LibXMLNode_method_removeChild_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_replaceChild_INLorg_w3c_dom_RNode_INLorg_w3c_dom_RNode__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_selectBoolean_INLacdk_lang_RString__Lacdk_lang_RBoolean_,
  &LibXMLNode_method_selectNode_INLRString__Lorg_w3c_dom_RNode_,
  &LibXMLNode_method_selectNodes_INLRString__Lorg_w3c_dom_RNodeList_,
  &LibXMLNode_method_selectObject_INLacdk_lang_RString__Lacdk_lang_RObject_,
  &LibXMLNode_method_selectText_INLacdk_lang_RString__Lacdk_lang_RString_,
  &LibXMLNode_method_setNodeValue_INLRString__V,
  &LibXMLNode_method_setPrefix_INLRString__V,
  &LibXMLNode_method_setTextContent_INLRString__V,
  &LibXMLNode_method_toString__LRString_,
  0
};


struct LibXMLNode_MetaInfoInitializer
{  LibXMLNode_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = LibXMLNode::clazzInfo();
    ci->fields =  _LibXMLNode_fields;
    ci->methods =  _LibXMLNode_methods;
    ci->_scopeParent = acdk_xml_libxmldom_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
LibXMLNode_MetaInfoInitializer LibXMLNode_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace libxmldom


#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) libxmldom_dummyExportFunc() {}
#endif

