// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../parsers.h"
#include "../DocumentBuilder.h"
#include "../DocumentBuilderFactory.h"
#include "../ParserConfigurationException.h"
#include "../parsers.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>


struct acdk::lang::dmi::UnitInfo acdk_xml_parsers_unitInfo = {
  ::acdk::lang::dmi::MiUnitInfo, // flags
  0, //attributeRes
  "parsers", // name of unit
  -1, // hashCode
  "acdk/xml", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  0 // _firstChild first ClazzInfo of this unit
};

static ::acdk::lang::dmi::RegisterUnitInfo _register_acdk_xml_parsers_unitInfo(&acdk_xml_parsers_unitInfo);


namespace acdk { 
namespace xml { 
namespace parsers { 


//static
::acdk::lang::RObject
DocumentBuilder_create_array(int length)
{
  return new ObjectArrayImpl<RDocumentBuilder>(length);
}

//static
::acdk::lang::RObject
DocumentBuilder_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class DocumentBuilder_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)DocumentBuilder::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_fileToURL_INLacdk_io_RFile__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)DocumentBuilder::fileToURL((acdk::io::RFile)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    ret = (::acdk::lang::RObject)This->getDOMImplementation();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_isNamespaceAware__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
  ret = This->isNamespaceAware();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_isValidating__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
  ret = This->isValidating();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    ret = (::acdk::lang::RObject)This->newDocument();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->DocumentBuilder::parse((acdk::io::RFile)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((acdk::io::RFile)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    ret = (::acdk::lang::RObject)This->parse((org::xml::sax::RInputSource)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->DocumentBuilder::parse((acdk::io::RReader)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((acdk::io::RReader)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->DocumentBuilder::parse((acdk::io::RReader)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((acdk::io::RReader)args[0].getObjectVar(), (RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->DocumentBuilder::parse((RString)args[0].getObjectVar());
    else
        ret = (::acdk::lang::RObject)This->parse((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    This->setEntityResolver((org::xml::sax::REntityResolver)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilder* This = dmi_cast<DocumentBuilder>(This_);
    This->setErrorHandler((org::xml::sax::RErrorHandler)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _DocumentBuilder_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_DocumentBuilder__LRDocumentBuilder__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_DocumentBuilder__LRDocumentBuilder__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_DocumentBuilder__LRDocumentBuilder_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "DocumentBuilder", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  DocumentBuilder::clazzInfo(), // return type
  "_0_DocumentBuilder", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_DocumentBuilder__LRDocumentBuilder__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_DocumentBuilder__LRDocumentBuilder__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_d_GetClass", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_fileToURL_INLacdk_io_RFile__LRString__arg_f = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "f", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RFile::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_fileToURL_INLacdk_io_RFile__LRString__args[] = 
{
  &DocumentBuilder_methods_fileToURL_INLacdk_io_RFile__LRString__arg_f,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_fileToURL_INLacdk_io_RFile__LRString__exceptions[] =
{
  acdk::io::RIOException::clazzInfo(), 
  0
};

void DocumentBuilder_fileToURL_INLacdk_io_RFile__LRString__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_fileToURL_INLacdk_io_RFile__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "fileToURL", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_5_fileToURL", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_fileToURL_INLacdk_io_RFile__LRString__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_fileToURL_INLacdk_io_RFile__LRString__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_fileToURL_INLacdk_io_RFile__LRString__dispatch, // invoke this method
  DocumentBuilder_fileToURL_INLacdk_io_RFile__LRString__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getDOMImplementation", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDOMImplementation::clazzInfo(), // return type
  "_1_getDOMImplementation", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_isNamespaceAware__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_isNamespaceAware__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_isNamespaceAware__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isNamespaceAware", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_2_isNamespaceAware", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_isNamespaceAware__Z_args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_isNamespaceAware__Z_exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_isNamespaceAware__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_isValidating__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_isValidating__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_isValidating__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isValidating", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_3_isValidating", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_isValidating__Z_args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_isValidating__Z_exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_isValidating__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "newDocument", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_4_newDocument", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_newDocument__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RFile::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__args[] = 
{
  &DocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__arg_file,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void DocumentBuilder_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_6_parse", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  DocumentBuilder_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__arg_source = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "source", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::RInputSource::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__args[] = 
{
  &DocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__arg_source,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void DocumentBuilder_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_7_parse", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  DocumentBuilder_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__arg_reader = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "reader", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__args[] = 
{
  &DocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__arg_reader,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void DocumentBuilder_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_8_parse", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  DocumentBuilder_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_reader = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "reader", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::io::RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_systemID = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "systemID", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__args[] = 
{
  &DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_reader,
  &DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__arg_systemID,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void DocumentBuilder_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_9_parse", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  DocumentBuilder_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__arg_uri = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "uri", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__args[] = 
{
  &DocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__arg_uri,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__exceptions[] =
{
  org::xml::sax::RSAXException::clazzInfo(), 
  acdk::io::RIOException::clazzInfo(), 
  0
};

void DocumentBuilder_parse_INLRString__Lorg_w3c_dom_RDocument__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, org::xml::sax::SAXException) == true)
    THROW_INSTANCE( org::xml::sax::RSAXException(ex));
 if (instanceof(ex, acdk::io::IOException) == true)
    THROW_INSTANCE( acdk::io::RIOException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::w3c::dom::RDocument::clazzInfo(), // return type
  "_a_parse", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_parse_INLRString__Lorg_w3c_dom_RDocument__exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument__dispatch, // invoke this method
  DocumentBuilder_parse_INLRString__Lorg_w3c_dom_RDocument__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_arg_resolver = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "resolver", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::REntityResolver::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_args[] = 
{
  &DocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_arg_resolver,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setEntityResolver", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_b_setEntityResolver", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_setEntityResolver_INLorg_xml_sax_REntityResolver__V_exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_arg_handler = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "handler", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  org::xml::sax::RErrorHandler::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_args[] = 
{
  &DocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_arg_handler,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setErrorHandler", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_c_setErrorHandler", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_args, // the arguments
  0, //arguments count
  DocumentBuilder_methods_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_exceptions, // the declared exceptions
  DocumentBuilder_MetainfoWrapper::DocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _DocumentBuilder_methods[] = 
{
  &DocumentBuilder_method_DocumentBuilder__LRDocumentBuilder_,
  &DocumentBuilder_method_GetClass__L_acdk_lang_RClass_,
  &DocumentBuilder_method_fileToURL_INLacdk_io_RFile__LRString_,
  &DocumentBuilder_method_getDOMImplementation__Lorg_w3c_dom_RDOMImplementation_,
  &DocumentBuilder_method_isNamespaceAware__Z,
  &DocumentBuilder_method_isValidating__Z,
  &DocumentBuilder_method_newDocument__Lorg_w3c_dom_RDocument_,
  &DocumentBuilder_method_parse_INLacdk_io_RFile__Lorg_w3c_dom_RDocument_,
  &DocumentBuilder_method_parse_INLorg_xml_sax_RInputSource__Lorg_w3c_dom_RDocument_,
  &DocumentBuilder_method_parse_INLacdk_io_RReader__Lorg_w3c_dom_RDocument_,
  &DocumentBuilder_method_parse_INLacdk_io_RReader_INLRString__Lorg_w3c_dom_RDocument_,
  &DocumentBuilder_method_parse_INLRString__Lorg_w3c_dom_RDocument_,
  &DocumentBuilder_method_setEntityResolver_INLorg_xml_sax_REntityResolver__V,
  &DocumentBuilder_method_setErrorHandler_INLorg_xml_sax_RErrorHandler__V,
  0
};


struct DocumentBuilder_MetaInfoInitializer
{  DocumentBuilder_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = DocumentBuilder::clazzInfo();
    ci->fields =  _DocumentBuilder_fields;
    ci->methods =  _DocumentBuilder_methods;
    ci->_scopeParent = acdk_xml_parsers_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
DocumentBuilder_MetaInfoInitializer DocumentBuilder_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace parsers


namespace acdk { 
namespace xml { 
namespace parsers { 


//static
::acdk::lang::RObject
DocumentBuilderFactory_create_array(int length)
{
  return new ObjectArrayImpl<RDocumentBuilderFactory>(length);
}

//static
::acdk::lang::RObject
DocumentBuilderFactory_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class DocumentBuilderFactory_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)DocumentBuilderFactory::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_getAttribute_INLRString__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    ret = (::acdk::lang::RObject)This->getAttribute((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_isCoalescing__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->DocumentBuilderFactory::isCoalescing();
    else
      ret = This->isCoalescing();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_isExpandEntityReferences__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->DocumentBuilderFactory::isExpandEntityReferences();
    else
      ret = This->isExpandEntityReferences();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_isIgnoringComments__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->DocumentBuilderFactory::isIgnoringComments();
    else
      ret = This->isIgnoringComments();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_isIgnoringElementContentWhitespace__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->DocumentBuilderFactory::isIgnoringElementContentWhitespace();
    else
      ret = This->isIgnoringElementContentWhitespace();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_isNamespaceAware__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->DocumentBuilderFactory::isNamespaceAware();
    else
      ret = This->isNamespaceAware();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_isValidating__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->DocumentBuilderFactory::isValidating();
    else
      ret = This->isValidating();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_newDocumentBuilder__LRDocumentBuilder__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    ret = (::acdk::lang::RObject)This->newDocumentBuilder();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_setAttribute_INLRString_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    This->setAttribute((RString)args[0].getObjectVar(), (RObject)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_setCoalescing_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->DocumentBuilderFactory::setCoalescing(args[0].getBoolVar());
    else
        This->setCoalescing(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_setExpandEntityReferences_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->DocumentBuilderFactory::setExpandEntityReferences(args[0].getBoolVar());
    else
        This->setExpandEntityReferences(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_setIgnoringComments_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->DocumentBuilderFactory::setIgnoringComments(args[0].getBoolVar());
    else
        This->setIgnoringComments(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_setIgnoringElementContentWhitespace_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->DocumentBuilderFactory::setIgnoringElementContentWhitespace(args[0].getBoolVar());
    else
        This->setIgnoringElementContentWhitespace(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_setNamespaceAware_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->DocumentBuilderFactory::setNamespaceAware(args[0].getBoolVar());
    else
        This->setNamespaceAware(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  DocumentBuilderFactory_method_setValidating_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->DocumentBuilderFactory::setValidating(args[0].getBoolVar());
    else
        This->setValidating(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  DocumentBuilderFactory_fields__coalescing_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_coalescing, flags);
    else
      This->_coalescing = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  DocumentBuilderFactory_fields__expandEntityRef_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_expandEntityRef, flags);
    else
      This->_expandEntityRef = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  DocumentBuilderFactory_fields__ignoreComments_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_ignoreComments, flags);
    else
      This->_ignoreComments = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  DocumentBuilderFactory_fields__namespaceAware_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_namespaceAware, flags);
    else
      This->_namespaceAware = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  DocumentBuilderFactory_fields__validating_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_validating, flags);
    else
      This->_validating = var.getBoolVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  DocumentBuilderFactory_fields__whitespace_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    DocumentBuilderFactory* This = dmi_cast<DocumentBuilderFactory>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_whitespace, flags);
    else
      This->_whitespace = var.getBoolVar();
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo DocumentBuilderFactory_fields__coalescing = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_coalescing", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_fields__coalescing_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo DocumentBuilderFactory_fields__expandEntityRef = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_expandEntityRef", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_fields__expandEntityRef_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo DocumentBuilderFactory_fields__ignoreComments = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_ignoreComments", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_fields__ignoreComments_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo DocumentBuilderFactory_fields__namespaceAware = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_namespaceAware", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_fields__namespaceAware_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo DocumentBuilderFactory_fields__validating = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_validating", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_fields__validating_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo DocumentBuilderFactory_fields__whitespace = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_whitespace", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(),
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_fields__whitespace_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _DocumentBuilderFactory_fields[] = 
{
  &DocumentBuilderFactory_fields__coalescing,
  &DocumentBuilderFactory_fields__expandEntityRef,
  &DocumentBuilderFactory_fields__ignoreComments,
  &DocumentBuilderFactory_fields__namespaceAware,
  &DocumentBuilderFactory_fields__validating,
  &DocumentBuilderFactory_fields__whitespace,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_DocumentBuilderFactory__LRDocumentBuilderFactory__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_DocumentBuilderFactory__LRDocumentBuilderFactory__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_DocumentBuilderFactory__LRDocumentBuilderFactory_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "DocumentBuilderFactory", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  DocumentBuilderFactory::clazzInfo(), // return type
  "_0_DocumentBuilderFactory", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_DocumentBuilderFactory__LRDocumentBuilderFactory__args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_DocumentBuilderFactory__LRDocumentBuilderFactory__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_g_GetClass", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_getAttribute_INLRString__LRObject__arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_getAttribute_INLRString__LRObject__args[] = 
{
  &DocumentBuilderFactory_methods_getAttribute_INLRString__LRObject__arg_name,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_getAttribute_INLRString__LRObject__exceptions[] =
{
  RIllegalArgumentException::clazzInfo(), 
  0
};

void DocumentBuilderFactory_getAttribute_INLRString__LRObject__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, IllegalArgumentException) == true)
    THROW_INSTANCE( RIllegalArgumentException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_getAttribute_INLRString__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_1_getAttribute", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_getAttribute_INLRString__LRObject__args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_getAttribute_INLRString__LRObject__exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_getAttribute_INLRString__LRObject__dispatch, // invoke this method
  DocumentBuilderFactory_getAttribute_INLRString__LRObject__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_isCoalescing__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_isCoalescing__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_isCoalescing__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isCoalescing", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_3_isCoalescing", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_isCoalescing__Z_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_isCoalescing__Z_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_isCoalescing__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_isExpandEntityReferences__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_isExpandEntityReferences__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_isExpandEntityReferences__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isExpandEntityReferences", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_4_isExpandEntityReferences", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_isExpandEntityReferences__Z_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_isExpandEntityReferences__Z_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_isExpandEntityReferences__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_isIgnoringComments__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_isIgnoringComments__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_isIgnoringComments__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isIgnoringComments", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_5_isIgnoringComments", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_isIgnoringComments__Z_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_isIgnoringComments__Z_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_isIgnoringComments__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_isIgnoringElementContentWhitespace__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_isIgnoringElementContentWhitespace__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_isIgnoringElementContentWhitespace__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isIgnoringElementContentWhitespace", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_6_isIgnoringElementContentWhitespace", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_isIgnoringElementContentWhitespace__Z_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_isIgnoringElementContentWhitespace__Z_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_isIgnoringElementContentWhitespace__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_isNamespaceAware__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_isNamespaceAware__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_isNamespaceAware__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isNamespaceAware", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_7_isNamespaceAware", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_isNamespaceAware__Z_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_isNamespaceAware__Z_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_isNamespaceAware__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_isValidating__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_isValidating__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_isValidating__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isValidating", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_8_isValidating", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_isValidating__Z_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_isValidating__Z_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_isValidating__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_newDocumentBuilder__LRDocumentBuilder__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_newDocumentBuilder__LRDocumentBuilder__exceptions[] =
{
  RParserConfigurationException::clazzInfo(), 
  0
};

void DocumentBuilderFactory_newDocumentBuilder__LRDocumentBuilder__throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, ParserConfigurationException) == true)
    THROW_INSTANCE( RParserConfigurationException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_newDocumentBuilder__LRDocumentBuilder_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "newDocumentBuilder", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RDocumentBuilder::clazzInfo(), // return type
  "_9_newDocumentBuilder", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_newDocumentBuilder__LRDocumentBuilder__args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_newDocumentBuilder__LRDocumentBuilder__exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_newDocumentBuilder__LRDocumentBuilder__dispatch, // invoke this method
  DocumentBuilderFactory_newDocumentBuilder__LRDocumentBuilder__throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_arg_name = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "name", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_args[] = 
{
  &DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_arg_name,
  &DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_exceptions[] =
{
  RIllegalArgumentException::clazzInfo(), 
  0
};

void DocumentBuilderFactory_setAttribute_INLRString_INLRObject__V_throwDispatch(IN(::acdk::lang::RThrowable) ex)
{
 if (instanceof(ex, IllegalArgumentException) == true)
    THROW_INSTANCE( RIllegalArgumentException(ex));
}

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_setAttribute_INLRString_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_setAttribute", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_setAttribute_INLRString_INLRObject__V_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_setAttribute_INLRString_INLRObject__V_dispatch, // invoke this method
  DocumentBuilderFactory_setAttribute_INLRString_INLRObject__V_throwDispatch, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setCoalescing_Z_V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_setCoalescing_Z_V_args[] = 
{
  &DocumentBuilderFactory_methods_setCoalescing_Z_V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_setCoalescing_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_setCoalescing_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setCoalescing", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_setCoalescing", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_setCoalescing_Z_V_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_setCoalescing_Z_V_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_setCoalescing_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setExpandEntityReferences_Z_V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_setExpandEntityReferences_Z_V_args[] = 
{
  &DocumentBuilderFactory_methods_setExpandEntityReferences_Z_V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_setExpandEntityReferences_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_setExpandEntityReferences_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setExpandEntityReferences", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_b_setExpandEntityReferences", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_setExpandEntityReferences_Z_V_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_setExpandEntityReferences_Z_V_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_setExpandEntityReferences_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setIgnoringComments_Z_V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_setIgnoringComments_Z_V_args[] = 
{
  &DocumentBuilderFactory_methods_setIgnoringComments_Z_V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_setIgnoringComments_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_setIgnoringComments_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setIgnoringComments", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_c_setIgnoringComments", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_setIgnoringComments_Z_V_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_setIgnoringComments_Z_V_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_setIgnoringComments_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setIgnoringElementContentWhitespace_Z_V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_setIgnoringElementContentWhitespace_Z_V_args[] = 
{
  &DocumentBuilderFactory_methods_setIgnoringElementContentWhitespace_Z_V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_setIgnoringElementContentWhitespace_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_setIgnoringElementContentWhitespace_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setIgnoringElementContentWhitespace", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_d_setIgnoringElementContentWhitespace", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_setIgnoringElementContentWhitespace_Z_V_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_setIgnoringElementContentWhitespace_Z_V_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_setIgnoringElementContentWhitespace_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setNamespaceAware_Z_V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_setNamespaceAware_Z_V_args[] = 
{
  &DocumentBuilderFactory_methods_setNamespaceAware_Z_V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_setNamespaceAware_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_setNamespaceAware_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setNamespaceAware", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_e_setNamespaceAware", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_setNamespaceAware_Z_V_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_setNamespaceAware_Z_V_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_setNamespaceAware_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo DocumentBuilderFactory_methods_setValidating_Z_V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* DocumentBuilderFactory_methods_setValidating_Z_V_args[] = 
{
  &DocumentBuilderFactory_methods_setValidating_Z_V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentBuilderFactory_methods_setValidating_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DocumentBuilderFactory_method_setValidating_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setValidating", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_f_setValidating", // alternative name of method
  -1, // altlabelHashCode
  DocumentBuilderFactory_methods_setValidating_Z_V_args, // the arguments
  0, //arguments count
  DocumentBuilderFactory_methods_setValidating_Z_V_exceptions, // the declared exceptions
  DocumentBuilderFactory_MetainfoWrapper::DocumentBuilderFactory_method_setValidating_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _DocumentBuilderFactory_methods[] = 
{
  &DocumentBuilderFactory_method_DocumentBuilderFactory__LRDocumentBuilderFactory_,
  &DocumentBuilderFactory_method_GetClass__L_acdk_lang_RClass_,
  &DocumentBuilderFactory_method_getAttribute_INLRString__LRObject_,
  &DocumentBuilderFactory_method_isCoalescing__Z,
  &DocumentBuilderFactory_method_isExpandEntityReferences__Z,
  &DocumentBuilderFactory_method_isIgnoringComments__Z,
  &DocumentBuilderFactory_method_isIgnoringElementContentWhitespace__Z,
  &DocumentBuilderFactory_method_isNamespaceAware__Z,
  &DocumentBuilderFactory_method_isValidating__Z,
  &DocumentBuilderFactory_method_newDocumentBuilder__LRDocumentBuilder_,
  &DocumentBuilderFactory_method_setAttribute_INLRString_INLRObject__V,
  &DocumentBuilderFactory_method_setCoalescing_Z_V,
  &DocumentBuilderFactory_method_setExpandEntityReferences_Z_V,
  &DocumentBuilderFactory_method_setIgnoringComments_Z_V,
  &DocumentBuilderFactory_method_setIgnoringElementContentWhitespace_Z_V,
  &DocumentBuilderFactory_method_setNamespaceAware_Z_V,
  &DocumentBuilderFactory_method_setValidating_Z_V,
  0
};


struct DocumentBuilderFactory_MetaInfoInitializer
{  DocumentBuilderFactory_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = DocumentBuilderFactory::clazzInfo();
    ci->fields =  _DocumentBuilderFactory_fields;
    ci->methods =  _DocumentBuilderFactory_methods;
    ci->_scopeParent = acdk_xml_parsers_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
DocumentBuilderFactory_MetaInfoInitializer DocumentBuilderFactory_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace xml
} // namespace parsers


namespace acdk { 
namespace xml { 
namespace parsers { 


//static
::acdk::lang::RObject
ParserConfigurationException_create_array(int length)
{
  return new ObjectArrayImpl<RParserConfigurationException>(length);
}

//static
::acdk::lang::RObject
ParserConfigurationException_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class ParserConfigurationException_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ParserConfigurationException_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)ParserConfigurationException::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ParserConfigurationException_method_ParserConfigurationException_INLRString__LRParserConfigurationException__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new ParserConfigurationException((RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ParserConfigurationException_method_ParserConfigurationException__LRParserConfigurationException__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new ParserConfigurationException();
    return methinf;
  }
};


void ThrowException_ParserConfigurationException(IN(::acdk::lang::RThrowable) ex)
{
  throw RParserConfigurationException(ex);
}

::acdk::lang::dmi::ClazzFieldInfo* _ParserConfigurationException_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* ParserConfigurationException_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ParserConfigurationException_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ParserConfigurationException_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  ParserConfigurationException_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  ParserConfigurationException_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  ParserConfigurationException_MetainfoWrapper::ParserConfigurationException_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ParserConfigurationException_methods_ParserConfigurationException_INLRString__LRParserConfigurationException__arg_msg = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "msg", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ParserConfigurationException_methods_ParserConfigurationException_INLRString__LRParserConfigurationException__args[] = 
{
  &ParserConfigurationException_methods_ParserConfigurationException_INLRString__LRParserConfigurationException__arg_msg,
  0
};

::acdk::lang::dmi::ClazzInfo* ParserConfigurationException_methods_ParserConfigurationException_INLRString__LRParserConfigurationException__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ParserConfigurationException_method_ParserConfigurationException_INLRString__LRParserConfigurationException_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "ParserConfigurationException", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ParserConfigurationException::clazzInfo(), // return type
  "_0_ParserConfigurationException", // alternative name of method
  -1, // altlabelHashCode
  ParserConfigurationException_methods_ParserConfigurationException_INLRString__LRParserConfigurationException__args, // the arguments
  0, //arguments count
  ParserConfigurationException_methods_ParserConfigurationException_INLRString__LRParserConfigurationException__exceptions, // the declared exceptions
  ParserConfigurationException_MetainfoWrapper::ParserConfigurationException_method_ParserConfigurationException_INLRString__LRParserConfigurationException__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ParserConfigurationException_methods_ParserConfigurationException__LRParserConfigurationException__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ParserConfigurationException_methods_ParserConfigurationException__LRParserConfigurationException__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ParserConfigurationException_method_ParserConfigurationException__LRParserConfigurationException_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "ParserConfigurationException", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ParserConfigurationException::clazzInfo(), // return type
  "_1_ParserConfigurationException", // alternative name of method
  -1, // altlabelHashCode
  ParserConfigurationException_methods_ParserConfigurationException__LRParserConfigurationException__args, // the arguments
  0, //arguments count
  ParserConfigurationException_methods_ParserConfigurationException__LRParserConfigurationException__exceptions, // the declared exceptions
  ParserConfigurationException_MetainfoWrapper::ParserConfigurationException_method_ParserConfigurationException__LRParserConfigurationException__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _ParserConfigurationException_methods[] = 
{
  &ParserConfigurationException_method_GetClass__L_acdk_lang_RClass_,
  &ParserConfigurationException_method_ParserConfigurationException_INLRString__LRParserConfigurationException_,
  &ParserConfigurationException_method_ParserConfigurationException__LRParserConfigurationException_,
  0
};


struct ParserConfigurationException_MetaInfoInitializer
{  ParserConfigurationException_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = ParserConfigurationException::clazzInfo();
    ci->fields =  _ParserConfigurationException_fields;
    ci->methods =  _ParserConfigurationException_methods;
    ci->_scopeParent = acdk_xml_parsers_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
ParserConfigurationException_MetaInfoInitializer ParserConfigurationException_MetaInfoInitializer_staticinstance__;


struct ParserConfigurationException_clazzInfo_ClazzAttributesResInitializer1
{
  ParserConfigurationException_clazzInfo_ClazzAttributesResInitializer1()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)ParserConfigurationException::clazzInfo(), "__throwExceptionFunc", ::acdk::lang::dmi::ClazzAttributeResValue(0xFFFF, (void*)&ThrowException_ParserConfigurationException));
  }
};

ParserConfigurationException_clazzInfo_ClazzAttributesResInitializer1 ParserConfigurationException_clazzInfo_ClazzAttributesResInitializer1_instance;



} // namespace acdk
} // namespace xml
} // namespace parsers


#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) parsers_dummyExportFunc() {}
#endif

