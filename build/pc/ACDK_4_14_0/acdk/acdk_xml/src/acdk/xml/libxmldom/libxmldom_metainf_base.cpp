// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "LibXMLAttr.h"
#include "LibXMLCDATASection.h"
#include "LibXMLCharacterData.h"
#include "LibXMLComment.h"
#include "LibXMLDocument.h"
#include "LibXMLDocumentBuilder.h"
#include "LibXMLDocumentFragment.h"
#include "LibXMLDocumentType.h"
#include "libxmldom.h"
#include "LibXMLDOMInternals.h"
#include "LibXMLElement.h"
#include "LibXMLEntity.h"
#include "LibXMLEntityReference.h"
#include "LibXMLNamedNodeMap.h"
#include "LibXMLNode.h"
#include "LibXMLNodeList.h"
#include "LibXMLNotation.h"
#include "LibXMLPathNodeList.h"
#include "LibXMLProcessingInstruction.h"
#include "LibXMLText.h"
#include "LibXMLXPathExpression.h"
#include "LibXMLXPathNSResolver.h"
#include "LibXMLXPathResult.h"

namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLAttr_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLAttr_super_org__w3c__dom__Attr =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Attr::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLAttr_interfaces[] =
{
  &_LibXMLAttr_super_LibXMLNode,
  &_LibXMLAttr_super_org__w3c__dom__Attr,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLAttr::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLAttr", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLAttr_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLAttr::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLAttr(LibXMLAttr::clazzInfo());

::acdk::lang::RClass
LibXMLAttr::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLAttr::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLCDATASection_super_LibXMLText =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLText::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLCDATASection_super_org__w3c__dom__CDATASection =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::CDATASection::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLCDATASection_interfaces[] =
{
  &_LibXMLCDATASection_super_LibXMLText,
  &_LibXMLCDATASection_super_org__w3c__dom__CDATASection,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCDATASection::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLCDATASection", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLCDATASection_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLCDATASection::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLCDATASection(LibXMLCDATASection::clazzInfo());

::acdk::lang::RClass
LibXMLCDATASection::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLCDATASection::getCollectableFields(FieldReferences& fields)
{
  LibXMLText::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLCharacterData_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLCharacterData_super_org__w3c__dom__CharacterData =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::CharacterData::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLCharacterData_interfaces[] =
{
  &_LibXMLCharacterData_super_LibXMLNode,
  &_LibXMLCharacterData_super_org__w3c__dom__CharacterData,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLCharacterData::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLCharacterData", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLCharacterData_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLCharacterData::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLCharacterData(LibXMLCharacterData::clazzInfo());

::acdk::lang::RClass
LibXMLCharacterData::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLCharacterData::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLComment_super_LibXMLCharacterData =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLCharacterData::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLComment_super_org__w3c__dom__Comment =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Comment::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLComment_interfaces[] =
{
  &_LibXMLComment_super_LibXMLCharacterData,
  &_LibXMLComment_super_org__w3c__dom__Comment,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLComment::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLComment", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLComment_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLComment::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLComment(LibXMLComment::clazzInfo());

::acdk::lang::RClass
LibXMLComment::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLComment::getCollectableFields(FieldReferences& fields)
{
  LibXMLCharacterData::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocument_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocument_super_org__w3c__dom__Document =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Document::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocument_super_org__w3c__dom__DOMConfiguration =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::DOMConfiguration::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocument_super_org__w3c__dom__xpath__XPathEvaluator =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::xpath::XPathEvaluator::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocument_super_org__w3c__dom__traversal__DocumentTraversal =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::traversal::DocumentTraversal::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLDocument_interfaces[] =
{
  &_LibXMLDocument_super_LibXMLNode,
  &_LibXMLDocument_super_org__w3c__dom__Document,
  &_LibXMLDocument_super_org__w3c__dom__DOMConfiguration,
  &_LibXMLDocument_super_org__w3c__dom__xpath__XPathEvaluator,
  &_LibXMLDocument_super_org__w3c__dom__traversal__DocumentTraversal,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocument::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLDocument", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLDocument_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 2, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLDocument::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLDocument(LibXMLDocument::clazzInfo());

::acdk::lang::RClass
LibXMLDocument::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLDocument::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_domImpl._ref_this()); // org::w3c::dom::RDOMImplementation _domImpl 
  fields.push_back((::acdk::lang::RObject*)this->_errorHandler._ref_this()); // org::w3c::dom::RDOMErrorHandler _errorHandler 
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocumentBuilder_super_acdk__xml__parsers__DocumentBuilder =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::xml::parsers::DocumentBuilder::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocumentBuilder_super_org__w3c__dom__DOMImplementation =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface,
  0, //AttributesRes
  org::w3c::dom::DOMImplementation::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLDocumentBuilder_interfaces[] =
{
  &_LibXMLDocumentBuilder_super_acdk__xml__parsers__DocumentBuilder,
  &_LibXMLDocumentBuilder_super_org__w3c__dom__DOMImplementation,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentBuilder::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLDocumentBuilder", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLDocumentBuilder_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 2, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLDocumentBuilder::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLDocumentBuilder(LibXMLDocumentBuilder::clazzInfo());

::acdk::lang::RClass
LibXMLDocumentBuilder::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLDocumentBuilder::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::xml::parsers::, DocumentBuilder)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_entityResolver._ref_this()); // org::xml::sax::REntityResolver _entityResolver 
  fields.push_back((::acdk::lang::RObject*)this->_errorHandler._ref_this()); // org::xml::sax::RErrorHandler _errorHandler 
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocumentFragment_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocumentFragment_super_org__w3c__dom__DocumentFragment =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::DocumentFragment::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLDocumentFragment_interfaces[] =
{
  &_LibXMLDocumentFragment_super_LibXMLNode,
  &_LibXMLDocumentFragment_super_org__w3c__dom__DocumentFragment,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentFragment::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLDocumentFragment", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLDocumentFragment_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLDocumentFragment::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLDocumentFragment(LibXMLDocumentFragment::clazzInfo());

::acdk::lang::RClass
LibXMLDocumentFragment::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLDocumentFragment::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocumentType_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLDocumentType_super_org__w3c__dom__DocumentType =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::DocumentType::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLDocumentType_interfaces[] =
{
  &_LibXMLDocumentType_super_LibXMLNode,
  &_LibXMLDocumentType_super_org__w3c__dom__DocumentType,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLDocumentType::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLDocumentType", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLDocumentType_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLDocumentType::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLDocumentType(LibXMLDocumentType::clazzInfo());

::acdk::lang::RClass
LibXMLDocumentType::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLDocumentType::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLElement_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLElement_super_org__w3c__dom__Element =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Element::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLElement_interfaces[] =
{
  &_LibXMLElement_super_LibXMLNode,
  &_LibXMLElement_super_org__w3c__dom__Element,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLElement::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLElement", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLElement_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLElement::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLElement(LibXMLElement::clazzInfo());

::acdk::lang::RClass
LibXMLElement::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLElement::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLEntity_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLEntity_super_org__w3c__dom__Entity =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Entity::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLEntity_interfaces[] =
{
  &_LibXMLEntity_super_LibXMLNode,
  &_LibXMLEntity_super_org__w3c__dom__Entity,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntity::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLEntity", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLEntity_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLEntity::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLEntity(LibXMLEntity::clazzInfo());

::acdk::lang::RClass
LibXMLEntity::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLEntity::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLEntityReference_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLEntityReference_super_org__w3c__dom__EntityReference =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::EntityReference::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLEntityReference_interfaces[] =
{
  &_LibXMLEntityReference_super_LibXMLNode,
  &_LibXMLEntityReference_super_org__w3c__dom__EntityReference,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLEntityReference::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLEntityReference", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLEntityReference_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLEntityReference::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLEntityReference(LibXMLEntityReference::clazzInfo());

::acdk::lang::RClass
LibXMLEntityReference::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLEntityReference::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 


::acdk::lang::dmi::ClazzEnumValueInfo NamedNodeMapType_NNMTAttributes = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NNMTAttributes", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::xml::libxmldom::NNMTAttributes, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NamedNodeMapType_NNMTEntities = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NNMTEntities", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::xml::libxmldom::NNMTEntities, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NamedNodeMapType_NNMTNotations = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NNMTNotations", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::xml::libxmldom::NNMTNotations, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* NamedNodeMapType_enumValues[] = {
  &NamedNodeMapType_NNMTAttributes,
  &NamedNodeMapType_NNMTEntities,
  &NamedNodeMapType_NNMTNotations,
0
};

::acdk::lang::dmi::ClazzEnumInfo NamedNodeMapType_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "NamedNodeMapType", // name
  -1, // hashCode
  "acdk/xml/libxmldom", // ns
  0, // _scopeParent
  0, // _nextSibling
  NamedNodeMapType_enumValues, // values
  0, // internal next link
};

::acdk::lang::dmi::RegisterEnumInfo _register_NamedNodeMapType(&NamedNodeMapType_enumInfo);


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNamedNodeMap_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNamedNodeMap_super_org__w3c__dom__NamedNodeMap =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::NamedNodeMap::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLNamedNodeMap_interfaces[] =
{
  &_LibXMLNamedNodeMap_super_acdk__lang__Object,
  &_LibXMLNamedNodeMap_super_org__w3c__dom__NamedNodeMap,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNamedNodeMap::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLNamedNodeMap", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLNamedNodeMap_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLNamedNodeMap::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLNamedNodeMap(LibXMLNamedNodeMap::clazzInfo());

::acdk::lang::RClass
LibXMLNamedNodeMap::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLNamedNodeMap::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNode_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNode_super_org__w3c__dom__Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLNode_interfaces[] =
{
  &_LibXMLNode_super_acdk__lang__Object,
  &_LibXMLNode_super_org__w3c__dom__Node,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNode::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLNode", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLNode_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLNode::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLNode(LibXMLNode::clazzInfo());

::acdk::lang::RClass
LibXMLNode::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLNode::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNodeList_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNodeList_super_org__w3c__dom__NodeList =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::NodeList::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLNodeList_interfaces[] =
{
  &_LibXMLNodeList_super_acdk__lang__Object,
  &_LibXMLNodeList_super_org__w3c__dom__NodeList,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNodeList::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLNodeList", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLNodeList_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLNodeList::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLNodeList(LibXMLNodeList::clazzInfo());

::acdk::lang::RClass
LibXMLNodeList::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLNodeList::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNotation_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLNotation_super_org__w3c__dom__Notation =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Notation::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLNotation_interfaces[] =
{
  &_LibXMLNotation_super_LibXMLNode,
  &_LibXMLNotation_super_org__w3c__dom__Notation,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLNotation::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLNotation", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLNotation_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLNotation::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLNotation(LibXMLNotation::clazzInfo());

::acdk::lang::RClass
LibXMLNotation::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLNotation::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLPathNodeList_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLPathNodeList_super_org__w3c__dom__NodeList =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::NodeList::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLPathNodeList_interfaces[] =
{
  &_LibXMLPathNodeList_super_acdk__lang__Object,
  &_LibXMLPathNodeList_super_org__w3c__dom__NodeList,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLPathNodeList::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLPathNodeList", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLPathNodeList_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLPathNodeList::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLPathNodeList(LibXMLPathNodeList::clazzInfo());

::acdk::lang::RClass
LibXMLPathNodeList::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLPathNodeList::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLProcessingInstruction_super_LibXMLNode =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLNode::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLProcessingInstruction_super_org__w3c__dom__ProcessingInstruction =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::ProcessingInstruction::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLProcessingInstruction_interfaces[] =
{
  &_LibXMLProcessingInstruction_super_LibXMLNode,
  &_LibXMLProcessingInstruction_super_org__w3c__dom__ProcessingInstruction,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLProcessingInstruction::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLProcessingInstruction", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLProcessingInstruction_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLProcessingInstruction::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLProcessingInstruction(LibXMLProcessingInstruction::clazzInfo());

::acdk::lang::RClass
LibXMLProcessingInstruction::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLProcessingInstruction::getCollectableFields(FieldReferences& fields)
{
  LibXMLNode::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLText_super_LibXMLCharacterData =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LibXMLCharacterData::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLText_super_org__w3c__dom__Text =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::Text::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLText_interfaces[] =
{
  &_LibXMLText_super_LibXMLCharacterData,
  &_LibXMLText_super_org__w3c__dom__Text,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLText::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLText", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLText_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLText::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLText(LibXMLText::clazzInfo());

::acdk::lang::RClass
LibXMLText::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLText::getCollectableFields(FieldReferences& fields)
{
  LibXMLCharacterData::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLXPathExpression_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLXPathExpression_super_org__w3c__dom__xpath__XPathExpression =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::xpath::XPathExpression::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLXPathExpression_interfaces[] =
{
  &_LibXMLXPathExpression_super_acdk__lang__Object,
  &_LibXMLXPathExpression_super_org__w3c__dom__xpath__XPathExpression,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLXPathExpression::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLXPathExpression", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLXPathExpression_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLXPathExpression::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLXPathExpression(LibXMLXPathExpression::clazzInfo());

::acdk::lang::RClass
LibXMLXPathExpression::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLXPathExpression::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLXPathNSResolver_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLXPathNSResolver_super_org__w3c__dom__xpath__XPathNSResolver =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::xpath::XPathNSResolver::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLXPathNSResolver_interfaces[] =
{
  &_LibXMLXPathNSResolver_super_acdk__lang__Object,
  &_LibXMLXPathNSResolver_super_org__w3c__dom__xpath__XPathNSResolver,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLXPathNSResolver::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLXPathNSResolver", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLXPathNSResolver_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLXPathNSResolver::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLXPathNSResolver(LibXMLXPathNSResolver::clazzInfo());

::acdk::lang::RClass
LibXMLXPathNSResolver::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLXPathNSResolver::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_doc._ref_this()); // RLibXMLDocument _doc 
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom


namespace acdk { 
namespace xml { 
namespace libxmldom { 

::acdk::lang::dmi::ClazzSuperInfo _LibXMLXPathResult_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _LibXMLXPathResult_super_org__w3c__dom__xpath__XPathResult =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  org::w3c::dom::xpath::XPathResult::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LibXMLXPathResult_interfaces[] =
{
  &_LibXMLXPathResult_super_acdk__lang__Object,
  &_LibXMLXPathResult_super_org__w3c__dom__xpath__XPathResult,
  0
};

::acdk::lang::dmi::ClazzInfo* LibXMLXPathResult::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "LibXMLXPathResult", // name of class
  -1, // hashCode
  "acdk/xml/libxmldom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _LibXMLXPathResult_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    LibXMLXPathResult::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_LibXMLXPathResult(LibXMLXPathResult::clazzInfo());

::acdk::lang::RClass
LibXMLXPathResult::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
LibXMLXPathResult::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace xml
} // namespace libxmldom

