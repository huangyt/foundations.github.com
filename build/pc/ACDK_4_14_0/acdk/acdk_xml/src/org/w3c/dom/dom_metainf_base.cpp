// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "Attr.h"
#include "Branch.h"
#include "CDATASection.h"
#include "CharacterData.h"
#include "Comment.h"
#include "Document.h"
#include "DocumentFragment.h"
#include "DocumentType.h"
#include "dom.h"
#include "DOMConfiguration.h"
#include "DOMError.h"
#include "DOMErrorHandler.h"
#include "DOMException.h"
#include "DOMImplementation.h"
#include "DOMLocator.h"
#include "DOMWriter.h"
#include "Element.h"
#include "Entity.h"
#include "EntityReference.h"
#include "NamedNodeMap.h"
#include "Node.h"
#include "NodeList.h"
#include "Notation.h"
#include "ProcessingInstruction.h"
#include "Text.h"

namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo _Attr_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Attr_interfaces[] =
{
  &_Attr_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* Attr::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Attr", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Attr_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Attr::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Attr(Attr::clazzInfo());

::acdk::lang::RClass
Attr::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Attr::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo _Branch_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Branch_interfaces[] =
{
  &_Branch_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* Branch::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface, // clazz-flags
  0, //AttributesRes
  "Branch", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Branch_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Branch::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Branch(Branch::clazzInfo());

::acdk::lang::RClass
Branch::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Branch::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _CDATASection_super_Text =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Text::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _CDATASection_interfaces[] =
{
  &_CDATASection_super_Text,
  0
};

::acdk::lang::dmi::ClazzInfo* CDATASection::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface, // clazz-flags
  0, //AttributesRes
  "CDATASection", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _CDATASection_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    CDATASection::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_CDATASection(CDATASection::clazzInfo());

::acdk::lang::RClass
CDATASection::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
CDATASection::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _CharacterData_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _CharacterData_interfaces[] =
{
  &_CharacterData_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* CharacterData::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "CharacterData", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _CharacterData_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    CharacterData::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_CharacterData(CharacterData::clazzInfo());

::acdk::lang::RClass
CharacterData::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
CharacterData::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _Comment_super_CharacterData =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  CharacterData::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Comment_interfaces[] =
{
  &_Comment_super_CharacterData,
  0
};

::acdk::lang::dmi::ClazzInfo* Comment::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface, // clazz-flags
  0, //AttributesRes
  "Comment", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Comment_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Comment::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Comment(Comment::clazzInfo());

::acdk::lang::RClass
Comment::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Comment::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _Document_super_Branch =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Branch::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Document_interfaces[] =
{
  &_Document_super_Branch,
  0
};

::acdk::lang::dmi::ClazzInfo* Document::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Document", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Document_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Document::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Document(Document::clazzInfo());

::acdk::lang::RClass
Document::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Document::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _DocumentFragment_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DocumentFragment_interfaces[] =
{
  &_DocumentFragment_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentFragment::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface, // clazz-flags
  0, //AttributesRes
  "DocumentFragment", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DocumentFragment_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DocumentFragment::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DocumentFragment(DocumentFragment::clazzInfo());

::acdk::lang::RClass
DocumentFragment::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DocumentFragment::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo _DocumentType_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DocumentType_interfaces[] =
{
  &_DocumentType_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* DocumentType::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "DocumentType", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DocumentType_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DocumentType::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DocumentType(DocumentType::clazzInfo());

::acdk::lang::RClass
DocumentType::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DocumentType::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo* _DOMConfiguration_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* DOMConfiguration::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "DOMConfiguration", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMConfiguration_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMConfiguration::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMConfiguration(DOMConfiguration::clazzInfo());

::acdk::lang::RClass
DOMConfiguration::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMConfiguration::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 


::acdk::lang::dmi::ClazzEnumValueInfo ErrorSeverity_SevertyWarning = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SevertyWarning", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::SevertyWarning, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorSeverity_SevertyError = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SevertyError", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::SevertyError, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorSeverity_SevertyFatalError = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SevertyFatalError", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::SevertyFatalError, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* ErrorSeverity_enumValues[] = {
  &ErrorSeverity_SevertyWarning,
  &ErrorSeverity_SevertyError,
  &ErrorSeverity_SevertyFatalError,
0
};

::acdk::lang::dmi::ClazzEnumInfo* ErrorSeverityMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo ErrorSeverity_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "ErrorSeverity", // name
  -1, // hashCode
  "org/w3c/dom", // ns
  0, // _scopeParent
  0, // _nextSibling
  ErrorSeverity_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_ErrorSeverity(&ErrorSeverity_enumInfo);

  return &ErrorSeverity_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_ErrorSeverityEnumInfo(ErrorSeverityMetaInf::GetEnumInfo());


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo* _DOMError_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* DOMError::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "DOMError", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMError_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMError::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMError(DOMError::clazzInfo());

::acdk::lang::RClass
DOMError::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMError::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo* _DOMErrorHandler_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* DOMErrorHandler::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "DOMErrorHandler", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMErrorHandler_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMErrorHandler::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMErrorHandler(DOMErrorHandler::clazzInfo());

::acdk::lang::RClass
DOMErrorHandler::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMErrorHandler::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_INDEX_SIZE_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "INDEX_SIZE_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::INDEX_SIZE_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_DOMSTRING_SIZE_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOMSTRING_SIZE_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOMSTRING_SIZE_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_HIERARCHY_REQUEST_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "HIERARCHY_REQUEST_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::HIERARCHY_REQUEST_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_WRONG_DOCUMENT_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "WRONG_DOCUMENT_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::WRONG_DOCUMENT_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_INVALID_CHARACTER_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "INVALID_CHARACTER_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::INVALID_CHARACTER_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_NO_DATA_ALLOWED_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NO_DATA_ALLOWED_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NO_DATA_ALLOWED_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_NO_MODIFICATION_ALLOWED_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NO_MODIFICATION_ALLOWED_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NO_MODIFICATION_ALLOWED_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_NOT_FOUND_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NOT_FOUND_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NOT_FOUND_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_NOT_SUPPORTED_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NOT_SUPPORTED_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NOT_SUPPORTED_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_INUSE_ATTRIBUTE_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "INUSE_ATTRIBUTE_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::INUSE_ATTRIBUTE_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_INVALID_STATE_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "INVALID_STATE_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::INVALID_STATE_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_SYNTAX_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SYNTAX_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::SYNTAX_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_INVALID_MODIFICATION_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "INVALID_MODIFICATION_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::INVALID_MODIFICATION_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_NAMESPACE_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NAMESPACE_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NAMESPACE_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_INVALID_ACCESS_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "INVALID_ACCESS_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::INVALID_ACCESS_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_VALIDATION_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "VALIDATION_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::VALIDATION_ERR, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ErrorCodes_TYPE_MISMATCH_ERR = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "TYPE_MISMATCH_ERR", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::TYPE_MISMATCH_ERR, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* ErrorCodes_enumValues[] = {
  &ErrorCodes_INDEX_SIZE_ERR,
  &ErrorCodes_DOMSTRING_SIZE_ERR,
  &ErrorCodes_HIERARCHY_REQUEST_ERR,
  &ErrorCodes_WRONG_DOCUMENT_ERR,
  &ErrorCodes_INVALID_CHARACTER_ERR,
  &ErrorCodes_NO_DATA_ALLOWED_ERR,
  &ErrorCodes_NO_MODIFICATION_ALLOWED_ERR,
  &ErrorCodes_NOT_FOUND_ERR,
  &ErrorCodes_NOT_SUPPORTED_ERR,
  &ErrorCodes_INUSE_ATTRIBUTE_ERR,
  &ErrorCodes_INVALID_STATE_ERR,
  &ErrorCodes_SYNTAX_ERR,
  &ErrorCodes_INVALID_MODIFICATION_ERR,
  &ErrorCodes_NAMESPACE_ERR,
  &ErrorCodes_INVALID_ACCESS_ERR,
  &ErrorCodes_VALIDATION_ERR,
  &ErrorCodes_TYPE_MISMATCH_ERR,
0
};

::acdk::lang::dmi::ClazzEnumInfo* ErrorCodesMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo ErrorCodes_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "ErrorCodes", // name
  -1, // hashCode
  "org/w3c/dom", // ns
  0, // _scopeParent
  0, // _nextSibling
  ErrorCodes_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_ErrorCodes(&ErrorCodes_enumInfo);

  return &ErrorCodes_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_ErrorCodesEnumInfo(ErrorCodesMetaInf::GetEnumInfo());


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo _DOMException_super_acdk__lang__Exception =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Exception::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DOMException_interfaces[] =
{
  &_DOMException_super_acdk__lang__Exception,
  0
};

::acdk::lang::dmi::ClazzInfo* DOMException::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "DOMException", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMException_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMException::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMException(DOMException::clazzInfo());

::acdk::lang::RClass
DOMException::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMException::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Exception)::getCollectableFields(fields);
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo* _DOMImplementation_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* DOMImplementation::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "DOMImplementation", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMImplementation_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMImplementation::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMImplementation(DOMImplementation::clazzInfo());

::acdk::lang::RClass
DOMImplementation::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMImplementation::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo* _DOMLocator_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* DOMLocator::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "DOMLocator", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMLocator_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMLocator::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMLocator(DOMLocator::clazzInfo());

::acdk::lang::RClass
DOMLocator::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMLocator::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFNewLines = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFNewLines", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFNewLines, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFSuppressEncodingDecl = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFSuppressEncodingDecl", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFSuppressEncodingDecl, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFWithNewLinesAfterDecl = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFWithNewLinesAfterDecl", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFWithNewLinesAfterDecl, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFExpandEmptyElements = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFExpandEmptyElements", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFExpandEmptyElements, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFTrimText = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFTrimText", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFTrimText, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFPadText = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFPadText", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFPadText, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFSuppressXmlDecl = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFSuppressXmlDecl", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFSuppressXmlDecl, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFDefaultXmlFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFDefaultXmlFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFDefaultXmlFlags, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFCompactFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFCompactFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFCompactFlags, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DOMWriterFormatFlags_DWFFPrettyFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DWFFPrettyFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DWFFPrettyFlags, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* DOMWriterFormatFlags_enumValues[] = {
  &DOMWriterFormatFlags_DWFFNewLines,
  &DOMWriterFormatFlags_DWFFSuppressEncodingDecl,
  &DOMWriterFormatFlags_DWFFWithNewLinesAfterDecl,
  &DOMWriterFormatFlags_DWFFExpandEmptyElements,
  &DOMWriterFormatFlags_DWFFTrimText,
  &DOMWriterFormatFlags_DWFFPadText,
  &DOMWriterFormatFlags_DWFFSuppressXmlDecl,
  &DOMWriterFormatFlags_DWFFDefaultXmlFlags,
  &DOMWriterFormatFlags_DWFFCompactFlags,
  &DOMWriterFormatFlags_DWFFPrettyFlags,
0
};

::acdk::lang::dmi::ClazzEnumInfo* DOMWriterFormatFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo DOMWriterFormatFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "DOMWriterFormatFlags", // name
  -1, // hashCode
  "org/w3c/dom", // ns
  0, // _scopeParent
  0, // _nextSibling
  DOMWriterFormatFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_DOMWriterFormatFlags(&DOMWriterFormatFlags_enumInfo);

  return &DOMWriterFormatFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_DOMWriterFormatFlagsEnumInfo(DOMWriterFormatFlagsMetaInf::GetEnumInfo());


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo _DOMWriterFormat_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DOMWriterFormat_interfaces[] =
{
  &_DOMWriterFormat_super_acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* DOMWriterFormat::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "DOMWriterFormat", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMWriterFormat_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 3, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMWriterFormat::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMWriterFormat(DOMWriterFormat::clazzInfo());

::acdk::lang::RClass
DOMWriterFormat::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMWriterFormat::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_encoding._ref_this()); // acdk::locale::REncoding _encoding 
  fields.push_back((::acdk::lang::RObject*)this->_indentString._ref_this()); // RString _indentString 
  fields.push_back((::acdk::lang::RObject*)this->_lineSep._ref_this()); // RString _lineSep 
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo _DOMWriter_super_acdk__io__AbstractCharFilterWriter =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::io::AbstractCharFilterWriter::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DOMWriter_interfaces[] =
{
  &_DOMWriter_super_acdk__io__AbstractCharFilterWriter,
  0
};

::acdk::lang::dmi::ClazzInfo* DOMWriter::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "DOMWriter", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DOMWriter_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DOMWriter::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DOMWriter(DOMWriter::clazzInfo());

::acdk::lang::RClass
DOMWriter::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DOMWriter::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::io::, AbstractCharFilterWriter)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_format._ref_this()); // RDOMWriterFormat _format 
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _Element_super_Branch =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Branch::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Element_interfaces[] =
{
  &_Element_super_Branch,
  0
};

::acdk::lang::dmi::ClazzInfo* Element::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Element", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Element_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Element::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Element(Element::clazzInfo());

::acdk::lang::RClass
Element::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Element::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _Entity_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Entity_interfaces[] =
{
  &_Entity_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* Entity::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Entity", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Entity_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Entity::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Entity(Entity::clazzInfo());

::acdk::lang::RClass
Entity::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Entity::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _EntityReference_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _EntityReference_interfaces[] =
{
  &_EntityReference_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* EntityReference::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface, // clazz-flags
  0, //AttributesRes
  "EntityReference", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _EntityReference_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    EntityReference::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_EntityReference(EntityReference::clazzInfo());

::acdk::lang::RClass
EntityReference::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
EntityReference::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo* _NamedNodeMap_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* NamedNodeMap::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "NamedNodeMap", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _NamedNodeMap_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    NamedNodeMap::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_NamedNodeMap(NamedNodeMap::clazzInfo());

::acdk::lang::RClass
NamedNodeMap::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
NamedNodeMap::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_ELEMENT_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ELEMENT_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::ELEMENT_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_ATTRIBUTE_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ATTRIBUTE_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::ATTRIBUTE_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_TEXT_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "TEXT_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::TEXT_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_CDATA_SECTION_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "CDATA_SECTION_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::CDATA_SECTION_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_ENTITY_REFERENCE_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ENTITY_REFERENCE_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::ENTITY_REFERENCE_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_ENTITY_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ENTITY_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::ENTITY_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_PROCESSING_INSTRUCTION_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PROCESSING_INSTRUCTION_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::PROCESSING_INSTRUCTION_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_COMMENT_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "COMMENT_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::COMMENT_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_DOCUMENT_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_DOCUMENT_TYPE_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_TYPE_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_TYPE_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_DOCUMENT_FRAGMENT_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_FRAGMENT_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_FRAGMENT_NODE, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeType_NOTATION_NODE = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NOTATION_NODE", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NOTATION_NODE, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* NodeType_enumValues[] = {
  &NodeType_ELEMENT_NODE,
  &NodeType_ATTRIBUTE_NODE,
  &NodeType_TEXT_NODE,
  &NodeType_CDATA_SECTION_NODE,
  &NodeType_ENTITY_REFERENCE_NODE,
  &NodeType_ENTITY_NODE,
  &NodeType_PROCESSING_INSTRUCTION_NODE,
  &NodeType_COMMENT_NODE,
  &NodeType_DOCUMENT_NODE,
  &NodeType_DOCUMENT_TYPE_NODE,
  &NodeType_DOCUMENT_FRAGMENT_NODE,
  &NodeType_NOTATION_NODE,
0
};

::acdk::lang::dmi::ClazzEnumInfo* NodeTypeMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo NodeType_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "NodeType", // name
  -1, // hashCode
  "org/w3c/dom", // ns
  0, // _scopeParent
  0, // _nextSibling
  NodeType_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_NodeType(&NodeType_enumInfo);

  return &NodeType_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_NodeTypeEnumInfo(NodeTypeMetaInf::GetEnumInfo());


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 


::acdk::lang::dmi::ClazzEnumValueInfo DocumentPosition_DOCUMENT_POSITION_DISCONNECTED = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_POSITION_DISCONNECTED", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_POSITION_DISCONNECTED, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DocumentPosition_DOCUMENT_POSITION_PRECEDING = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_POSITION_PRECEDING", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_POSITION_PRECEDING, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DocumentPosition_DOCUMENT_POSITION_FOLLOWING = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_POSITION_FOLLOWING", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_POSITION_FOLLOWING, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DocumentPosition_DOCUMENT_POSITION_CONTAINS = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_POSITION_CONTAINS", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_POSITION_CONTAINS, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DocumentPosition_DOCUMENT_POSITION_CONTAINED_BY = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_POSITION_CONTAINED_BY", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_POSITION_CONTAINED_BY, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DocumentPosition_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* DocumentPosition_enumValues[] = {
  &DocumentPosition_DOCUMENT_POSITION_DISCONNECTED,
  &DocumentPosition_DOCUMENT_POSITION_PRECEDING,
  &DocumentPosition_DOCUMENT_POSITION_FOLLOWING,
  &DocumentPosition_DOCUMENT_POSITION_CONTAINS,
  &DocumentPosition_DOCUMENT_POSITION_CONTAINED_BY,
  &DocumentPosition_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC,
0
};

::acdk::lang::dmi::ClazzEnumInfo* DocumentPositionMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo DocumentPosition_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "DocumentPosition", // name
  -1, // hashCode
  "org/w3c/dom", // ns
  0, // _scopeParent
  0, // _nextSibling
  DocumentPosition_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_DocumentPosition(&DocumentPosition_enumInfo);

  return &DocumentPosition_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_DocumentPositionEnumInfo(DocumentPositionMetaInf::GetEnumInfo());


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 


::acdk::lang::dmi::ClazzEnumValueInfo NodeWriteFlags_NWFWithIndent = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NWFWithIndent", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NWFWithIndent, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeWriteFlags_NWFWHtmlAsXml = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NWFWHtmlAsXml", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NWFWHtmlAsXml, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo NodeWriteFlags_NWFWDefaultFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "NWFWDefaultFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  org::w3c::dom::NWFWDefaultFlags, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* NodeWriteFlags_enumValues[] = {
  &NodeWriteFlags_NWFWithIndent,
  &NodeWriteFlags_NWFWHtmlAsXml,
  &NodeWriteFlags_NWFWDefaultFlags,
0
};

::acdk::lang::dmi::ClazzEnumInfo* NodeWriteFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo NodeWriteFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "NodeWriteFlags", // name
  -1, // hashCode
  "org/w3c/dom", // ns
  0, // _scopeParent
  0, // _nextSibling
  NodeWriteFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_NodeWriteFlags(&NodeWriteFlags_enumInfo);

  return &NodeWriteFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_NodeWriteFlagsEnumInfo(NodeWriteFlagsMetaInf::GetEnumInfo());


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

::acdk::lang::dmi::ClazzSuperInfo* _Node_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* Node::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Node", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Node_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Node::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Node(Node::clazzInfo());

::acdk::lang::RClass
Node::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Node::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo* _NodeList_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* NodeList::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "NodeList", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _NodeList_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    NodeList::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_NodeList(NodeList::clazzInfo());

::acdk::lang::RClass
NodeList::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
NodeList::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _NodeListIterator_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _NodeListIterator_super_acdk__util__Iterator =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  acdk::util::Iterator::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _NodeListIterator_interfaces[] =
{
  &_NodeListIterator_super_acdk__lang__Object,
  &_NodeListIterator_super_acdk__util__Iterator,
  0
};

::acdk::lang::dmi::ClazzInfo* NodeListIterator::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "NodeListIterator", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _NodeListIterator_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    NodeListIterator::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_NodeListIterator(NodeListIterator::clazzInfo());

::acdk::lang::RClass
NodeListIterator::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
NodeListIterator::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_list._ref_this()); // RNodeList _list 
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _Notation_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Notation_interfaces[] =
{
  &_Notation_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* Notation::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Notation", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Notation_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Notation::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Notation(Notation::clazzInfo());

::acdk::lang::RClass
Notation::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Notation::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _ProcessingInstruction_super_Node =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Node::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ProcessingInstruction_interfaces[] =
{
  &_ProcessingInstruction_super_Node,
  0
};

::acdk::lang::dmi::ClazzInfo* ProcessingInstruction::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "ProcessingInstruction", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ProcessingInstruction_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ProcessingInstruction::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ProcessingInstruction(ProcessingInstruction::clazzInfo());

::acdk::lang::RClass
ProcessingInstruction::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ProcessingInstruction::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom


namespace org { 
namespace w3c { 
namespace dom { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _Text_super_CharacterData =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  CharacterData::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Text_interfaces[] =
{
  &_Text_super_CharacterData,
  0
};

::acdk::lang::dmi::ClazzInfo* Text::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Text", // name of class
  -1, // hashCode
  "org/w3c/dom", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Text_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Text::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Text(Text::clazzInfo());

::acdk::lang::RClass
Text::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Text::getCollectableFields(FieldReferences& fields)
{
}


} // namespace org
} // namespace w3c
} // namespace dom

