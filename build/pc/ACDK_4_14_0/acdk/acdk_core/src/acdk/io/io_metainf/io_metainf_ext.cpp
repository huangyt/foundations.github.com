// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../io.h"
#include "../AbstractCharFilterReader.h"
#include "../AbstractCharFilterWriter.h"
#include "../AbstractCharReader.h"
#include "../AbstractCharWriter.h"
#include "../AbstractFilterReader.h"
#include "../AbstractFilterWriter.h"
#include "../AbstractObjectReader.h"
#include "../AbstractObjectWriter.h"
#include "../AbstractReader.h"
#include "../AbstractStorageReader.h"
#include "../AbstractStorageWriter.h"
#include "../AbstractWriter.h"
#include "../ASCIIDataReader.h"
#include "../ASCIIDataWriter.h"
#include "../BinaryDataReader.h"
#include "../BinaryDataWriter.h"
#include "../BinaryObjectReader.h"
#include "../BinaryObjectWriter.h"
#include "../BufferedReader.h"
#include "../BufferedWriter.h"
#include "../ByteBufferReader.h"
#include "../ByteBufferWriter.h"
#include "../BytePtrReader.h"
#include "../ByteToCharReader.h"
#include "../ByteToCharWriter.h"
#include "../CharArrayReader.h"
#include "../CharArrayWriter.h"
#include "../CharReader.h"
#include "../CharToByteReader.h"
#include "../CharToByteWriter.h"
#include "../CharWriter.h"
#include "../ConsoleCharReader.h"
#include "../ConsoleCharWriter.h"
#include "../ConsoleReader.h"
#include "../ConsoleWriter.h"
#include "../DataReader.h"
#include "../DataWriter.h"
#include "../EOFException.h"
#include "../File.h"
#include "../FileAbstractImpl.h"
#include "../FileDescriptor.h"
#include "../FileFilter.h"
#include "../FileImpl.h"
#include "../FileInfo.h"
#include "../FilenameFilter.h"
#include "../FileNotFoundException.h"
#include "../FileReader.h"
#include "../FileReaderWriterImpl.h"
#include "../FileStandardImpl.h"
#include "../FileStatus.h"
#include "../FileSystem.h"
#include "../FileSystemFactory.h"
#include "../FileWriter.h"
#include "../FilterReader.h"
#include "../FilterWriter.h"
#include "../GlobFilenameFilter.h"
#include "../InputReader.h"
#include "../io.h"
#include "../IOException.h"
#include "../io_all.h"
#include "../JoinedReader.h"
#include "../LineNumberCharReader.h"
#include "../LineNumberReader.h"
#include "../MemoryMappedFile.h"
#include "../MemReader.h"
#include "../MemWriter.h"
#include "../NullWriter.h"
#include "../ObjectReader.h"
#include "../ObjectStreamException.h"
#include "../ObjectWriter.h"
#include "../OutputDebugStringWriter.h"
#include "../PipedReader.h"
#include "../PipedWriter.h"
#include "../PrintWriter.h"
#include "../PushbackCharReader.h"
#include "../PushbackReader.h"
#include "../RandomAccessFile.h"
#include "../Reader.h"
#include "../RessourceFileImpl.h"
#include "../RessourceFileSystem.h"
#include "../Serializable.h"
#include "../SerializedObjectDescriptor.h"
#include "../StandardFileSystem.h"
#include "../Storage.h"
#include "../StreamTokenizer.h"
#include "../StringReader.h"
#include "../StringWriter.h"
#include "../SubReader.h"
#include "../TeeCharWriter.h"
#include "../TeeReader.h"
#include "../TeeWriter.h"
#include "../Writer.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>


struct acdk::lang::dmi::UnitInfo acdk_io_unitInfo = {
  ::acdk::lang::dmi::MiUnitInfo, // flags
  0, //attributeRes
  "io", // name of unit
  -1, // hashCode
  "acdk", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  0 // _firstChild first ClazzInfo of this unit
};

static ::acdk::lang::dmi::RegisterUnitInfo _register_acdk_io_unitInfo(&acdk_io_unitInfo);


namespace acdk { 
namespace io { 


//static
::acdk::lang::RObject
AbstractCharFilterReader_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractCharFilterReader>(length);
}

//static
::acdk::lang::RObject
AbstractCharFilterReader_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractCharFilterReader_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractCharFilterReader(::acdk::lang::dmi::castTo< RCharReader>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractCharFilterReader(::acdk::lang::dmi::castTo< RCharReader>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractCharFilterReader::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_close__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterReader* This = dmi_cast<AbstractCharFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharFilterReader::close();
    else
        This->close();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_getIn__LRCharReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterReader* This = dmi_cast<AbstractCharFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharFilterReader::getIn();
    else
        ret = (::acdk::lang::RObject)This->getIn();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_getReader_INLacdk_locale_REncoder__LRReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterReader* This = dmi_cast<AbstractCharFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharFilterReader::getReader(::acdk::lang::dmi::castTo< acdk::locale::REncoder>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->getReader(::acdk::lang::dmi::castTo< acdk::locale::REncoder>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_getReader__LRReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterReader* This = dmi_cast<AbstractCharFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharFilterReader::getReader();
    else
        ret = (::acdk::lang::RObject)This->getReader();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_readChar__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterReader* This = dmi_cast<AbstractCharFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractCharFilterReader::readChar();
    else
      ret = This->readChar();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterReader_method_readString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterReader* This = dmi_cast<AbstractCharFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharFilterReader::readString();
    else
        ret = (::acdk::lang::RObject)This->readString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractCharFilterReader_fields__in_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractCharFilterReader* This = dmi_cast<AbstractCharFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_in, flags);
    else
      This->_in = ::acdk::lang::dmi::castTo< RCharReader>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractCharFilterReader_fields__in = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_in", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharReader::clazzInfo(),
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_fields__in_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractCharFilterReader_fields[] = 
{
  &AbstractCharFilterReader_fields__in,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__arg_iolock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "iolock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__args[] = 
{
  &AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__arg_in,
  &AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__arg_iolock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharFilterReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharFilterReader::clazzInfo(), // return type
  "_0_AbstractCharFilterReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__args[] = 
{
  &AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__arg_in,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharFilterReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharFilterReader::clazzInfo(), // return type
  "_1_AbstractCharFilterReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_8_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_close__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_close__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_close__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "close", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_close", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_close__V_args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_close__V_exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_close__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_getIn__LRCharReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_getIn__LRCharReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_getIn__LRCharReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getIn", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharReader::clazzInfo(), // return type
  "_5_getIn", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_getIn__LRCharReader__args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_getIn__LRCharReader__exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_getIn__LRCharReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterReader_methods_getReader_INLacdk_locale_REncoder__LRReader__arg_encoder = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "encoder", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::locale::REncoder::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_getReader_INLacdk_locale_REncoder__LRReader__args[] = 
{
  &AbstractCharFilterReader_methods_getReader_INLacdk_locale_REncoder__LRReader__arg_encoder,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_getReader_INLacdk_locale_REncoder__LRReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_getReader_INLacdk_locale_REncoder__LRReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo(), // return type
  "_6_getReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_getReader_INLacdk_locale_REncoder__LRReader__args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_getReader_INLacdk_locale_REncoder__LRReader__exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_getReader_INLacdk_locale_REncoder__LRReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_getReader__LRReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_getReader__LRReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_getReader__LRReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "getReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo(), // return type
  "_7_getReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_getReader__LRReader__args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_getReader__LRReader__exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_getReader__LRReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_readChar__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_readChar__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_readChar__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_2_readChar", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_readChar__I_args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_readChar__I_exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_readChar__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterReader_methods_readString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterReader_methods_readString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterReader_method_readString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_readString", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterReader_methods_readString__LRString__args, // the arguments
  0, //arguments count
  AbstractCharFilterReader_methods_readString__LRString__exceptions, // the declared exceptions
  AbstractCharFilterReader_MetainfoWrapper::AbstractCharFilterReader_method_readString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractCharFilterReader_methods[] = 
{
  &AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader_INLRObject__LRAbstractCharFilterReader_,
  &AbstractCharFilterReader_method_AbstractCharFilterReader_INLRCharReader__LRAbstractCharFilterReader_,
  &AbstractCharFilterReader_method_GetClass__L_acdk_lang_RClass_,
  &AbstractCharFilterReader_method_close__V,
  &AbstractCharFilterReader_method_getIn__LRCharReader_,
  &AbstractCharFilterReader_method_getReader_INLacdk_locale_REncoder__LRReader_,
  &AbstractCharFilterReader_method_getReader__LRReader_,
  &AbstractCharFilterReader_method_readChar__I,
  &AbstractCharFilterReader_method_readString__LRString_,
  0
};


struct AbstractCharFilterReader_MetaInfoInitializer
{  AbstractCharFilterReader_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractCharFilterReader::clazzInfo();
    ci->fields =  _AbstractCharFilterReader_fields;
    ci->methods =  _AbstractCharFilterReader_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractCharFilterReader_MetaInfoInitializer AbstractCharFilterReader_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
AbstractCharFilterWriter_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractCharFilterWriter>(length);
}

//static
::acdk::lang::RObject
AbstractCharFilterWriter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractCharFilterWriter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractCharFilterWriter(::acdk::lang::dmi::castTo< RCharWriter>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractCharFilterWriter(::acdk::lang::dmi::castTo< RCharWriter>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractCharFilterWriter::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_close__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharFilterWriter::close();
    else
        This->close();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_flush__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharFilterWriter::flush();
    else
        This->flush();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_getOut__LRCharWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharFilterWriter::getOut();
    else
        ret = (::acdk::lang::RObject)This->getOut();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_getWriter_INLacdk_locale_RDecoder__LRWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharFilterWriter::getWriter(::acdk::lang::dmi::castTo< acdk::locale::RDecoder>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->getWriter(::acdk::lang::dmi::castTo< acdk::locale::RDecoder>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_getWriter__LRWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharFilterWriter::getWriter();
    else
        ret = (::acdk::lang::RObject)This->getWriter();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_setOut_INLRCharWriter__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharFilterWriter::setOut(::acdk::lang::dmi::castTo< RCharWriter>(args[0], dc));
    else
        This->setOut(::acdk::lang::dmi::castTo< RCharWriter>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_writeChar_C_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharFilterWriter::writeChar(::acdk::lang::dmi::castTo< char>(args[0], dc));
    else
        This->writeChar(::acdk::lang::dmi::castTo< char>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_writeChar_UC_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharFilterWriter::writeChar(::acdk::lang::dmi::castTo< ucchar>(args[0], dc));
    else
        This->writeChar(::acdk::lang::dmi::castTo< ucchar>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharFilterWriter_method_writeString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharFilterWriter::writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        This->writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractCharFilterWriter_fields__out_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractCharFilterWriter* This = dmi_cast<AbstractCharFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_out, flags);
    else
      This->_out = ::acdk::lang::dmi::castTo< RCharWriter>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractCharFilterWriter_fields__out = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_out", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharWriter::clazzInfo(),
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_fields__out_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractCharFilterWriter_fields[] = 
{
  &AbstractCharFilterWriter_fields__out,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__arg_iolock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "iolock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__args[] = 
{
  &AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__arg_out,
  &AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__arg_iolock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharFilterWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharFilterWriter::clazzInfo(), // return type
  "_0_AbstractCharFilterWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__args[] = 
{
  &AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__arg_out,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharFilterWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharFilterWriter::clazzInfo(), // return type
  "_1_AbstractCharFilterWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_b_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_close__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_close__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_close__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "close", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_close", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_close__V_args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_close__V_exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_close__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_flush__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_flush__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_flush__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "flush", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_flush", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_flush__V_args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_flush__V_exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_flush__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_getOut__LRCharWriter__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_getOut__LRCharWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_getOut__LRCharWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getOut", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharWriter::clazzInfo(), // return type
  "_9_getOut", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_getOut__LRCharWriter__args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_getOut__LRCharWriter__exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_getOut__LRCharWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_getWriter_INLacdk_locale_RDecoder__LRWriter__arg_decoder = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "decoder", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::locale::RDecoder::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_getWriter_INLacdk_locale_RDecoder__LRWriter__args[] = 
{
  &AbstractCharFilterWriter_methods_getWriter_INLacdk_locale_RDecoder__LRWriter__arg_decoder,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_getWriter_INLacdk_locale_RDecoder__LRWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_getWriter_INLacdk_locale_RDecoder__LRWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo(), // return type
  "_7_getWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_getWriter_INLacdk_locale_RDecoder__LRWriter__args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_getWriter_INLacdk_locale_RDecoder__LRWriter__exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_getWriter_INLacdk_locale_RDecoder__LRWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_getWriter__LRWriter__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_getWriter__LRWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_getWriter__LRWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "getWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo(), // return type
  "_8_getWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_getWriter__LRWriter__args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_getWriter__LRWriter__exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_getWriter__LRWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_setOut_INLRCharWriter__V_arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_setOut_INLRCharWriter__V_args[] = 
{
  &AbstractCharFilterWriter_methods_setOut_INLRCharWriter__V_arg_out,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_setOut_INLRCharWriter__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_setOut_INLRCharWriter__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setOut", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_setOut", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_setOut_INLRCharWriter__V_args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_setOut_INLRCharWriter__V_exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_setOut_INLRCharWriter__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_writeChar_C_V_arg_c = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "c", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_writeChar_C_V_args[] = 
{
  &AbstractCharFilterWriter_methods_writeChar_C_V_arg_c,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_writeChar_C_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_writeChar_C_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_writeChar", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_writeChar_C_V_args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_writeChar_C_V_exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_writeChar_C_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_writeChar_UC_V_arg_c = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "c", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_writeChar_UC_V_args[] = 
{
  &AbstractCharFilterWriter_methods_writeChar_UC_V_arg_c,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_writeChar_UC_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_writeChar_UC_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_writeChar", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_writeChar_UC_V_args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_writeChar_UC_V_exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_writeChar_UC_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharFilterWriter_methods_writeString_INLRString__V_arg_str = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "str", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharFilterWriter_methods_writeString_INLRString__V_args[] = 
{
  &AbstractCharFilterWriter_methods_writeString_INLRString__V_arg_str,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharFilterWriter_methods_writeString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharFilterWriter_method_writeString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_writeString", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharFilterWriter_methods_writeString_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractCharFilterWriter_methods_writeString_INLRString__V_exceptions, // the declared exceptions
  AbstractCharFilterWriter_MetainfoWrapper::AbstractCharFilterWriter_method_writeString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractCharFilterWriter_methods[] = 
{
  &AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter_INLRObject__LRAbstractCharFilterWriter_,
  &AbstractCharFilterWriter_method_AbstractCharFilterWriter_INLRCharWriter__LRAbstractCharFilterWriter_,
  &AbstractCharFilterWriter_method_GetClass__L_acdk_lang_RClass_,
  &AbstractCharFilterWriter_method_close__V,
  &AbstractCharFilterWriter_method_flush__V,
  &AbstractCharFilterWriter_method_getOut__LRCharWriter_,
  &AbstractCharFilterWriter_method_getWriter_INLacdk_locale_RDecoder__LRWriter_,
  &AbstractCharFilterWriter_method_getWriter__LRWriter_,
  &AbstractCharFilterWriter_method_setOut_INLRCharWriter__V,
  &AbstractCharFilterWriter_method_writeChar_C_V,
  &AbstractCharFilterWriter_method_writeChar_UC_V,
  &AbstractCharFilterWriter_method_writeString_INLRString__V,
  0
};


struct AbstractCharFilterWriter_MetaInfoInitializer
{  AbstractCharFilterWriter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractCharFilterWriter::clazzInfo();
    ci->fields =  _AbstractCharFilterWriter_fields;
    ci->methods =  _AbstractCharFilterWriter_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractCharFilterWriter_MetaInfoInitializer AbstractCharFilterWriter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 


//static
::acdk::lang::RObject
AbstractCharReader_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractCharReader>(length);
}

//static
::acdk::lang::RObject
AbstractCharReader_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractCharReader_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharReader_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractCharReader::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharReader_method_getLock__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharReader* This = dmi_cast<AbstractCharReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharReader::getLock();
    else
        ret = (::acdk::lang::RObject)This->getLock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharReader_method_lock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharReader* This = dmi_cast<AbstractCharReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharReader::lock();
    else
        This->lock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharReader_method_readChar__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharReader* This = dmi_cast<AbstractCharReader>(This_);
  ret = This->readChar();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharReader_method_readString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharReader* This = dmi_cast<AbstractCharReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharReader::readString();
    else
        ret = (::acdk::lang::RObject)This->readString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharReader_method_setLock_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharReader* This = dmi_cast<AbstractCharReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharReader::setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    else
        This->setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharReader_method_unlock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharReader* This = dmi_cast<AbstractCharReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharReader::unlock();
    else
        This->unlock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractCharReader_fields__iolock_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractCharReader* This = dmi_cast<AbstractCharReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_iolock, flags);
    else
      This->_iolock = ::acdk::lang::dmi::castTo< RObject>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractCharReader_fields__iolock = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_iolock", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(),
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_fields__iolock_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractCharReader_fields[] = 
{
  &AbstractCharReader_fields__iolock,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharReader_methods_AbstractCharReader_INLRObject__LRAbstractCharReader__arg_lock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "lock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_AbstractCharReader_INLRObject__LRAbstractCharReader__args[] = 
{
  &AbstractCharReader_methods_AbstractCharReader_INLRObject__LRAbstractCharReader__arg_lock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_AbstractCharReader_INLRObject__LRAbstractCharReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_AbstractCharReader_INLRObject__LRAbstractCharReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharReader::clazzInfo(), // return type
  "_0_AbstractCharReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_AbstractCharReader_INLRObject__LRAbstractCharReader__args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_AbstractCharReader_INLRObject__LRAbstractCharReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_AbstractCharReader__LRAbstractCharReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_AbstractCharReader__LRAbstractCharReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_AbstractCharReader__LRAbstractCharReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharReader::clazzInfo(), // return type
  "_1_AbstractCharReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_AbstractCharReader__LRAbstractCharReader__args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_AbstractCharReader__LRAbstractCharReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_8_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_getLock__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_getLock__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_getLock__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_5_getLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_getLock__LRObject__args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_getLock__LRObject__exceptions, // the declared exceptions
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_method_getLock__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_lock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_lock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_lock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "lock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_lock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_lock__V_args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_lock__V_exceptions, // the declared exceptions
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_method_lock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_readChar__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_readChar__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_readChar__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_6_readChar", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_readChar__I_args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_readChar__I_exceptions, // the declared exceptions
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_method_readChar__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_readString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_readString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_readString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_7_readString", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_readString__LRString__args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_readString__LRString__exceptions, // the declared exceptions
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_method_readString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharReader_methods_setLock_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_setLock_INLRObject__V_args[] = 
{
  &AbstractCharReader_methods_setLock_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_setLock_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_setLock_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_setLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_setLock_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_setLock_INLRObject__V_exceptions, // the declared exceptions
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_method_setLock_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharReader_methods_unlock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharReader_methods_unlock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharReader_method_unlock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "unlock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_unlock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharReader_methods_unlock__V_args, // the arguments
  0, //arguments count
  AbstractCharReader_methods_unlock__V_exceptions, // the declared exceptions
  AbstractCharReader_MetainfoWrapper::AbstractCharReader_method_unlock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractCharReader_methods[] = 
{
  &AbstractCharReader_method_AbstractCharReader_INLRObject__LRAbstractCharReader_,
  &AbstractCharReader_method_AbstractCharReader__LRAbstractCharReader_,
  &AbstractCharReader_method_GetClass__L_acdk_lang_RClass_,
  &AbstractCharReader_method_getLock__LRObject_,
  &AbstractCharReader_method_lock__V,
  &AbstractCharReader_method_readChar__I,
  &AbstractCharReader_method_readString__LRString_,
  &AbstractCharReader_method_setLock_INLRObject__V,
  &AbstractCharReader_method_unlock__V,
  0
};


struct AbstractCharReader_MetaInfoInitializer
{  AbstractCharReader_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractCharReader::clazzInfo();
    ci->fields =  _AbstractCharReader_fields;
    ci->methods =  _AbstractCharReader_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractCharReader_MetaInfoInitializer AbstractCharReader_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 


//static
::acdk::lang::RObject
AbstractCharWriter_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractCharWriter>(length);
}

//static
::acdk::lang::RObject
AbstractCharWriter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractCharWriter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractCharWriter::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_getLock__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractCharWriter::getLock();
    else
        ret = (::acdk::lang::RObject)This->getLock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_lock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharWriter::lock();
    else
        This->lock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_setLock_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharWriter::setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    else
        This->setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_unlock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharWriter::unlock();
    else
        This->unlock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_writeChar_C_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    This->writeChar(::acdk::lang::dmi::castTo< char>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_writeChar_UC_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    This->writeChar(::acdk::lang::dmi::castTo< ucchar>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractCharWriter_method_writeString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractCharWriter::writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        This->writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractCharWriter_fields__iolock_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractCharWriter* This = dmi_cast<AbstractCharWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_iolock, flags);
    else
      This->_iolock = ::acdk::lang::dmi::castTo< RObject>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractCharWriter_fields__iolock = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_iolock", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(),
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_fields__iolock_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractCharWriter_fields[] = 
{
  &AbstractCharWriter_fields__iolock,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharWriter_methods_AbstractCharWriter_INLRObject__LRAbstractCharWriter__arg_lock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "lock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_AbstractCharWriter_INLRObject__LRAbstractCharWriter__args[] = 
{
  &AbstractCharWriter_methods_AbstractCharWriter_INLRObject__LRAbstractCharWriter__arg_lock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_AbstractCharWriter_INLRObject__LRAbstractCharWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_AbstractCharWriter_INLRObject__LRAbstractCharWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharWriter::clazzInfo(), // return type
  "_0_AbstractCharWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_AbstractCharWriter_INLRObject__LRAbstractCharWriter__args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_AbstractCharWriter_INLRObject__LRAbstractCharWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_AbstractCharWriter__LRAbstractCharWriter__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_AbstractCharWriter__LRAbstractCharWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_AbstractCharWriter__LRAbstractCharWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractCharWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractCharWriter::clazzInfo(), // return type
  "_1_AbstractCharWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_AbstractCharWriter__LRAbstractCharWriter__args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_AbstractCharWriter__LRAbstractCharWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_9_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_getLock__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_getLock__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_getLock__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_5_getLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_getLock__LRObject__args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_getLock__LRObject__exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_getLock__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_lock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_lock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_lock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "lock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_lock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_lock__V_args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_lock__V_exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_lock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharWriter_methods_setLock_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_setLock_INLRObject__V_args[] = 
{
  &AbstractCharWriter_methods_setLock_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_setLock_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_setLock_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_setLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_setLock_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_setLock_INLRObject__V_exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_setLock_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_unlock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_unlock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_unlock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "unlock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_unlock", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_unlock__V_args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_unlock__V_exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_unlock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharWriter_methods_writeChar_C_V_arg_c = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "c", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_writeChar_C_V_args[] = 
{
  &AbstractCharWriter_methods_writeChar_C_V_arg_c,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_writeChar_C_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_writeChar_C_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_writeChar", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_writeChar_C_V_args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_writeChar_C_V_exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_writeChar_C_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharWriter_methods_writeChar_UC_V_arg_c = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "c", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_writeChar_UC_V_args[] = 
{
  &AbstractCharWriter_methods_writeChar_UC_V_arg_c,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_writeChar_UC_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_writeChar_UC_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_writeChar", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_writeChar_UC_V_args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_writeChar_UC_V_exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_writeChar_UC_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractCharWriter_methods_writeString_INLRString__V_arg_str = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "str", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractCharWriter_methods_writeString_INLRString__V_args[] = 
{
  &AbstractCharWriter_methods_writeString_INLRString__V_arg_str,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractCharWriter_methods_writeString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractCharWriter_method_writeString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_8_writeString", // alternative name of method
  -1, // altlabelHashCode
  AbstractCharWriter_methods_writeString_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractCharWriter_methods_writeString_INLRString__V_exceptions, // the declared exceptions
  AbstractCharWriter_MetainfoWrapper::AbstractCharWriter_method_writeString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractCharWriter_methods[] = 
{
  &AbstractCharWriter_method_AbstractCharWriter_INLRObject__LRAbstractCharWriter_,
  &AbstractCharWriter_method_AbstractCharWriter__LRAbstractCharWriter_,
  &AbstractCharWriter_method_GetClass__L_acdk_lang_RClass_,
  &AbstractCharWriter_method_getLock__LRObject_,
  &AbstractCharWriter_method_lock__V,
  &AbstractCharWriter_method_setLock_INLRObject__V,
  &AbstractCharWriter_method_unlock__V,
  &AbstractCharWriter_method_writeChar_C_V,
  &AbstractCharWriter_method_writeChar_UC_V,
  &AbstractCharWriter_method_writeString_INLRString__V,
  0
};


struct AbstractCharWriter_MetaInfoInitializer
{  AbstractCharWriter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractCharWriter::clazzInfo();
    ci->fields =  _AbstractCharWriter_fields;
    ci->methods =  _AbstractCharWriter_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractCharWriter_MetaInfoInitializer AbstractCharWriter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
AbstractFilterReader_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractFilterReader>(length);
}

//static
::acdk::lang::RObject
AbstractFilterReader_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractFilterReader_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractFilterReader(::acdk::lang::dmi::castTo< RReader>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_AbstractFilterReader_INLRReader__LRAbstractFilterReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractFilterReader(::acdk::lang::dmi::castTo< RReader>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractFilterReader::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_available__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::available();
    else
      ret = This->available();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_close__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterReader::close();
    else
        This->close();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_getIn__LRReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractFilterReader::getIn();
    else
        ret = (::acdk::lang::RObject)This->getIn();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_getStorage__LRStorage__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractFilterReader::getStorage();
    else
        ret = (::acdk::lang::RObject)This->getStorage();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_getStorageReader__LRReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractFilterReader::getStorageReader();
    else
        ret = (::acdk::lang::RObject)This->getStorageReader();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_mark_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterReader::mark(::acdk::lang::dmi::castTo< int>(args[0], dc));
    else
        This->mark(::acdk::lang::dmi::castTo< int>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_markSupported__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::markSupported();
    else
      ret = This->markSupported();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_read_INLRbyteArray_II_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    else
      ret = This->read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_read_INLRbyteArray__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    else
      ret = This->read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_read__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::read();
    else
      ret = This->read();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_read_INLRbyteArray_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    else
      ret = This->read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_ready__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::ready();
    else
      ret = This->ready();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_reset__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterReader::reset();
    else
        This->reset();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_seek_IJ_J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::seek((SeekPos)::acdk::lang::dmi::castTo<int>(args[0], dc), ::acdk::lang::dmi::castTo< jlong>(args[1], dc));
    else
      ret = This->seek((SeekPos)::acdk::lang::dmi::castTo<int>(args[0], dc), ::acdk::lang::dmi::castTo< jlong>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_setIn_INLRReader__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterReader::setIn(::acdk::lang::dmi::castTo< RReader>(args[0], dc));
    else
        This->setIn(::acdk::lang::dmi::castTo< RReader>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterReader_method_skip_J_J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractFilterReader::skip(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    else
      ret = This->skip(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractFilterReader_fields__in_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractFilterReader* This = dmi_cast<AbstractFilterReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_in, flags);
    else
      This->_in = ::acdk::lang::dmi::castTo< RReader>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractFilterReader_fields__in = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_in", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo(),
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_fields__in_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractFilterReader_fields[] = 
{
  &AbstractFilterReader_fields__in,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__arg_lock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "lock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__args[] = 
{
  &AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__arg_in,
  &AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__arg_lock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractFilterReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractFilterReader::clazzInfo(), // return type
  "_0_AbstractFilterReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_AbstractFilterReader_INLRReader__LRAbstractFilterReader__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_AbstractFilterReader_INLRReader__LRAbstractFilterReader__args[] = 
{
  &AbstractFilterReader_methods_AbstractFilterReader_INLRReader__LRAbstractFilterReader__arg_in,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_AbstractFilterReader_INLRReader__LRAbstractFilterReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_AbstractFilterReader_INLRReader__LRAbstractFilterReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractFilterReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractFilterReader::clazzInfo(), // return type
  "_1_AbstractFilterReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_AbstractFilterReader_INLRReader__LRAbstractFilterReader__args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_AbstractFilterReader_INLRReader__LRAbstractFilterReader__exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_AbstractFilterReader_INLRReader__LRAbstractFilterReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_i_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_available__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_available__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_available__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "available", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_5_available", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_available__I_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_available__I_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_available__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_close__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_close__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_close__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "close", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_close", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_close__V_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_close__V_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_close__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_getIn__LRReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_getIn__LRReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_getIn__LRReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getIn", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo(), // return type
  "_3_getIn", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_getIn__LRReader__args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_getIn__LRReader__exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_getIn__LRReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_getStorage__LRStorage__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_getStorage__LRStorage__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_getStorage__LRStorage_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getStorage", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RStorage::clazzInfo(), // return type
  "_4_getStorage", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_getStorage__LRStorage__args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_getStorage__LRStorage__exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_getStorage__LRStorage__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_getStorageReader__LRReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_getStorageReader__LRReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_getStorageReader__LRReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getStorageReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo(), // return type
  "_h_getStorageReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_getStorageReader__LRReader__args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_getStorageReader__LRReader__exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_getStorageReader__LRReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_mark_I_V_arg_readAheadLimit = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "readAheadLimit", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_mark_I_V_args[] = 
{
  &AbstractFilterReader_methods_mark_I_V_arg_readAheadLimit,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_mark_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_mark_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "mark", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_f_mark", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_mark_I_V_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_mark_I_V_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_mark_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_markSupported__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_markSupported__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_markSupported__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "markSupported", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_g_markSupported", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_markSupported__Z_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_markSupported__Z_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_markSupported__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_read_INLRbyteArray_II_I_arg_buffer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buffer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_read_INLRbyteArray_II_I_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_read_INLRbyteArray_II_I_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_read_INLRbyteArray_II_I_args[] = 
{
  &AbstractFilterReader_methods_read_INLRbyteArray_II_I_arg_buffer,
  &AbstractFilterReader_methods_read_INLRbyteArray_II_I_arg_offset,
  &AbstractFilterReader_methods_read_INLRbyteArray_II_I_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_read_INLRbyteArray_II_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_read_INLRbyteArray_II_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_a_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_read_INLRbyteArray_II_I_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_read_INLRbyteArray_II_I_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_read_INLRbyteArray_II_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_read_INLRbyteArray__I_arg_buffer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buffer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_read_INLRbyteArray__I_args[] = 
{
  &AbstractFilterReader_methods_read_INLRbyteArray__I_arg_buffer,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_read_INLRbyteArray__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_read_INLRbyteArray__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_b_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_read_INLRbyteArray__I_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_read_INLRbyteArray__I_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_read_INLRbyteArray__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_read__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_read__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_read__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_9_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_read__I_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_read__I_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_read__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_read_INLRbyteArray_I_I_arg_buffer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buffer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_read_INLRbyteArray_I_I_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_read_INLRbyteArray_I_I_args[] = 
{
  &AbstractFilterReader_methods_read_INLRbyteArray_I_I_arg_buffer,
  &AbstractFilterReader_methods_read_INLRbyteArray_I_I_arg_offset,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_read_INLRbyteArray_I_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_read_INLRbyteArray_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_c_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_read_INLRbyteArray_I_I_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_read_INLRbyteArray_I_I_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_read_INLRbyteArray_I_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_ready__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_ready__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_ready__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "ready", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_e_ready", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_ready__Z_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_ready__Z_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_ready__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_reset__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_reset__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_reset__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "reset", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_d_reset", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_reset__V_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_reset__V_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_reset__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_seek_IJ_J_arg_seekrel = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "seekrel", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_seek_IJ_J_arg_seekpos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "seekpos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_seek_IJ_J_args[] = 
{
  &AbstractFilterReader_methods_seek_IJ_J_arg_seekrel,
  &AbstractFilterReader_methods_seek_IJ_J_arg_seekpos,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_seek_IJ_J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_seek_IJ_J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "seek", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_7_seek", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_seek_IJ_J_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_seek_IJ_J_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_seek_IJ_J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_setIn_INLRReader__V_arg_reader = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "reader", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_setIn_INLRReader__V_args[] = 
{
  &AbstractFilterReader_methods_setIn_INLRReader__V_arg_reader,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_setIn_INLRReader__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_setIn_INLRReader__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setIn", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_setIn", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_setIn_INLRReader__V_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_setIn_INLRReader__V_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_setIn_INLRReader__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterReader_methods_skip_J_J_arg_n = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "n", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterReader_methods_skip_J_J_args[] = 
{
  &AbstractFilterReader_methods_skip_J_J_arg_n,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterReader_methods_skip_J_J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterReader_method_skip_J_J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "skip", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_8_skip", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterReader_methods_skip_J_J_args, // the arguments
  0, //arguments count
  AbstractFilterReader_methods_skip_J_J_exceptions, // the declared exceptions
  AbstractFilterReader_MetainfoWrapper::AbstractFilterReader_method_skip_J_J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractFilterReader_methods[] = 
{
  &AbstractFilterReader_method_AbstractFilterReader_INLRReader_INLRObject__LRAbstractFilterReader_,
  &AbstractFilterReader_method_AbstractFilterReader_INLRReader__LRAbstractFilterReader_,
  &AbstractFilterReader_method_GetClass__L_acdk_lang_RClass_,
  &AbstractFilterReader_method_available__I,
  &AbstractFilterReader_method_close__V,
  &AbstractFilterReader_method_getIn__LRReader_,
  &AbstractFilterReader_method_getStorage__LRStorage_,
  &AbstractFilterReader_method_getStorageReader__LRReader_,
  &AbstractFilterReader_method_mark_I_V,
  &AbstractFilterReader_method_markSupported__Z,
  &AbstractFilterReader_method_read_INLRbyteArray_II_I,
  &AbstractFilterReader_method_read_INLRbyteArray__I,
  &AbstractFilterReader_method_read__I,
  &AbstractFilterReader_method_read_INLRbyteArray_I_I,
  &AbstractFilterReader_method_ready__Z,
  &AbstractFilterReader_method_reset__V,
  &AbstractFilterReader_method_seek_IJ_J,
  &AbstractFilterReader_method_setIn_INLRReader__V,
  &AbstractFilterReader_method_skip_J_J,
  0
};


struct AbstractFilterReader_MetaInfoInitializer
{  AbstractFilterReader_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractFilterReader::clazzInfo();
    ci->fields =  _AbstractFilterReader_fields;
    ci->methods =  _AbstractFilterReader_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractFilterReader_MetaInfoInitializer AbstractFilterReader_MetaInfoInitializer_staticinstance__;


struct AbstractFilterReader_clazzInfo_ClazzAttributesResInitializer1
{
  AbstractFilterReader_clazzInfo_ClazzAttributesResInitializer1()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)&AbstractFilterReader_methods_seek_IJ_J_arg_seekrel, "__enumArgInfo", ::acdk::lang::dmi::ClazzAttributeResValue::makeFunctionPtrRes((void*)SeekPosMetaInf::GetEnumInfo()));
  }
};

AbstractFilterReader_clazzInfo_ClazzAttributesResInitializer1 AbstractFilterReader_clazzInfo_ClazzAttributesResInitializer1_instance;



} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
AbstractFilterWriter_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractFilterWriter>(length);
}

//static
::acdk::lang::RObject
AbstractFilterWriter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractFilterWriter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractFilterWriter(::acdk::lang::dmi::castTo< RWriter>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new AbstractFilterWriter(::acdk::lang::dmi::castTo< RWriter>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractFilterWriter::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_close__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterWriter::close();
    else
        This->close();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_flush__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterWriter::flush();
    else
        This->flush();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_getOut__LRWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractFilterWriter::getOut();
    else
        ret = (::acdk::lang::RObject)This->getOut();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_getStorage__LRStorage__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractFilterWriter::getStorage();
    else
        ret = (::acdk::lang::RObject)This->getStorage();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_getStorageWriter__LRWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractFilterWriter::getStorageWriter();
    else
        ret = (::acdk::lang::RObject)This->getStorageWriter();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_setOut_INLRWriter__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterWriter::setOut(::acdk::lang::dmi::castTo< RWriter>(args[0], dc));
    else
        This->setOut(::acdk::lang::dmi::castTo< RWriter>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_write_B_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterWriter::write(::acdk::lang::dmi::castTo< byte>(args[0], dc));
    else
        This->write(::acdk::lang::dmi::castTo< byte>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_write_INLRbyteArray_II_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterWriter::write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    else
        This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_write_INLRbyteArray__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterWriter::write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    else
        This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractFilterWriter_method_write_INLRbyteArray_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractFilterWriter::write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    else
        This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractFilterWriter_fields__out_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractFilterWriter* This = dmi_cast<AbstractFilterWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_out, flags);
    else
      This->_out = ::acdk::lang::dmi::castTo< RWriter>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractFilterWriter_fields__out = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_out", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo(),
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_fields__out_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractFilterWriter_fields[] = 
{
  &AbstractFilterWriter_fields__out,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__arg_lock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "lock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__args[] = 
{
  &AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__arg_out,
  &AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__arg_lock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractFilterWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractFilterWriter::clazzInfo(), // return type
  "_0_AbstractFilterWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__args[] = 
{
  &AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__arg_out,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractFilterWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractFilterWriter::clazzInfo(), // return type
  "_1_AbstractFilterWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_c_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_close__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_close__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_close__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "close", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_close", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_close__V_args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_close__V_exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_close__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_flush__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_flush__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_flush__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "flush", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_9_flush", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_flush__V_args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_flush__V_exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_flush__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_getOut__LRWriter__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_getOut__LRWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_getOut__LRWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getOut", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo(), // return type
  "_3_getOut", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_getOut__LRWriter__args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_getOut__LRWriter__exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_getOut__LRWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_getStorage__LRStorage__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_getStorage__LRStorage__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_getStorage__LRStorage_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getStorage", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RStorage::clazzInfo(), // return type
  "_4_getStorage", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_getStorage__LRStorage__args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_getStorage__LRStorage__exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_getStorage__LRStorage__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_getStorageWriter__LRWriter__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_getStorageWriter__LRWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_getStorageWriter__LRWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getStorageWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo(), // return type
  "_b_getStorageWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_getStorageWriter__LRWriter__args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_getStorageWriter__LRWriter__exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_getStorageWriter__LRWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_setOut_INLRWriter__V_arg_writer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "writer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_setOut_INLRWriter__V_args[] = 
{
  &AbstractFilterWriter_methods_setOut_INLRWriter__V_arg_writer,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_setOut_INLRWriter__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_setOut_INLRWriter__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setOut", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_setOut", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_setOut_INLRWriter__V_args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_setOut_INLRWriter__V_exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_setOut_INLRWriter__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_write_B_V_arg_c = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "c", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_write_B_V_args[] = 
{
  &AbstractFilterWriter_methods_write_B_V_arg_c,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_write_B_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_write_B_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_write_B_V_args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_write_B_V_exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_write_B_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_write_INLRbyteArray_II_V_arg_ch = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ch", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_write_INLRbyteArray_II_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_write_INLRbyteArray_II_V_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_write_INLRbyteArray_II_V_args[] = 
{
  &AbstractFilterWriter_methods_write_INLRbyteArray_II_V_arg_ch,
  &AbstractFilterWriter_methods_write_INLRbyteArray_II_V_arg_offset,
  &AbstractFilterWriter_methods_write_INLRbyteArray_II_V_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_write_INLRbyteArray_II_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_write_INLRbyteArray_II_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_write_INLRbyteArray_II_V_args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_write_INLRbyteArray_II_V_exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_write_INLRbyteArray_II_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_write_INLRbyteArray__V_arg_ch = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ch", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_write_INLRbyteArray__V_args[] = 
{
  &AbstractFilterWriter_methods_write_INLRbyteArray__V_arg_ch,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_write_INLRbyteArray__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_write_INLRbyteArray__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_write_INLRbyteArray__V_args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_write_INLRbyteArray__V_exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_write_INLRbyteArray__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_write_INLRbyteArray_I_V_arg_ch = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ch", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractFilterWriter_methods_write_INLRbyteArray_I_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractFilterWriter_methods_write_INLRbyteArray_I_V_args[] = 
{
  &AbstractFilterWriter_methods_write_INLRbyteArray_I_V_arg_ch,
  &AbstractFilterWriter_methods_write_INLRbyteArray_I_V_arg_offset,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractFilterWriter_methods_write_INLRbyteArray_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractFilterWriter_method_write_INLRbyteArray_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_8_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractFilterWriter_methods_write_INLRbyteArray_I_V_args, // the arguments
  0, //arguments count
  AbstractFilterWriter_methods_write_INLRbyteArray_I_V_exceptions, // the declared exceptions
  AbstractFilterWriter_MetainfoWrapper::AbstractFilterWriter_method_write_INLRbyteArray_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractFilterWriter_methods[] = 
{
  &AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter_INLRObject__LRAbstractFilterWriter_,
  &AbstractFilterWriter_method_AbstractFilterWriter_INLRWriter__LRAbstractFilterWriter_,
  &AbstractFilterWriter_method_GetClass__L_acdk_lang_RClass_,
  &AbstractFilterWriter_method_close__V,
  &AbstractFilterWriter_method_flush__V,
  &AbstractFilterWriter_method_getOut__LRWriter_,
  &AbstractFilterWriter_method_getStorage__LRStorage_,
  &AbstractFilterWriter_method_getStorageWriter__LRWriter_,
  &AbstractFilterWriter_method_setOut_INLRWriter__V,
  &AbstractFilterWriter_method_write_B_V,
  &AbstractFilterWriter_method_write_INLRbyteArray_II_V,
  &AbstractFilterWriter_method_write_INLRbyteArray__V,
  &AbstractFilterWriter_method_write_INLRbyteArray_I_V,
  0
};


struct AbstractFilterWriter_MetaInfoInitializer
{  AbstractFilterWriter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractFilterWriter::clazzInfo();
    ci->fields =  _AbstractFilterWriter_fields;
    ci->methods =  _AbstractFilterWriter_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractFilterWriter_MetaInfoInitializer AbstractFilterWriter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 


//static
::acdk::lang::RObject
AbstractObjectReader_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractObjectReader>(length);
}

//static
::acdk::lang::RObject
AbstractObjectReader_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractObjectReader_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractObjectReader::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method__readBasicArray_INLRClass_I_LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::_readBasicArray(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    else
        ret = (::acdk::lang::RObject)This->_readBasicArray(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method__readObject_INL_acdk_lang_RClass__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::_readObject(::acdk::lang::dmi::castTo< ::acdk::lang::RClass>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->_readObject(::acdk::lang::dmi::castTo< ::acdk::lang::RClass>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_defaultReadObject_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectReader::defaultReadObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->defaultReadObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_getStorage__LRStorage__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::getStorage();
    else
        ret = (::acdk::lang::RObject)This->getStorage();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_getStorageReader__LRReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::getStorageReader();
    else
        ret = (::acdk::lang::RObject)This->getStorageReader();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_isLabeled__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::isLabeled();
    else
      ret = This->isLabeled();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_isNamed__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::isNamed();
    else
      ret = This->isNamed();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_isReduced__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::isReduced();
    else
      ret = This->isReduced();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_isTagged__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::isTagged();
    else
      ret = This->isTagged();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_joinStrings__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::joinStrings();
    else
      ret = This->joinStrings();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readBoolean__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
  ret = This->readBoolean();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readBooleanElement__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readBooleanElement();
    else
      ret = This->readBooleanElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readByteElement__B_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readByteElement();
    else
      ret = This->readByteElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readChar__C_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
  ret = This->readChar();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readCharElement__C_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readCharElement();
    else
      ret = This->readCharElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readClassDescriptor_INLRClass__LRClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readClassDescriptor(::acdk::lang::dmi::castTo< RClass>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->readClassDescriptor(::acdk::lang::dmi::castTo< RClass>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readClassId__LRClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    ret = (::acdk::lang::RObject)This->readClassId();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readDouble__D_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
  ret = This->readDouble();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readDoubleElement__D_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readDoubleElement();
    else
      ret = This->readDoubleElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readFloat__F_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
  ret = This->readFloat();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readFloatElement__F_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readFloatElement();
    else
      ret = This->readFloatElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readInt__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
  ret = This->readInt();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readIntElement__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readIntElement();
    else
      ret = This->readIntElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readLong__J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
  ret = This->readLong();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readLongElement__J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readLongElement();
    else
      ret = This->readLongElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readObject__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readObject();
    else
        ret = (::acdk::lang::RObject)This->readObject();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readObject_INL_acdk_lang_RClass__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readObject(::acdk::lang::dmi::castTo< ::acdk::lang::RClass>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->readObject(::acdk::lang::dmi::castTo< ::acdk::lang::RClass>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readObject2__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readObject2();
    else
        ret = (::acdk::lang::RObject)This->readObject2();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readObject2_INL_acdk_lang_RClass__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readObject2(::acdk::lang::dmi::castTo< ::acdk::lang::RClass>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->readObject2(::acdk::lang::dmi::castTo< ::acdk::lang::RClass>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readObjectHierarchy_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectReader::readObjectHierarchy(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->readObjectHierarchy(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readObjectLocalId__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readObjectLocalId();
    else
      ret = This->readObjectLocalId();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readOpaque__LRbyteArray__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readOpaque();
    else
        ret = (::acdk::lang::RObject)This->readOpaque();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readShort__S_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
  ret = This->readShort();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readShortElement__S_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readShortElement();
    else
      ret = This->readShortElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readString();
    else
        ret = (::acdk::lang::RObject)This->readString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readStringElement__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractObjectReader::readStringElement();
    else
        ret = (::acdk::lang::RObject)This->readStringElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readStringImpl__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    ret = (::acdk::lang::RObject)This->readStringImpl();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readTagEnd_INLRString_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    ret = (::acdk::lang::RObject)This->readTagEnd(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readTagEnd_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    ret = (::acdk::lang::RObject)This->readTagEnd(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readTagStart_INLRString_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    ret = (::acdk::lang::RObject)This->readTagStart(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readTagStart_INLRString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    ret = (::acdk::lang::RObject)This->readTagStart(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_readUcCharElement__Luc2char__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::readUcCharElement();
    else
      ret = This->readUcCharElement();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_reset__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectReader::reset();
    else
        This->reset();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_resetLRefs__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectReader::resetLRefs();
    else
        This->resetLRefs();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_setIn_INLRReader__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectReader::setIn(::acdk::lang::dmi::castTo< RReader>(args[0], dc));
    else
        This->setIn(::acdk::lang::dmi::castTo< RReader>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_skip_J_J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::skip(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    else
      ret = This->skip(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectReader_method_withSerialVersionUID__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectReader::withSerialVersionUID();
    else
      ret = This->withSerialVersionUID();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractObjectReader_fields__lref_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_lref, flags);
    else
      This->_lref = ::acdk::lang::dmi::castTo< ::acdk::util::RTreeMap>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractObjectReader_fields__lrefs_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_lrefs, flags);
    else
      This->_lrefs = ::acdk::lang::dmi::castTo< RObjectArray>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractObjectReader_fields__serializeFlags_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_serializeFlags, flags);
    else
      This->_serializeFlags = ::acdk::lang::dmi::castTo< int>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractObjectReader_fields__stringCache_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractObjectReader* This = dmi_cast<AbstractObjectReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_stringCache, flags);
    else
      This->_stringCache = ::acdk::lang::dmi::castTo< RStringArray>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractObjectReader_fields__lref = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_lref", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::util::RTreeMap::clazzInfo(),
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_fields__lref_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo AbstractObjectReader_fields__lrefs = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_lrefs", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObjectArray::clazzInfo(),
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_fields__lrefs_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo AbstractObjectReader_fields__serializeFlags = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_serializeFlags", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_fields__serializeFlags_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo AbstractObjectReader_fields__stringCache = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_stringCache", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RStringArray::clazzInfo(),
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_fields__stringCache_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractObjectReader_fields[] = 
{
  &AbstractObjectReader_fields__lref,
  &AbstractObjectReader_fields__lrefs,
  &AbstractObjectReader_fields__serializeFlags,
  &AbstractObjectReader_fields__stringCache,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__arg_flags = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "flags", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__args[] = 
{
  &AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__arg_in,
  &AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__arg_flags,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractObjectReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractObjectReader::clazzInfo(), // return type
  "_0_AbstractObjectReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_AbstractObjectReader_INLRReader__LRAbstractObjectReader__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_AbstractObjectReader_INLRReader__LRAbstractObjectReader__args[] = 
{
  &AbstractObjectReader_methods_AbstractObjectReader_INLRReader__LRAbstractObjectReader__arg_in,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_AbstractObjectReader_INLRReader__LRAbstractObjectReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_AbstractObjectReader_INLRReader__LRAbstractObjectReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractObjectReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractObjectReader::clazzInfo(), // return type
  "_1_AbstractObjectReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_AbstractObjectReader_INLRReader__LRAbstractObjectReader__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_AbstractObjectReader_INLRReader__LRAbstractObjectReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_P_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__arg_length = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "length", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__args[] = 
{
  &AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__arg_cls,
  &AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__arg_length,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method__readBasicArray_INLRClass_I_LRObject_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_readBasicArray", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_M__readBasicArray", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods__readBasicArray_INLRClass_I_LRObject__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method__readBasicArray_INLRClass_I_LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods__readObject_INL_acdk_lang_RClass__LRObject__arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods__readObject_INL_acdk_lang_RClass__LRObject__args[] = 
{
  &AbstractObjectReader_methods__readObject_INL_acdk_lang_RClass__LRObject__arg_cls,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods__readObject_INL_acdk_lang_RClass__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method__readObject_INL_acdk_lang_RClass__LRObject_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_readObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_N__readObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods__readObject_INL_acdk_lang_RClass__LRObject__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods__readObject_INL_acdk_lang_RClass__LRObject__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method__readObject_INL_acdk_lang_RClass__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_defaultReadObject_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "defaultReadObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_o_defaultReadObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_defaultReadObject_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_defaultReadObject_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_getStorage__LRStorage__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_getStorage__LRStorage__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_getStorage__LRStorage_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getStorage", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RStorage::clazzInfo(), // return type
  "_6_getStorage", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_getStorage__LRStorage__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_getStorage__LRStorage__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_getStorage__LRStorage__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_getStorageReader__LRReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_getStorageReader__LRReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_getStorageReader__LRReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getStorageReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo(), // return type
  "_7_getStorageReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_getStorageReader__LRReader__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_getStorageReader__LRReader__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_getStorageReader__LRReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_isLabeled__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_isLabeled__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_isLabeled__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isLabeled", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_d_isLabeled", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_isLabeled__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_isLabeled__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_isLabeled__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_isNamed__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_isNamed__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_isNamed__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isNamed", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_c_isNamed", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_isNamed__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_isNamed__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_isNamed__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_isReduced__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_isReduced__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_isReduced__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isReduced", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_f_isReduced", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_isReduced__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_isReduced__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_isReduced__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_isTagged__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_isTagged__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_isTagged__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isTagged", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_e_isTagged", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_isTagged__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_isTagged__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_isTagged__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_joinStrings__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_joinStrings__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_joinStrings__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "joinStrings", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_g_joinStrings", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_joinStrings__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_joinStrings__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_joinStrings__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readBoolean__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readBoolean__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readBoolean__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readBoolean", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_r_readBoolean", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readBoolean__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readBoolean__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readBoolean__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readBooleanElement__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readBooleanElement__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readBooleanElement__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readBooleanElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_C_readBooleanElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readBooleanElement__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readBooleanElement__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readBooleanElement__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readByteElement__B_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readByteElement__B_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readByteElement__B = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readByteElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz(), // return type
  "_F_readByteElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readByteElement__B_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readByteElement__B_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readByteElement__B_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readChar__C_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readChar__C_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readChar__C = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz(), // return type
  "_s_readChar", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readChar__C_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readChar__C_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readChar__C_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readCharElement__C_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readCharElement__C_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readCharElement__C = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readCharElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz(), // return type
  "_D_readCharElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readCharElement__C_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readCharElement__C_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readCharElement__C_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readClassDescriptor_INLRClass__LRClass__arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readClassDescriptor_INLRClass__LRClass__args[] = 
{
  &AbstractObjectReader_methods_readClassDescriptor_INLRClass__LRClass__arg_cls,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readClassDescriptor_INLRClass__LRClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readClassDescriptor_INLRClass__LRClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readClassDescriptor", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo(), // return type
  "_p_readClassDescriptor", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readClassDescriptor_INLRClass__LRClass__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readClassDescriptor_INLRClass__LRClass__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readClassDescriptor_INLRClass__LRClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readClassId__LRClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readClassId__LRClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readClassId__LRClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readClassId", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo(), // return type
  "_m_readClassId", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readClassId__LRClass__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readClassId__LRClass__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readClassId__LRClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readDouble__D_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readDouble__D_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readDouble__D = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readDouble", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz(), // return type
  "_t_readDouble", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readDouble__D_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readDouble__D_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readDouble__D_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readDoubleElement__D_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readDoubleElement__D_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readDoubleElement__D = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readDoubleElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz(), // return type
  "_K_readDoubleElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readDoubleElement__D_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readDoubleElement__D_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readDoubleElement__D_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readFloat__F_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readFloat__F_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readFloat__F = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readFloat", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz(), // return type
  "_u_readFloat", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readFloat__F_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readFloat__F_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readFloat__F_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readFloatElement__F_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readFloatElement__F_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readFloatElement__F = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readFloatElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz(), // return type
  "_J_readFloatElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readFloatElement__F_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readFloatElement__F_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readFloatElement__F_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readInt__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readInt__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readInt__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readInt", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_v_readInt", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readInt__I_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readInt__I_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readInt__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readIntElement__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readIntElement__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readIntElement__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readIntElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_H_readIntElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readIntElement__I_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readIntElement__I_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readIntElement__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readLong__J_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readLong__J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readLong__J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readLong", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_w_readLong", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readLong__J_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readLong__J_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readLong__J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readLongElement__J_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readLongElement__J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readLongElement__J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readLongElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_I_readLongElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readLongElement__J_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readLongElement__J_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readLongElement__J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readObject__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readObject__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readObject__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_8_readObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readObject__LRObject__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readObject__LRObject__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readObject__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readObject_INL_acdk_lang_RClass__LRObject__arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readObject_INL_acdk_lang_RClass__LRObject__args[] = 
{
  &AbstractObjectReader_methods_readObject_INL_acdk_lang_RClass__LRObject__arg_cls,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readObject_INL_acdk_lang_RClass__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readObject_INL_acdk_lang_RClass__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_a_readObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readObject_INL_acdk_lang_RClass__LRObject__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readObject_INL_acdk_lang_RClass__LRObject__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readObject_INL_acdk_lang_RClass__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readObject2__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readObject2__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readObject2__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readObject2", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_9_readObject2", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readObject2__LRObject__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readObject2__LRObject__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readObject2__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readObject2_INL_acdk_lang_RClass__LRObject__arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readObject2_INL_acdk_lang_RClass__LRObject__args[] = 
{
  &AbstractObjectReader_methods_readObject2_INL_acdk_lang_RClass__LRObject__arg_cls,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readObject2_INL_acdk_lang_RClass__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readObject2_INL_acdk_lang_RClass__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readObject2", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_b_readObject2", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readObject2_INL_acdk_lang_RClass__LRObject__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readObject2_INL_acdk_lang_RClass__LRObject__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readObject2_INL_acdk_lang_RClass__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readObjectHierarchy_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readObjectHierarchy", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_q_readObjectHierarchy", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readObjectHierarchy_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readObjectHierarchy_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readObjectLocalId__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readObjectLocalId__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readObjectLocalId__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readObjectLocalId", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_n_readObjectLocalId", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readObjectLocalId__I_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readObjectLocalId__I_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readObjectLocalId__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readOpaque__LRbyteArray__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readOpaque__LRbyteArray__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readOpaque__LRbyteArray_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readOpaque", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo(), // return type
  "_A_readOpaque", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readOpaque__LRbyteArray__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readOpaque__LRbyteArray__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readOpaque__LRbyteArray__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readShort__S_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readShort__S_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readShort__S = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readShort", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz(), // return type
  "_x_readShort", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readShort__S_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readShort__S_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readShort__S_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readShortElement__S_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readShortElement__S_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readShortElement__S = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readShortElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz(), // return type
  "_G_readShortElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readShortElement__S_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readShortElement__S_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readShortElement__S_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_y_readString", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readString__LRString__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readString__LRString__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readStringElement__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readStringElement__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readStringElement__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readStringElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_B_readStringElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readStringElement__LRString__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readStringElement__LRString__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readStringElement__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readStringImpl__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readStringImpl__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readStringImpl__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readStringImpl", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_z_readStringImpl", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readStringImpl__LRString__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readStringImpl__LRString__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readStringImpl__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__arg_expected = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "expected", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__args[] = 
{
  &AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__arg_key,
  &AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__arg_expected,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readTagEnd_INLRString_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readTagEnd", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_k_readTagEnd", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readTagEnd_INLRString_INLRString__LRString__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readTagEnd_INLRString_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readTagEnd_INLRString__LRString__arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readTagEnd_INLRString__LRString__args[] = 
{
  &AbstractObjectReader_methods_readTagEnd_INLRString__LRString__arg_key,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readTagEnd_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readTagEnd_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract,// class flags, like static, Constructor
  0, //AttributesRes
  "readTagEnd", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_l_readTagEnd", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readTagEnd_INLRString__LRString__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readTagEnd_INLRString__LRString__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readTagEnd_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__arg_expected = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "expected", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__args[] = 
{
  &AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__arg_key,
  &AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__arg_expected,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readTagStart_INLRString_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readTagStart", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_i_readTagStart", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readTagStart_INLRString_INLRString__LRString__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readTagStart_INLRString_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_readTagStart_INLRString__LRString__arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readTagStart_INLRString__LRString__args[] = 
{
  &AbstractObjectReader_methods_readTagStart_INLRString__LRString__arg_key,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readTagStart_INLRString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readTagStart_INLRString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract,// class flags, like static, Constructor
  0, //AttributesRes
  "readTagStart", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_j_readTagStart", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readTagStart_INLRString__LRString__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readTagStart_INLRString__LRString__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readTagStart_INLRString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_readUcCharElement__Luc2char__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_readUcCharElement__Luc2char__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_readUcCharElement__Luc2char_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readUcCharElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz(), // return type
  "_E_readUcCharElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_readUcCharElement__Luc2char__args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_readUcCharElement__Luc2char__exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_readUcCharElement__Luc2char__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_reset__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_reset__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_reset__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "reset", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_reset", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_reset__V_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_reset__V_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_reset__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_resetLRefs__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_resetLRefs__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_resetLRefs__V = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "resetLRefs", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_L_resetLRefs", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_resetLRefs__V_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_resetLRefs__V_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_resetLRefs__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_setIn_INLRReader__V_arg_reader = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "reader", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_setIn_INLRReader__V_args[] = 
{
  &AbstractObjectReader_methods_setIn_INLRReader__V_arg_reader,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_setIn_INLRReader__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_setIn_INLRReader__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setIn", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_setIn", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_setIn_INLRReader__V_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_setIn_INLRReader__V_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_setIn_INLRReader__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectReader_methods_skip_J_J_arg_n = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "n", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_skip_J_J_args[] = 
{
  &AbstractObjectReader_methods_skip_J_J_arg_n,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_skip_J_J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_skip_J_J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "skip", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_3_skip", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_skip_J_J_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_skip_J_J_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_skip_J_J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectReader_methods_withSerialVersionUID__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectReader_methods_withSerialVersionUID__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectReader_method_withSerialVersionUID__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "withSerialVersionUID", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_h_withSerialVersionUID", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectReader_methods_withSerialVersionUID__Z_args, // the arguments
  0, //arguments count
  AbstractObjectReader_methods_withSerialVersionUID__Z_exceptions, // the declared exceptions
  AbstractObjectReader_MetainfoWrapper::AbstractObjectReader_method_withSerialVersionUID__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractObjectReader_methods[] = 
{
  &AbstractObjectReader_method_AbstractObjectReader_INLRReader_I_LRAbstractObjectReader_,
  &AbstractObjectReader_method_AbstractObjectReader_INLRReader__LRAbstractObjectReader_,
  &AbstractObjectReader_method_GetClass__L_acdk_lang_RClass_,
  &AbstractObjectReader_method__readBasicArray_INLRClass_I_LRObject_,
  &AbstractObjectReader_method__readObject_INL_acdk_lang_RClass__LRObject_,
  &AbstractObjectReader_method_defaultReadObject_INLRClass_INLRObject__V,
  &AbstractObjectReader_method_getStorage__LRStorage_,
  &AbstractObjectReader_method_getStorageReader__LRReader_,
  &AbstractObjectReader_method_isLabeled__Z,
  &AbstractObjectReader_method_isNamed__Z,
  &AbstractObjectReader_method_isReduced__Z,
  &AbstractObjectReader_method_isTagged__Z,
  &AbstractObjectReader_method_joinStrings__Z,
  &AbstractObjectReader_method_readBoolean__Z,
  &AbstractObjectReader_method_readBooleanElement__Z,
  &AbstractObjectReader_method_readByteElement__B,
  &AbstractObjectReader_method_readChar__C,
  &AbstractObjectReader_method_readCharElement__C,
  &AbstractObjectReader_method_readClassDescriptor_INLRClass__LRClass_,
  &AbstractObjectReader_method_readClassId__LRClass_,
  &AbstractObjectReader_method_readDouble__D,
  &AbstractObjectReader_method_readDoubleElement__D,
  &AbstractObjectReader_method_readFloat__F,
  &AbstractObjectReader_method_readFloatElement__F,
  &AbstractObjectReader_method_readInt__I,
  &AbstractObjectReader_method_readIntElement__I,
  &AbstractObjectReader_method_readLong__J,
  &AbstractObjectReader_method_readLongElement__J,
  &AbstractObjectReader_method_readObject__LRObject_,
  &AbstractObjectReader_method_readObject_INL_acdk_lang_RClass__LRObject_,
  &AbstractObjectReader_method_readObject2__LRObject_,
  &AbstractObjectReader_method_readObject2_INL_acdk_lang_RClass__LRObject_,
  &AbstractObjectReader_method_readObjectHierarchy_INLRClass_INLRObject__V,
  &AbstractObjectReader_method_readObjectLocalId__I,
  &AbstractObjectReader_method_readOpaque__LRbyteArray_,
  &AbstractObjectReader_method_readShort__S,
  &AbstractObjectReader_method_readShortElement__S,
  &AbstractObjectReader_method_readString__LRString_,
  &AbstractObjectReader_method_readStringElement__LRString_,
  &AbstractObjectReader_method_readStringImpl__LRString_,
  &AbstractObjectReader_method_readTagEnd_INLRString_INLRString__LRString_,
  &AbstractObjectReader_method_readTagEnd_INLRString__LRString_,
  &AbstractObjectReader_method_readTagStart_INLRString_INLRString__LRString_,
  &AbstractObjectReader_method_readTagStart_INLRString__LRString_,
  &AbstractObjectReader_method_readUcCharElement__Luc2char_,
  &AbstractObjectReader_method_reset__V,
  &AbstractObjectReader_method_resetLRefs__V,
  &AbstractObjectReader_method_setIn_INLRReader__V,
  &AbstractObjectReader_method_skip_J_J,
  &AbstractObjectReader_method_withSerialVersionUID__Z,
  0
};


struct AbstractObjectReader_MetaInfoInitializer
{  AbstractObjectReader_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractObjectReader::clazzInfo();
    ci->fields =  _AbstractObjectReader_fields;
    ci->methods =  _AbstractObjectReader_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractObjectReader_MetaInfoInitializer AbstractObjectReader_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 


//static
::acdk::lang::RObject
AbstractObjectWriter_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractObjectWriter>(length);
}

//static
::acdk::lang::RObject
AbstractObjectWriter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractObjectWriter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractObjectWriter::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method__lookupStringRef_INLRString__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectWriter::_lookupStringRef(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
      ret = This->_lookupStringRef(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method__writeObject_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::_writeObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->_writeObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_defaultWriteObject_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::defaultWriteObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->defaultWriteObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_flush__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::flush();
    else
        This->flush();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_isLabeled__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectWriter::isLabeled();
    else
      ret = This->isLabeled();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_isNamed__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectWriter::isNamed();
    else
      ret = This->isNamed();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_isReduced__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectWriter::isReduced();
    else
      ret = This->isReduced();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_isTagged__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectWriter::isTagged();
    else
      ret = This->isTagged();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_joinStrings__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectWriter::joinStrings();
    else
      ret = This->joinStrings();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_resetLocalRefs__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::resetLocalRefs();
    else
        This->resetLocalRefs();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_withSerialVersionUID__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractObjectWriter::withSerialVersionUID();
    else
      ret = This->withSerialVersionUID();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_write_INLRbyteArray_II_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_write_INLRbyteArray__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_write_INLRbyteArray_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeBooleanElement_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeBooleanElement(::acdk::lang::dmi::castTo< bool>(args[0], dc));
    else
        This->writeBooleanElement(::acdk::lang::dmi::castTo< bool>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeCharElement_C_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeCharElement(::acdk::lang::dmi::castTo< char>(args[0], dc));
    else
        This->writeCharElement(::acdk::lang::dmi::castTo< char>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeClassDescriptor_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeClassDescriptor(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->writeClassDescriptor(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeClassId_INL_acdk_lang_RClass__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->writeClassId(::acdk::lang::dmi::castTo< ::acdk::lang::RClass>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeDoubleElement_D_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeDoubleElement(::acdk::lang::dmi::castTo< double>(args[0], dc));
    else
        This->writeDoubleElement(::acdk::lang::dmi::castTo< double>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeFloatElement_F_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeFloatElement(::acdk::lang::dmi::castTo< float>(args[0], dc));
    else
        This->writeFloatElement(::acdk::lang::dmi::castTo< float>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeIntElement_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeIntElement(::acdk::lang::dmi::castTo< int>(args[0], dc));
    else
        This->writeIntElement(::acdk::lang::dmi::castTo< int>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeLongElement_J_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeLongElement(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    else
        This->writeLongElement(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeObject_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeObject(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    else
        This->writeObject(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeObject_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->writeObject(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeObject2_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeObject2(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    else
        This->writeObject2(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeObject2_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeObject2(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->writeObject2(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeObjectHierarchy_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeObjectHierarchy(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->writeObjectHierarchy(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeObjectLocalId_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeObjectLocalId(::acdk::lang::dmi::castTo< int>(args[0], dc));
    else
        This->writeObjectLocalId(::acdk::lang::dmi::castTo< int>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeShortElement_S_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeShortElement(::acdk::lang::dmi::castTo< short>(args[0], dc));
    else
        This->writeShortElement(::acdk::lang::dmi::castTo< short>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        This->writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeStringElement_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeStringElement(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        This->writeStringElement(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeStringImpl_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->writeStringImpl(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeTagEnd_INLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->writeTagEnd(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeTagEnd_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->writeTagEnd(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeTagStart_INLRString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->writeTagStart(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeTagStart_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    This->writeTagStart(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeUcCharElement_Luc2char__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeUcCharElement(::acdk::lang::dmi::castTo< uc2char>(args[0], dc));
    else
        This->writeUcCharElement(::acdk::lang::dmi::castTo< uc2char>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractObjectWriter_method_writeUnshared_INLRClass_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractObjectWriter::writeUnshared(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->writeUnshared(::acdk::lang::dmi::castTo< RClass>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractObjectWriter_fields__maxStringId_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_maxStringId, flags);
    else
      This->_maxStringId = ::acdk::lang::dmi::castTo< int>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractObjectWriter_fields__serializeFlags_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_serializeFlags, flags);
    else
      This->_serializeFlags = ::acdk::lang::dmi::castTo< int>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractObjectWriter_fields__stringCache_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractObjectWriter* This = dmi_cast<AbstractObjectWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_stringCache, flags);
    else
      This->_stringCache = ::acdk::lang::dmi::castTo< ::acdk::util::RTreeMap>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractObjectWriter_fields__maxStringId = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_maxStringId", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_fields__maxStringId_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo AbstractObjectWriter_fields__serializeFlags = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_serializeFlags", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_fields__serializeFlags_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo AbstractObjectWriter_fields__stringCache = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_stringCache", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::util::RTreeMap::clazzInfo(),
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_fields__stringCache_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractObjectWriter_fields[] = 
{
  &AbstractObjectWriter_fields__maxStringId,
  &AbstractObjectWriter_fields__serializeFlags,
  &AbstractObjectWriter_fields__stringCache,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__arg_flags = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "flags", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__args[] = 
{
  &AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__arg_out,
  &AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__arg_flags,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractObjectWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractObjectWriter::clazzInfo(), // return type
  "_0_AbstractObjectWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter__arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter__args[] = 
{
  &AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter__arg_out,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractObjectWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractObjectWriter::clazzInfo(), // return type
  "_1_AbstractObjectWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter__args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_E_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods__lookupStringRef_INLRString__I_arg_str = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "str", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods__lookupStringRef_INLRString__I_args[] = 
{
  &AbstractObjectWriter_methods__lookupStringRef_INLRString__I_arg_str,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods__lookupStringRef_INLRString__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method__lookupStringRef_INLRString__I = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_lookupStringRef", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_C__lookupStringRef", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods__lookupStringRef_INLRString__I_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods__lookupStringRef_INLRString__I_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method__lookupStringRef_INLRString__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method__writeObject_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_writeObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_D__writeObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods__writeObject_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method__writeObject_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_defaultWriteObject_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "defaultWriteObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_w_defaultWriteObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_defaultWriteObject_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_defaultWriteObject_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_flush__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_flush__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_flush__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "flush", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_flush", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_flush__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_flush__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_flush__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_isLabeled__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_isLabeled__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_isLabeled__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isLabeled", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_7_isLabeled", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_isLabeled__Z_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_isLabeled__Z_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_isLabeled__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_isNamed__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_isNamed__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_isNamed__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isNamed", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_6_isNamed", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_isNamed__Z_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_isNamed__Z_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_isNamed__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_isReduced__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_isReduced__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_isReduced__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isReduced", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_9_isReduced", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_isReduced__Z_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_isReduced__Z_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_isReduced__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_isTagged__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_isTagged__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_isTagged__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isTagged", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_8_isTagged", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_isTagged__Z_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_isTagged__Z_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_isTagged__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_joinStrings__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_joinStrings__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_joinStrings__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "joinStrings", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_a_joinStrings", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_joinStrings__Z_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_joinStrings__Z_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_joinStrings__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_resetLocalRefs__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_resetLocalRefs__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_resetLocalRefs__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "resetLocalRefs", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_resetLocalRefs", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_resetLocalRefs__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_resetLocalRefs__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_resetLocalRefs__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_withSerialVersionUID__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_withSerialVersionUID__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_withSerialVersionUID__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "withSerialVersionUID", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_b_withSerialVersionUID", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_withSerialVersionUID__Z_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_withSerialVersionUID__Z_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_withSerialVersionUID__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_write_INLRbyteArray_II_V_arg_array = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "array", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_write_INLRbyteArray_II_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_write_INLRbyteArray_II_V_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_write_INLRbyteArray_II_V_args[] = 
{
  &AbstractObjectWriter_methods_write_INLRbyteArray_II_V_arg_array,
  &AbstractObjectWriter_methods_write_INLRbyteArray_II_V_arg_offset,
  &AbstractObjectWriter_methods_write_INLRbyteArray_II_V_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_write_INLRbyteArray_II_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_write_INLRbyteArray_II_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_i_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_write_INLRbyteArray_II_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_write_INLRbyteArray_II_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_write_INLRbyteArray_II_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_write_INLRbyteArray__V_arg_array = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "array", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_write_INLRbyteArray__V_args[] = 
{
  &AbstractObjectWriter_methods_write_INLRbyteArray__V_arg_array,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_write_INLRbyteArray__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_write_INLRbyteArray__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_j_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_write_INLRbyteArray__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_write_INLRbyteArray__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_write_INLRbyteArray__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_write_INLRbyteArray_I_V_arg_array = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "array", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_write_INLRbyteArray_I_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_write_INLRbyteArray_I_V_args[] = 
{
  &AbstractObjectWriter_methods_write_INLRbyteArray_I_V_arg_array,
  &AbstractObjectWriter_methods_write_INLRbyteArray_I_V_arg_offset,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_write_INLRbyteArray_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_write_INLRbyteArray_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_k_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_write_INLRbyteArray_I_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_write_INLRbyteArray_I_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_write_INLRbyteArray_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeBooleanElement_Z_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeBooleanElement_Z_V_args[] = 
{
  &AbstractObjectWriter_methods_writeBooleanElement_Z_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeBooleanElement_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeBooleanElement_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeBooleanElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_o_writeBooleanElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeBooleanElement_Z_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeBooleanElement_Z_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeBooleanElement_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeCharElement_C_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeCharElement_C_V_args[] = 
{
  &AbstractObjectWriter_methods_writeCharElement_C_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeCharElement_C_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeCharElement_C_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeCharElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_p_writeCharElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeCharElement_C_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeCharElement_C_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeCharElement_C_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeClassDescriptor_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeClassDescriptor", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_y_writeClassDescriptor", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeClassDescriptor_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeClassDescriptor_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeClassId_INL_acdk_lang_RClass__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeClassId_INL_acdk_lang_RClass__V_args[] = 
{
  &AbstractObjectWriter_methods_writeClassId_INL_acdk_lang_RClass__V_arg_cls,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeClassId_INL_acdk_lang_RClass__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeClassId_INL_acdk_lang_RClass__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeClassId", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_g_writeClassId", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeClassId_INL_acdk_lang_RClass__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeClassId_INL_acdk_lang_RClass__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeClassId_INL_acdk_lang_RClass__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeDoubleElement_D_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeDoubleElement_D_V_args[] = 
{
  &AbstractObjectWriter_methods_writeDoubleElement_D_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeDoubleElement_D_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeDoubleElement_D_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeDoubleElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_v_writeDoubleElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeDoubleElement_D_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeDoubleElement_D_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeDoubleElement_D_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeFloatElement_F_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeFloatElement_F_V_args[] = 
{
  &AbstractObjectWriter_methods_writeFloatElement_F_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeFloatElement_F_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeFloatElement_F_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeFloatElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_u_writeFloatElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeFloatElement_F_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeFloatElement_F_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeFloatElement_F_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeIntElement_I_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeIntElement_I_V_args[] = 
{
  &AbstractObjectWriter_methods_writeIntElement_I_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeIntElement_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeIntElement_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeIntElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_s_writeIntElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeIntElement_I_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeIntElement_I_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeIntElement_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeLongElement_J_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeLongElement_J_V_args[] = 
{
  &AbstractObjectWriter_methods_writeLongElement_J_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeLongElement_J_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeLongElement_J_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeLongElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_t_writeLongElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeLongElement_J_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeLongElement_J_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeLongElement_J_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObject_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeObject_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_writeObject_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeObject_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeObject_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_writeObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeObject_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeObject_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeObject_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeObject_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeObject", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_writeObject", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeObject_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeObject_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObject2_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeObject2_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_writeObject2_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeObject2_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeObject2_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeObject2", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_A_writeObject2", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeObject2_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeObject2_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeObject2_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeObject2_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeObject2", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_B_writeObject2", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeObject2_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeObject2_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeObjectHierarchy_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeObjectHierarchy", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_z_writeObjectHierarchy", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeObjectHierarchy_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeObjectHierarchy_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeObjectLocalId_I_V_arg_id = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "id", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeObjectLocalId_I_V_args[] = 
{
  &AbstractObjectWriter_methods_writeObjectLocalId_I_V_arg_id,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeObjectLocalId_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeObjectLocalId_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeObjectLocalId", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_h_writeObjectLocalId", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeObjectLocalId_I_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeObjectLocalId_I_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeObjectLocalId_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeShortElement_S_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeShortElement_S_V_args[] = 
{
  &AbstractObjectWriter_methods_writeShortElement_S_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeShortElement_S_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeShortElement_S_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeShortElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_r_writeShortElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeShortElement_S_V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeShortElement_S_V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeShortElement_S_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeString_INLRString__V_arg_str = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "str", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeString_INLRString__V_args[] = 
{
  &AbstractObjectWriter_methods_writeString_INLRString__V_arg_str,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_l_writeString", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeString_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeString_INLRString__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeStringElement_INLRString__V_arg_str = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "str", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeStringElement_INLRString__V_args[] = 
{
  &AbstractObjectWriter_methods_writeStringElement_INLRString__V_arg_str,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeStringElement_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeStringElement_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeStringElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_n_writeStringElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeStringElement_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeStringElement_INLRString__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeStringElement_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeStringImpl_INLRString__V_arg_str = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "str", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeStringImpl_INLRString__V_args[] = 
{
  &AbstractObjectWriter_methods_writeStringImpl_INLRString__V_arg_str,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeStringImpl_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeStringImpl_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeStringImpl", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_m_writeStringImpl", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeStringImpl_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeStringImpl_INLRString__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeStringImpl_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_args[] = 
{
  &AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_arg_key,
  &AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeTagEnd_INLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeTagEnd", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_e_writeTagEnd", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeTagEnd_INLRString_INLRString__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeTagEnd_INLRString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeTagEnd_INLRString__V_arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeTagEnd_INLRString__V_args[] = 
{
  &AbstractObjectWriter_methods_writeTagEnd_INLRString__V_arg_key,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeTagEnd_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeTagEnd_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract,// class flags, like static, Constructor
  0, //AttributesRes
  "writeTagEnd", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_f_writeTagEnd", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeTagEnd_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeTagEnd_INLRString__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeTagEnd_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_arg_value = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "value", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_args[] = 
{
  &AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_arg_key,
  &AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_arg_value,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeTagStart_INLRString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeTagStart", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_c_writeTagStart", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeTagStart_INLRString_INLRString__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeTagStart_INLRString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeTagStart_INLRString__V_arg_key = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "key", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeTagStart_INLRString__V_args[] = 
{
  &AbstractObjectWriter_methods_writeTagStart_INLRString__V_arg_key,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeTagStart_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeTagStart_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract,// class flags, like static, Constructor
  0, //AttributesRes
  "writeTagStart", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_d_writeTagStart", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeTagStart_INLRString__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeTagStart_INLRString__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeTagStart_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeUcCharElement_Luc2char__V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeUcCharElement_Luc2char__V_args[] = 
{
  &AbstractObjectWriter_methods_writeUcCharElement_Luc2char__V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeUcCharElement_Luc2char__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeUcCharElement_Luc2char__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeUcCharElement", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_q_writeUcCharElement", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeUcCharElement_Luc2char__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeUcCharElement_Luc2char__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeUcCharElement_Luc2char__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_arg_cls = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "cls", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RClass::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_args[] = 
{
  &AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_arg_cls,
  &AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractObjectWriter_method_writeUnshared_INLRClass_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeUnshared", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_x_writeUnshared", // alternative name of method
  -1, // altlabelHashCode
  AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractObjectWriter_methods_writeUnshared_INLRClass_INLRObject__V_exceptions, // the declared exceptions
  AbstractObjectWriter_MetainfoWrapper::AbstractObjectWriter_method_writeUnshared_INLRClass_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractObjectWriter_methods[] = 
{
  &AbstractObjectWriter_method_AbstractObjectWriter_INLRWriter_I_LRAbstractObjectWriter_,
  &AbstractObjectWriter_method_AbstractObjectWriter_INLRWriter__LRAbstractObjectWriter_,
  &AbstractObjectWriter_method_GetClass__L_acdk_lang_RClass_,
  &AbstractObjectWriter_method__lookupStringRef_INLRString__I,
  &AbstractObjectWriter_method__writeObject_INLRClass_INLRObject__V,
  &AbstractObjectWriter_method_defaultWriteObject_INLRClass_INLRObject__V,
  &AbstractObjectWriter_method_flush__V,
  &AbstractObjectWriter_method_isLabeled__Z,
  &AbstractObjectWriter_method_isNamed__Z,
  &AbstractObjectWriter_method_isReduced__Z,
  &AbstractObjectWriter_method_isTagged__Z,
  &AbstractObjectWriter_method_joinStrings__Z,
  &AbstractObjectWriter_method_resetLocalRefs__V,
  &AbstractObjectWriter_method_withSerialVersionUID__Z,
  &AbstractObjectWriter_method_write_INLRbyteArray_II_V,
  &AbstractObjectWriter_method_write_INLRbyteArray__V,
  &AbstractObjectWriter_method_write_INLRbyteArray_I_V,
  &AbstractObjectWriter_method_writeBooleanElement_Z_V,
  &AbstractObjectWriter_method_writeCharElement_C_V,
  &AbstractObjectWriter_method_writeClassDescriptor_INLRClass_INLRObject__V,
  &AbstractObjectWriter_method_writeClassId_INL_acdk_lang_RClass__V,
  &AbstractObjectWriter_method_writeDoubleElement_D_V,
  &AbstractObjectWriter_method_writeFloatElement_F_V,
  &AbstractObjectWriter_method_writeIntElement_I_V,
  &AbstractObjectWriter_method_writeLongElement_J_V,
  &AbstractObjectWriter_method_writeObject_INLRObject__V,
  &AbstractObjectWriter_method_writeObject_INLRClass_INLRObject__V,
  &AbstractObjectWriter_method_writeObject2_INLRObject__V,
  &AbstractObjectWriter_method_writeObject2_INLRClass_INLRObject__V,
  &AbstractObjectWriter_method_writeObjectHierarchy_INLRClass_INLRObject__V,
  &AbstractObjectWriter_method_writeObjectLocalId_I_V,
  &AbstractObjectWriter_method_writeShortElement_S_V,
  &AbstractObjectWriter_method_writeString_INLRString__V,
  &AbstractObjectWriter_method_writeStringElement_INLRString__V,
  &AbstractObjectWriter_method_writeStringImpl_INLRString__V,
  &AbstractObjectWriter_method_writeTagEnd_INLRString_INLRString__V,
  &AbstractObjectWriter_method_writeTagEnd_INLRString__V,
  &AbstractObjectWriter_method_writeTagStart_INLRString_INLRString__V,
  &AbstractObjectWriter_method_writeTagStart_INLRString__V,
  &AbstractObjectWriter_method_writeUcCharElement_Luc2char__V,
  &AbstractObjectWriter_method_writeUnshared_INLRClass_INLRObject__V,
  0
};


struct AbstractObjectWriter_MetaInfoInitializer
{  AbstractObjectWriter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractObjectWriter::clazzInfo();
    ci->fields =  _AbstractObjectWriter_fields;
    ci->methods =  _AbstractObjectWriter_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractObjectWriter_MetaInfoInitializer AbstractObjectWriter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
AbstractReader_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractReader>(length);
}

//static
::acdk::lang::RObject
AbstractReader_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractReader_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractReader::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_getLock__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractReader::getLock();
    else
        ret = (::acdk::lang::RObject)This->getLock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_lock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractReader::lock();
    else
        This->lock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_read__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractReader::read();
    else
      ret = This->read();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_read_INLRbyteArray_II_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractReader::read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    else
      ret = This->read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_read_INLRbyteArray__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractReader::read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    else
      ret = This->read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_read_INLRbyteArray_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractReader::read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    else
      ret = This->read(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_seek_IJ_J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractReader::seek((SeekPos)::acdk::lang::dmi::castTo<int>(args[0], dc), ::acdk::lang::dmi::castTo< jlong>(args[1], dc));
    else
      ret = This->seek((SeekPos)::acdk::lang::dmi::castTo<int>(args[0], dc), ::acdk::lang::dmi::castTo< jlong>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_setLock_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractReader::setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    else
        This->setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_skip_J_J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->AbstractReader::skip(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    else
      ret = This->skip(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractReader_method_unlock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractReader::unlock();
    else
        This->unlock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractReader_fields_iolock_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractReader* This = dmi_cast<AbstractReader>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->iolock, flags);
    else
      This->iolock = ::acdk::lang::dmi::castTo< RObject>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractReader_fields_iolock = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "iolock", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(),
  AbstractReader_MetainfoWrapper::AbstractReader_fields_iolock_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractReader_fields[] = 
{
  &AbstractReader_fields_iolock,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_AbstractReader__LRAbstractReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_AbstractReader__LRAbstractReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_AbstractReader__LRAbstractReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractReader::clazzInfo(), // return type
  "_0_AbstractReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_AbstractReader__LRAbstractReader__args, // the arguments
  0, //arguments count
  AbstractReader_methods_AbstractReader__LRAbstractReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_AbstractReader_INLRObject__LRAbstractReader__arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_AbstractReader_INLRObject__LRAbstractReader__args[] = 
{
  &AbstractReader_methods_AbstractReader_INLRObject__LRAbstractReader__arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_AbstractReader_INLRObject__LRAbstractReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_AbstractReader_INLRObject__LRAbstractReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractReader::clazzInfo(), // return type
  "_1_AbstractReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_AbstractReader_INLRObject__LRAbstractReader__args, // the arguments
  0, //arguments count
  AbstractReader_methods_AbstractReader_INLRObject__LRAbstractReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_d_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractReader_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_getLock__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_getLock__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_getLock__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_5_getLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_getLock__LRObject__args, // the arguments
  0, //arguments count
  AbstractReader_methods_getLock__LRObject__exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_getLock__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_lock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_lock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_lock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "lock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_lock", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_lock__V_args, // the arguments
  0, //arguments count
  AbstractReader_methods_lock__V_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_lock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_read__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_read__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_read__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_8_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_read__I_args, // the arguments
  0, //arguments count
  AbstractReader_methods_read__I_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_read__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_read_INLRbyteArray_II_I_arg_buffer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buffer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_read_INLRbyteArray_II_I_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_read_INLRbyteArray_II_I_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_read_INLRbyteArray_II_I_args[] = 
{
  &AbstractReader_methods_read_INLRbyteArray_II_I_arg_buffer,
  &AbstractReader_methods_read_INLRbyteArray_II_I_arg_offset,
  &AbstractReader_methods_read_INLRbyteArray_II_I_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_read_INLRbyteArray_II_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_read_INLRbyteArray_II_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_9_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_read_INLRbyteArray_II_I_args, // the arguments
  0, //arguments count
  AbstractReader_methods_read_INLRbyteArray_II_I_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_read_INLRbyteArray_II_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_read_INLRbyteArray__I_arg_buffer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buffer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_read_INLRbyteArray__I_args[] = 
{
  &AbstractReader_methods_read_INLRbyteArray__I_arg_buffer,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_read_INLRbyteArray__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_read_INLRbyteArray__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_a_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_read_INLRbyteArray__I_args, // the arguments
  0, //arguments count
  AbstractReader_methods_read_INLRbyteArray__I_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_read_INLRbyteArray__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_read_INLRbyteArray_I_I_arg_buffer = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buffer", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_read_INLRbyteArray_I_I_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_read_INLRbyteArray_I_I_args[] = 
{
  &AbstractReader_methods_read_INLRbyteArray_I_I_arg_buffer,
  &AbstractReader_methods_read_INLRbyteArray_I_I_arg_offset,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_read_INLRbyteArray_I_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_read_INLRbyteArray_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "read", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_b_read", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_read_INLRbyteArray_I_I_args, // the arguments
  0, //arguments count
  AbstractReader_methods_read_INLRbyteArray_I_I_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_read_INLRbyteArray_I_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_seek_IJ_J_arg_seekrel = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "seekrel", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_seek_IJ_J_arg_seekpos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "seekpos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_seek_IJ_J_args[] = 
{
  &AbstractReader_methods_seek_IJ_J_arg_seekrel,
  &AbstractReader_methods_seek_IJ_J_arg_seekpos,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_seek_IJ_J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_seek_IJ_J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "seek", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_6_seek", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_seek_IJ_J_args, // the arguments
  0, //arguments count
  AbstractReader_methods_seek_IJ_J_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_seek_IJ_J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_setLock_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_setLock_INLRObject__V_args[] = 
{
  &AbstractReader_methods_setLock_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_setLock_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_setLock_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_setLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_setLock_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractReader_methods_setLock_INLRObject__V_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_setLock_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractReader_methods_skip_J_J_arg_n = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "n", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_skip_J_J_args[] = 
{
  &AbstractReader_methods_skip_J_J_arg_n,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_skip_J_J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_skip_J_J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "skip", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_7_skip", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_skip_J_J_args, // the arguments
  0, //arguments count
  AbstractReader_methods_skip_J_J_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_skip_J_J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractReader_methods_unlock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractReader_methods_unlock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractReader_method_unlock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "unlock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_unlock", // alternative name of method
  -1, // altlabelHashCode
  AbstractReader_methods_unlock__V_args, // the arguments
  0, //arguments count
  AbstractReader_methods_unlock__V_exceptions, // the declared exceptions
  AbstractReader_MetainfoWrapper::AbstractReader_method_unlock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractReader_methods[] = 
{
  &AbstractReader_method_AbstractReader__LRAbstractReader_,
  &AbstractReader_method_AbstractReader_INLRObject__LRAbstractReader_,
  &AbstractReader_method_GetClass__L_acdk_lang_RClass_,
  &AbstractReader_method_getLock__LRObject_,
  &AbstractReader_method_lock__V,
  &AbstractReader_method_read__I,
  &AbstractReader_method_read_INLRbyteArray_II_I,
  &AbstractReader_method_read_INLRbyteArray__I,
  &AbstractReader_method_read_INLRbyteArray_I_I,
  &AbstractReader_method_seek_IJ_J,
  &AbstractReader_method_setLock_INLRObject__V,
  &AbstractReader_method_skip_J_J,
  &AbstractReader_method_unlock__V,
  0
};


struct AbstractReader_MetaInfoInitializer
{  AbstractReader_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractReader::clazzInfo();
    ci->fields =  _AbstractReader_fields;
    ci->methods =  _AbstractReader_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractReader_MetaInfoInitializer AbstractReader_MetaInfoInitializer_staticinstance__;


struct AbstractReader_clazzInfo_ClazzAttributesResInitializer2
{
  AbstractReader_clazzInfo_ClazzAttributesResInitializer2()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)&AbstractReader_methods_seek_IJ_J_arg_seekrel, "__enumArgInfo", ::acdk::lang::dmi::ClazzAttributeResValue::makeFunctionPtrRes((void*)SeekPosMetaInf::GetEnumInfo()));
  }
};

AbstractReader_clazzInfo_ClazzAttributesResInitializer2 AbstractReader_clazzInfo_ClazzAttributesResInitializer2_instance;



} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
AbstractStorageReader_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractStorageReader>(length);
}

//static
::acdk::lang::RObject
AbstractStorageReader_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractStorageReader_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractStorageReader_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractStorageReader::GetClass();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractStorageReader_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractStorageReader_methods_AbstractStorageReader_INLRObject__LRAbstractStorageReader__arg_iolock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "iolock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractStorageReader_methods_AbstractStorageReader_INLRObject__LRAbstractStorageReader__args[] = 
{
  &AbstractStorageReader_methods_AbstractStorageReader_INLRObject__LRAbstractStorageReader__arg_iolock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractStorageReader_methods_AbstractStorageReader_INLRObject__LRAbstractStorageReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractStorageReader_method_AbstractStorageReader_INLRObject__LRAbstractStorageReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractStorageReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractStorageReader::clazzInfo(), // return type
  "_0_AbstractStorageReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractStorageReader_methods_AbstractStorageReader_INLRObject__LRAbstractStorageReader__args, // the arguments
  0, //arguments count
  AbstractStorageReader_methods_AbstractStorageReader_INLRObject__LRAbstractStorageReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractStorageReader_methods_AbstractStorageReader__LRAbstractStorageReader__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractStorageReader_methods_AbstractStorageReader__LRAbstractStorageReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractStorageReader_method_AbstractStorageReader__LRAbstractStorageReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractStorageReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractStorageReader::clazzInfo(), // return type
  "_1_AbstractStorageReader", // alternative name of method
  -1, // altlabelHashCode
  AbstractStorageReader_methods_AbstractStorageReader__LRAbstractStorageReader__args, // the arguments
  0, //arguments count
  AbstractStorageReader_methods_AbstractStorageReader__LRAbstractStorageReader__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractStorageReader_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractStorageReader_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractStorageReader_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractStorageReader_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractStorageReader_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractStorageReader_MetainfoWrapper::AbstractStorageReader_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractStorageReader_methods[] = 
{
  &AbstractStorageReader_method_AbstractStorageReader_INLRObject__LRAbstractStorageReader_,
  &AbstractStorageReader_method_AbstractStorageReader__LRAbstractStorageReader_,
  &AbstractStorageReader_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct AbstractStorageReader_MetaInfoInitializer
{  AbstractStorageReader_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractStorageReader::clazzInfo();
    ci->fields =  _AbstractStorageReader_fields;
    ci->methods =  _AbstractStorageReader_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractStorageReader_MetaInfoInitializer AbstractStorageReader_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
AbstractStorageWriter_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractStorageWriter>(length);
}

//static
::acdk::lang::RObject
AbstractStorageWriter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractStorageWriter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractStorageWriter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractStorageWriter::GetClass();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractStorageWriter_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractStorageWriter_methods_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter__arg_iolock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "iolock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractStorageWriter_methods_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter__args[] = 
{
  &AbstractStorageWriter_methods_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter__arg_iolock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractStorageWriter_methods_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractStorageWriter_method_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractStorageWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractStorageWriter::clazzInfo(), // return type
  "_0_AbstractStorageWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractStorageWriter_methods_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter__args, // the arguments
  0, //arguments count
  AbstractStorageWriter_methods_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractStorageWriter_methods_AbstractStorageWriter__LRAbstractStorageWriter__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractStorageWriter_methods_AbstractStorageWriter__LRAbstractStorageWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractStorageWriter_method_AbstractStorageWriter__LRAbstractStorageWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractStorageWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractStorageWriter::clazzInfo(), // return type
  "_1_AbstractStorageWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractStorageWriter_methods_AbstractStorageWriter__LRAbstractStorageWriter__args, // the arguments
  0, //arguments count
  AbstractStorageWriter_methods_AbstractStorageWriter__LRAbstractStorageWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractStorageWriter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractStorageWriter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractStorageWriter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractStorageWriter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractStorageWriter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractStorageWriter_MetainfoWrapper::AbstractStorageWriter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractStorageWriter_methods[] = 
{
  &AbstractStorageWriter_method_AbstractStorageWriter_INLRObject__LRAbstractStorageWriter_,
  &AbstractStorageWriter_method_AbstractStorageWriter__LRAbstractStorageWriter_,
  &AbstractStorageWriter_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct AbstractStorageWriter_MetaInfoInitializer
{  AbstractStorageWriter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractStorageWriter::clazzInfo();
    ci->fields =  _AbstractStorageWriter_fields;
    ci->methods =  _AbstractStorageWriter_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractStorageWriter_MetaInfoInitializer AbstractStorageWriter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
AbstractWriter_create_array(int length)
{
  return new ObjectArrayImpl<RAbstractWriter>(length);
}

//static
::acdk::lang::RObject
AbstractWriter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class AbstractWriter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)AbstractWriter::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_getLock__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->AbstractWriter::getLock();
    else
        ret = (::acdk::lang::RObject)This->getLock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_lock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractWriter::lock();
    else
        This->lock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_setLock_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractWriter::setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    else
        This->setLock(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_unlock__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractWriter::unlock();
    else
        This->unlock();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_write_INLRbyteArray_II_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractWriter::write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    else
        This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_write_INLRbyteArray__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractWriter::write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    else
        This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  AbstractWriter_method_write_INLRbyteArray_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->AbstractWriter::write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    else
        This->write(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  AbstractWriter_fields_iolock_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    AbstractWriter* This = dmi_cast<AbstractWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->iolock, flags);
    else
      This->iolock = ::acdk::lang::dmi::castTo< acdk::lang::RObject>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo AbstractWriter_fields_iolock = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "iolock", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  acdk::lang::RObject::clazzInfo(),
  AbstractWriter_MetainfoWrapper::AbstractWriter_fields_iolock_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _AbstractWriter_fields[] = 
{
  &AbstractWriter_fields_iolock,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_AbstractWriter__LRAbstractWriter__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_AbstractWriter__LRAbstractWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_AbstractWriter__LRAbstractWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractWriter::clazzInfo(), // return type
  "_0_AbstractWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_AbstractWriter__LRAbstractWriter__args, // the arguments
  0, //arguments count
  AbstractWriter_methods_AbstractWriter__LRAbstractWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_AbstractWriter_INLRObject__LRAbstractWriter__arg_olock = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "olock", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_AbstractWriter_INLRObject__LRAbstractWriter__args[] = 
{
  &AbstractWriter_methods_AbstractWriter_INLRObject__LRAbstractWriter__arg_olock,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_AbstractWriter_INLRObject__LRAbstractWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_AbstractWriter_INLRObject__LRAbstractWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "AbstractWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  AbstractWriter::clazzInfo(), // return type
  "_1_AbstractWriter", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_AbstractWriter_INLRObject__LRAbstractWriter__args, // the arguments
  0, //arguments count
  AbstractWriter_methods_AbstractWriter_INLRObject__LRAbstractWriter__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_c_GetClass", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  AbstractWriter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_getLock__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_getLock__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_getLock__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_7_getLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_getLock__LRObject__args, // the arguments
  0, //arguments count
  AbstractWriter_methods_getLock__LRObject__exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_getLock__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_lock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_lock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_lock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "lock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_lock", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_lock__V_args, // the arguments
  0, //arguments count
  AbstractWriter_methods_lock__V_exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_lock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_setLock_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_setLock_INLRObject__V_args[] = 
{
  &AbstractWriter_methods_setLock_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_setLock_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_setLock_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setLock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_setLock", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_setLock_INLRObject__V_args, // the arguments
  0, //arguments count
  AbstractWriter_methods_setLock_INLRObject__V_exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_setLock_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_unlock__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_unlock__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_unlock__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "unlock", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_unlock", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_unlock__V_args, // the arguments
  0, //arguments count
  AbstractWriter_methods_unlock__V_exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_unlock__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_write_INLRbyteArray_II_V_arg_ch = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ch", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_write_INLRbyteArray_II_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_write_INLRbyteArray_II_V_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_write_INLRbyteArray_II_V_args[] = 
{
  &AbstractWriter_methods_write_INLRbyteArray_II_V_arg_ch,
  &AbstractWriter_methods_write_INLRbyteArray_II_V_arg_offset,
  &AbstractWriter_methods_write_INLRbyteArray_II_V_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_write_INLRbyteArray_II_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_write_INLRbyteArray_II_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_9_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_write_INLRbyteArray_II_V_args, // the arguments
  0, //arguments count
  AbstractWriter_methods_write_INLRbyteArray_II_V_exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_write_INLRbyteArray_II_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_write_INLRbyteArray__V_arg_ch = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ch", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_write_INLRbyteArray__V_args[] = 
{
  &AbstractWriter_methods_write_INLRbyteArray__V_arg_ch,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_write_INLRbyteArray__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_write_INLRbyteArray__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_write_INLRbyteArray__V_args, // the arguments
  0, //arguments count
  AbstractWriter_methods_write_INLRbyteArray__V_exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_write_INLRbyteArray__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_write_INLRbyteArray_I_V_arg_ch = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "ch", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo AbstractWriter_methods_write_INLRbyteArray_I_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* AbstractWriter_methods_write_INLRbyteArray_I_V_args[] = 
{
  &AbstractWriter_methods_write_INLRbyteArray_I_V_arg_ch,
  &AbstractWriter_methods_write_INLRbyteArray_I_V_arg_offset,
  0
};

::acdk::lang::dmi::ClazzInfo* AbstractWriter_methods_write_INLRbyteArray_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo AbstractWriter_method_write_INLRbyteArray_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "write", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_b_write", // alternative name of method
  -1, // altlabelHashCode
  AbstractWriter_methods_write_INLRbyteArray_I_V_args, // the arguments
  0, //arguments count
  AbstractWriter_methods_write_INLRbyteArray_I_V_exceptions, // the declared exceptions
  AbstractWriter_MetainfoWrapper::AbstractWriter_method_write_INLRbyteArray_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _AbstractWriter_methods[] = 
{
  &AbstractWriter_method_AbstractWriter__LRAbstractWriter_,
  &AbstractWriter_method_AbstractWriter_INLRObject__LRAbstractWriter_,
  &AbstractWriter_method_GetClass__L_acdk_lang_RClass_,
  &AbstractWriter_method_getLock__LRObject_,
  &AbstractWriter_method_lock__V,
  &AbstractWriter_method_setLock_INLRObject__V,
  &AbstractWriter_method_unlock__V,
  &AbstractWriter_method_write_INLRbyteArray_II_V,
  &AbstractWriter_method_write_INLRbyteArray__V,
  &AbstractWriter_method_write_INLRbyteArray_I_V,
  0
};


struct AbstractWriter_MetaInfoInitializer
{  AbstractWriter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = AbstractWriter::clazzInfo();
    ci->fields =  _AbstractWriter_fields;
    ci->methods =  _AbstractWriter_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
AbstractWriter_MetaInfoInitializer AbstractWriter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
ASCIIDataReader_create_array(int length)
{
  return new ObjectArrayImpl<RASCIIDataReader>(length);
}

//static
::acdk::lang::RObject
ASCIIDataReader_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class ASCIIDataReader_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_ASCIIDataReader_INLRReader__LRASCIIDataReader__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new ASCIIDataReader(::acdk::lang::dmi::castTo< RReader>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)ASCIIDataReader::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readBoolean__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readBoolean();
    else
      ret = This->readBoolean();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readChar__C_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readChar();
    else
      ret = This->readChar();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readDouble__D_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readDouble();
    else
      ret = This->readDouble();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readFloat__F_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readFloat();
    else
      ret = This->readFloat();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readInt__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readInt();
    else
      ret = This->readInt();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readLong__J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readLong();
    else
      ret = This->readLong();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readShort__S_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readShort();
    else
      ret = This->readShort();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->ASCIIDataReader::readString();
    else
        ret = (::acdk::lang::RObject)This->readString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataReader_method_readUcChar__Luc2char__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataReader* This = dmi_cast<ASCIIDataReader>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->ASCIIDataReader::readUcChar();
    else
      ret = This->readUcChar();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _ASCIIDataReader_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataReader_methods_ASCIIDataReader_INLRReader__LRASCIIDataReader__arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_ASCIIDataReader_INLRReader__LRASCIIDataReader__args[] = 
{
  &ASCIIDataReader_methods_ASCIIDataReader_INLRReader__LRASCIIDataReader__arg_in,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_ASCIIDataReader_INLRReader__LRASCIIDataReader__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_ASCIIDataReader_INLRReader__LRASCIIDataReader_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "ASCIIDataReader", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ASCIIDataReader::clazzInfo(), // return type
  "_0_ASCIIDataReader", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_ASCIIDataReader_INLRReader__LRASCIIDataReader__args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_ASCIIDataReader_INLRReader__LRASCIIDataReader__exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_ASCIIDataReader_INLRReader__LRASCIIDataReader__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_a_GetClass", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readBoolean__Z_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readBoolean__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readBoolean__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readBoolean", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_1_readBoolean", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readBoolean__Z_args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readBoolean__Z_exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readBoolean__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readChar__C_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readChar__C_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readChar__C = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz(), // return type
  "_2_readChar", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readChar__C_args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readChar__C_exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readChar__C_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readDouble__D_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readDouble__D_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readDouble__D = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readDouble", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz(), // return type
  "_4_readDouble", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readDouble__D_args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readDouble__D_exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readDouble__D_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readFloat__F_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readFloat__F_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readFloat__F = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readFloat", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz(), // return type
  "_5_readFloat", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readFloat__F_args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readFloat__F_exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readFloat__F_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readInt__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readInt__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readInt__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readInt", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_6_readInt", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readInt__I_args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readInt__I_exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readInt__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readLong__J_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readLong__J_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readLong__J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readLong", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz(), // return type
  "_7_readLong", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readLong__J_args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readLong__J_exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readLong__J_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readShort__S_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readShort__S_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readShort__S = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readShort", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz(), // return type
  "_8_readShort", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readShort__S_args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readShort__S_exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readShort__S_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_9_readString", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readString__LRString__args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readString__LRString__exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataReader_methods_readUcChar__Luc2char__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataReader_methods_readUcChar__Luc2char__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataReader_method_readUcChar__Luc2char_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "readUcChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz(), // return type
  "_3_readUcChar", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataReader_methods_readUcChar__Luc2char__args, // the arguments
  0, //arguments count
  ASCIIDataReader_methods_readUcChar__Luc2char__exceptions, // the declared exceptions
  ASCIIDataReader_MetainfoWrapper::ASCIIDataReader_method_readUcChar__Luc2char__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _ASCIIDataReader_methods[] = 
{
  &ASCIIDataReader_method_ASCIIDataReader_INLRReader__LRASCIIDataReader_,
  &ASCIIDataReader_method_GetClass__L_acdk_lang_RClass_,
  &ASCIIDataReader_method_readBoolean__Z,
  &ASCIIDataReader_method_readChar__C,
  &ASCIIDataReader_method_readDouble__D,
  &ASCIIDataReader_method_readFloat__F,
  &ASCIIDataReader_method_readInt__I,
  &ASCIIDataReader_method_readLong__J,
  &ASCIIDataReader_method_readShort__S,
  &ASCIIDataReader_method_readString__LRString_,
  &ASCIIDataReader_method_readUcChar__Luc2char_,
  0
};


struct ASCIIDataReader_MetaInfoInitializer
{  ASCIIDataReader_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = ASCIIDataReader::clazzInfo();
    ci->fields =  _ASCIIDataReader_fields;
    ci->methods =  _ASCIIDataReader_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
ASCIIDataReader_MetaInfoInitializer ASCIIDataReader_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


namespace acdk { 
namespace io { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
ASCIIDataWriter_create_array(int length)
{
  return new ObjectArrayImpl<RASCIIDataWriter>(length);
}

//static
::acdk::lang::RObject
ASCIIDataWriter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class ASCIIDataWriter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new ASCIIDataWriter(::acdk::lang::dmi::castTo< RWriter>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)ASCIIDataWriter::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeBoolean_Z_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeBoolean(::acdk::lang::dmi::castTo< bool>(args[0], dc));
    else
        This->writeBoolean(::acdk::lang::dmi::castTo< bool>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeChar_C_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeChar(::acdk::lang::dmi::castTo< char>(args[0], dc));
    else
        This->writeChar(::acdk::lang::dmi::castTo< char>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeDouble_D_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeDouble(::acdk::lang::dmi::castTo< double>(args[0], dc));
    else
        This->writeDouble(::acdk::lang::dmi::castTo< double>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeFloat_F_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeFloat(::acdk::lang::dmi::castTo< float>(args[0], dc));
    else
        This->writeFloat(::acdk::lang::dmi::castTo< float>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeInt_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeInt(::acdk::lang::dmi::castTo< int>(args[0], dc));
    else
        This->writeInt(::acdk::lang::dmi::castTo< int>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeLong_J_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeLong(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    else
        This->writeLong(::acdk::lang::dmi::castTo< jlong>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeShort_S_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeShort(::acdk::lang::dmi::castTo< short>(args[0], dc));
    else
        This->writeShort(::acdk::lang::dmi::castTo< short>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeString_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        This->writeString(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ASCIIDataWriter_method_writeUcChar_Luc2char__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ASCIIDataWriter* This = dmi_cast<ASCIIDataWriter>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->ASCIIDataWriter::writeUcChar(::acdk::lang::dmi::castTo< uc2char>(args[0], dc));
    else
        This->writeUcChar(::acdk::lang::dmi::castTo< uc2char>(args[0], dc));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _ASCIIDataWriter_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__args[] = 
{
  &ASCIIDataWriter_methods_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__arg_out,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "ASCIIDataWriter", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ASCIIDataWriter::clazzInfo(), // return type
  "_0_ASCIIDataWriter", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_a_GetClass", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeBoolean_Z_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeBoolean_Z_V_args[] = 
{
  &ASCIIDataWriter_methods_writeBoolean_Z_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeBoolean_Z_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeBoolean_Z_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeBoolean", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1_writeBoolean", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeBoolean_Z_V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeBoolean_Z_V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeBoolean_Z_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeChar_C_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeChar_C_V_args[] = 
{
  &ASCIIDataWriter_methods_writeChar_C_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeChar_C_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeChar_C_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2_writeChar", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeChar_C_V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeChar_C_V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeChar_C_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeDouble_D_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeDouble_D_V_args[] = 
{
  &ASCIIDataWriter_methods_writeDouble_D_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeDouble_D_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeDouble_D_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeDouble", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_8_writeDouble", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeDouble_D_V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeDouble_D_V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeDouble_D_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeFloat_F_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeFloat_F_V_args[] = 
{
  &ASCIIDataWriter_methods_writeFloat_F_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeFloat_F_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeFloat_F_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeFloat", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_writeFloat", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeFloat_F_V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeFloat_F_V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeFloat_F_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeInt_I_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeInt_I_V_args[] = 
{
  &ASCIIDataWriter_methods_writeInt_I_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeInt_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeInt_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeInt", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_writeInt", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeInt_I_V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeInt_I_V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeInt_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeLong_J_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeLong_J_V_args[] = 
{
  &ASCIIDataWriter_methods_writeLong_J_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeLong_J_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeLong_J_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeLong", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_writeLong", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeLong_J_V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeLong_J_V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeLong_J_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeShort_S_V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeShort_S_V_args[] = 
{
  &ASCIIDataWriter_methods_writeShort_S_V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeShort_S_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeShort_S_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeShort", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_writeShort", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeShort_S_V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeShort_S_V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeShort_S_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeString_INLRString__V_arg_str = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "str", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeString_INLRString__V_args[] = 
{
  &ASCIIDataWriter_methods_writeString_INLRString__V_arg_str,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeString_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeString_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_9_writeString", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeString_INLRString__V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeString_INLRString__V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeString_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ASCIIDataWriter_methods_writeUcChar_Luc2char__V_arg_b = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "b", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ASCIIDataWriter_methods_writeUcChar_Luc2char__V_args[] = 
{
  &ASCIIDataWriter_methods_writeUcChar_Luc2char__V_arg_b,
  0
};

::acdk::lang::dmi::ClazzInfo* ASCIIDataWriter_methods_writeUcChar_Luc2char__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ASCIIDataWriter_method_writeUcChar_Luc2char__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "writeUcChar", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_writeUcChar", // alternative name of method
  -1, // altlabelHashCode
  ASCIIDataWriter_methods_writeUcChar_Luc2char__V_args, // the arguments
  0, //arguments count
  ASCIIDataWriter_methods_writeUcChar_Luc2char__V_exceptions, // the declared exceptions
  ASCIIDataWriter_MetainfoWrapper::ASCIIDataWriter_method_writeUcChar_Luc2char__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _ASCIIDataWriter_methods[] = 
{
  &ASCIIDataWriter_method_ASCIIDataWriter_INLRWriter__LRASCIIDataWriter_,
  &ASCIIDataWriter_method_GetClass__L_acdk_lang_RClass_,
  &ASCIIDataWriter_method_writeBoolean_Z_V,
  &ASCIIDataWriter_method_writeChar_C_V,
  &ASCIIDataWriter_method_writeDouble_D_V,
  &ASCIIDataWriter_method_writeFloat_F_V,
  &ASCIIDataWriter_method_writeInt_I_V,
  &ASCIIDataWriter_method_writeLong_J_V,
  &ASCIIDataWriter_method_writeShort_S_V,
  &ASCIIDataWriter_method_writeString_INLRString__V,
  &ASCIIDataWriter_method_writeUcChar_Luc2char__V,
  0
};


struct ASCIIDataWriter_MetaInfoInitializer
{  ASCIIDataWriter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = ASCIIDataWriter::clazzInfo();
    ci->fields =  _ASCIIDataWriter_fields;
    ci->methods =  _ASCIIDataWriter_methods;
    ci->_scopeParent = acdk_io_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
ASCIIDataWriter_MetaInfoInitializer ASCIIDataWriter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace io


#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) io_dummyExportFunc() {}
#endif

