// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../security.h"
#include "../GeneralSecurityException.h"
#include "../MessageDigest.h"
#include "../MessageDigestSpi.h"
#include "../NoSuchAlgorithmException.h"
#include "../security.h"
#include "../SHAMessageDigest.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>


struct acdk::lang::dmi::UnitInfo acdk_security_unitInfo = {
  ::acdk::lang::dmi::MiUnitInfo, // flags
  0, //attributeRes
  "security", // name of unit
  -1, // hashCode
  "acdk", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  0 // _firstChild first ClazzInfo of this unit
};

static ::acdk::lang::dmi::RegisterUnitInfo _register_acdk_security_unitInfo(&acdk_security_unitInfo);


struct _ModuleInitializer1
{
  _ModuleInitializer1()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)&acdk_security_unitInfo, "acdkx_orb_UnitInclude1", ::acdk::lang::dmi::ClazzAttributeResValue::makeStringRes("acdk_core.idl", false));
  }
};

static _ModuleInitializer1 _ModuleInitializer1_instance;



namespace acdk { 
namespace security { 


//static
::acdk::lang::RObject
GeneralSecurityException_create_array(int length)
{
  return new ObjectArrayImpl<RGeneralSecurityException>(length);
}

//static
::acdk::lang::RObject
GeneralSecurityException_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class GeneralSecurityException_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  GeneralSecurityException_method_GeneralSecurityException__LRGeneralSecurityException__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new GeneralSecurityException();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  GeneralSecurityException_method_GeneralSecurityException_INLRString__LRGeneralSecurityException__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new GeneralSecurityException(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  GeneralSecurityException_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)GeneralSecurityException::GetClass();
    return methinf;
  }
};


void ThrowException_GeneralSecurityException(IN(::acdk::lang::RThrowable) ex)
{
  throw RGeneralSecurityException(ex);
}

::acdk::lang::dmi::ClazzFieldInfo* _GeneralSecurityException_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* GeneralSecurityException_methods_GeneralSecurityException__LRGeneralSecurityException__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* GeneralSecurityException_methods_GeneralSecurityException__LRGeneralSecurityException__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo GeneralSecurityException_method_GeneralSecurityException__LRGeneralSecurityException_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "GeneralSecurityException", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  GeneralSecurityException::clazzInfo(), // return type
  "_0_GeneralSecurityException", // alternative name of method
  -1, // altlabelHashCode
  GeneralSecurityException_methods_GeneralSecurityException__LRGeneralSecurityException__args, // the arguments
  0, //arguments count
  GeneralSecurityException_methods_GeneralSecurityException__LRGeneralSecurityException__exceptions, // the declared exceptions
  GeneralSecurityException_MetainfoWrapper::GeneralSecurityException_method_GeneralSecurityException__LRGeneralSecurityException__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo GeneralSecurityException_methods_GeneralSecurityException_INLRString__LRGeneralSecurityException__arg_what = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "what", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* GeneralSecurityException_methods_GeneralSecurityException_INLRString__LRGeneralSecurityException__args[] = 
{
  &GeneralSecurityException_methods_GeneralSecurityException_INLRString__LRGeneralSecurityException__arg_what,
  0
};

::acdk::lang::dmi::ClazzInfo* GeneralSecurityException_methods_GeneralSecurityException_INLRString__LRGeneralSecurityException__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo GeneralSecurityException_method_GeneralSecurityException_INLRString__LRGeneralSecurityException_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "GeneralSecurityException", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  GeneralSecurityException::clazzInfo(), // return type
  "_1_GeneralSecurityException", // alternative name of method
  -1, // altlabelHashCode
  GeneralSecurityException_methods_GeneralSecurityException_INLRString__LRGeneralSecurityException__args, // the arguments
  0, //arguments count
  GeneralSecurityException_methods_GeneralSecurityException_INLRString__LRGeneralSecurityException__exceptions, // the declared exceptions
  GeneralSecurityException_MetainfoWrapper::GeneralSecurityException_method_GeneralSecurityException_INLRString__LRGeneralSecurityException__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* GeneralSecurityException_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* GeneralSecurityException_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo GeneralSecurityException_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  GeneralSecurityException_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  GeneralSecurityException_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  GeneralSecurityException_MetainfoWrapper::GeneralSecurityException_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _GeneralSecurityException_methods[] = 
{
  &GeneralSecurityException_method_GeneralSecurityException__LRGeneralSecurityException_,
  &GeneralSecurityException_method_GeneralSecurityException_INLRString__LRGeneralSecurityException_,
  &GeneralSecurityException_method_GetClass__L_acdk_lang_RClass_,
  0
};


struct GeneralSecurityException_MetaInfoInitializer
{  GeneralSecurityException_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = GeneralSecurityException::clazzInfo();
    ci->fields =  _GeneralSecurityException_fields;
    ci->methods =  _GeneralSecurityException_methods;
    ci->_scopeParent = acdk_security_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
GeneralSecurityException_MetaInfoInitializer GeneralSecurityException_MetaInfoInitializer_staticinstance__;


struct GeneralSecurityException_clazzInfo_ClazzAttributesResInitializer2
{
  GeneralSecurityException_clazzInfo_ClazzAttributesResInitializer2()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)GeneralSecurityException::clazzInfo(), "__throwExceptionFunc", ::acdk::lang::dmi::ClazzAttributeResValue(0xFFFF, (void*)&ThrowException_GeneralSecurityException));
  }
};

GeneralSecurityException_clazzInfo_ClazzAttributesResInitializer2 GeneralSecurityException_clazzInfo_ClazzAttributesResInitializer2_instance;



} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
MessageDigest_create_array(int length)
{
  return new ObjectArrayImpl<RMessageDigest>(length);
}

//static
::acdk::lang::RObject
MessageDigest_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class MessageDigest_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)MessageDigest::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_digest__LRbyteArray__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MessageDigest::digest();
    else
        ret = (::acdk::lang::RObject)This->digest();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_digest_INLRbyteArray_II_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->MessageDigest::digest(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    else
      ret = This->digest(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_engineReset__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    This->engineReset();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_getAlgorithm__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MessageDigest::getAlgorithm();
    else
        ret = (::acdk::lang::RObject)This->getAlgorithm();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_getDigestLength__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->MessageDigest::getDigestLength();
    else
      ret = This->getDigestLength();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_getInstance_INLRString__LRMessageDigest__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)MessageDigest::getInstance(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_isEqual_INLRbyteArray_INLRbyteArray__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
  ret = MessageDigest::isEqual(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< RbyteArray>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_reset__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MessageDigest::reset();
    else
        This->reset();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MessageDigest::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_update_B_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MessageDigest::update(::acdk::lang::dmi::castTo< byte>(args[0], dc));
    else
        This->update(::acdk::lang::dmi::castTo< byte>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_update_INLRbyteArray_II_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MessageDigest::update(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    else
        This->update(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_update_INLRbyteArray__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MessageDigest::update(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    else
        This->update(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigest_method_update_INLRbyteArray_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MessageDigest::update(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    else
        This->update(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  MessageDigest_fields__algorithm_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    MessageDigest* This = dmi_cast<MessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_algorithm, flags);
    else
      This->_algorithm = ::acdk::lang::dmi::castTo< RString>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo MessageDigest_fields__algorithm = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_algorithm", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(),
  MessageDigest_MetainfoWrapper::MessageDigest_fields__algorithm_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _MessageDigest_fields[] = 
{
  &MessageDigest_fields__algorithm,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_e_GetClass", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  MessageDigest_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_MessageDigest_INLRString__LRMessageDigest__arg_algorithm = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "algorithm", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_MessageDigest_INLRString__LRMessageDigest__args[] = 
{
  &MessageDigest_methods_MessageDigest_INLRString__LRMessageDigest__arg_algorithm,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_MessageDigest_INLRString__LRMessageDigest__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_MessageDigest_INLRString__LRMessageDigest_ = 
{
  ::acdk::lang::dmi::MiProtected | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "MessageDigest", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  MessageDigest::clazzInfo(), // return type
  "_0_MessageDigest", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_MessageDigest_INLRString__LRMessageDigest__args, // the arguments
  0, //arguments count
  MessageDigest_methods_MessageDigest_INLRString__LRMessageDigest__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_digest__LRbyteArray__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_digest__LRbyteArray__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_digest__LRbyteArray_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "digest", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo(), // return type
  "_2_digest", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_digest__LRbyteArray__args, // the arguments
  0, //arguments count
  MessageDigest_methods_digest__LRbyteArray__exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_digest__LRbyteArray__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_digest_INLRbyteArray_II_I_arg_buf = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buf", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_digest_INLRbyteArray_II_I_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_digest_INLRbyteArray_II_I_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_digest_INLRbyteArray_II_I_args[] = 
{
  &MessageDigest_methods_digest_INLRbyteArray_II_I_arg_buf,
  &MessageDigest_methods_digest_INLRbyteArray_II_I_arg_offset,
  &MessageDigest_methods_digest_INLRbyteArray_II_I_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_digest_INLRbyteArray_II_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_digest_INLRbyteArray_II_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "digest", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_3_digest", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_digest_INLRbyteArray_II_I_args, // the arguments
  0, //arguments count
  MessageDigest_methods_digest_INLRbyteArray_II_I_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_digest_INLRbyteArray_II_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_engineReset__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_engineReset__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_engineReset__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "engineReset", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1_engineReset", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_engineReset__V_args, // the arguments
  0, //arguments count
  MessageDigest_methods_engineReset__V_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_engineReset__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_getAlgorithm__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_getAlgorithm__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_getAlgorithm__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getAlgorithm", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_a_getAlgorithm", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_getAlgorithm__LRString__args, // the arguments
  0, //arguments count
  MessageDigest_methods_getAlgorithm__LRString__exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_getAlgorithm__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_getDigestLength__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_getDigestLength__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_getDigestLength__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getDigestLength", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_4_getDigestLength", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_getDigestLength__I_args, // the arguments
  0, //arguments count
  MessageDigest_methods_getDigestLength__I_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_getDigestLength__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_getInstance_INLRString__LRMessageDigest__arg_algorithm = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "algorithm", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_getInstance_INLRString__LRMessageDigest__args[] = 
{
  &MessageDigest_methods_getInstance_INLRString__LRMessageDigest__arg_algorithm,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_getInstance_INLRString__LRMessageDigest__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_getInstance_INLRString__LRMessageDigest_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getInstance", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMessageDigest::clazzInfo(), // return type
  "_b_getInstance", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_getInstance_INLRString__LRMessageDigest__args, // the arguments
  0, //arguments count
  MessageDigest_methods_getInstance_INLRString__LRMessageDigest__exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_getInstance_INLRString__LRMessageDigest__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_arg_digesta = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "digesta", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_arg_digestb = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "digestb", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_args[] = 
{
  &MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_arg_digesta,
  &MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_arg_digestb,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_isEqual_INLRbyteArray_INLRbyteArray__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "isEqual", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_c_isEqual", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_args, // the arguments
  0, //arguments count
  MessageDigest_methods_isEqual_INLRbyteArray_INLRbyteArray__Z_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_isEqual_INLRbyteArray_INLRbyteArray__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_reset__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_reset__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_reset__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "reset", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_reset", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_reset__V_args, // the arguments
  0, //arguments count
  MessageDigest_methods_reset__V_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_reset__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_d_toString", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_toString__LRString__args, // the arguments
  0, //arguments count
  MessageDigest_methods_toString__LRString__exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_update_B_V_arg_input = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "input", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_update_B_V_args[] = 
{
  &MessageDigest_methods_update_B_V_arg_input,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_update_B_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_update_B_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "update", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_update", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_update_B_V_args, // the arguments
  0, //arguments count
  MessageDigest_methods_update_B_V_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_update_B_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_update_INLRbyteArray_II_V_arg_buf = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buf", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_update_INLRbyteArray_II_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_update_INLRbyteArray_II_V_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_update_INLRbyteArray_II_V_args[] = 
{
  &MessageDigest_methods_update_INLRbyteArray_II_V_arg_buf,
  &MessageDigest_methods_update_INLRbyteArray_II_V_arg_offset,
  &MessageDigest_methods_update_INLRbyteArray_II_V_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_update_INLRbyteArray_II_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_update_INLRbyteArray_II_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "update", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_update", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_update_INLRbyteArray_II_V_args, // the arguments
  0, //arguments count
  MessageDigest_methods_update_INLRbyteArray_II_V_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_update_INLRbyteArray_II_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_update_INLRbyteArray__V_arg_buf = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buf", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_update_INLRbyteArray__V_args[] = 
{
  &MessageDigest_methods_update_INLRbyteArray__V_arg_buf,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_update_INLRbyteArray__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_update_INLRbyteArray__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "update", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_8_update", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_update_INLRbyteArray__V_args, // the arguments
  0, //arguments count
  MessageDigest_methods_update_INLRbyteArray__V_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_update_INLRbyteArray__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_update_INLRbyteArray_I_V_arg_buf = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buf", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigest_methods_update_INLRbyteArray_I_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigest_methods_update_INLRbyteArray_I_V_args[] = 
{
  &MessageDigest_methods_update_INLRbyteArray_I_V_arg_buf,
  &MessageDigest_methods_update_INLRbyteArray_I_V_arg_offset,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest_methods_update_INLRbyteArray_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigest_method_update_INLRbyteArray_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "update", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_9_update", // alternative name of method
  -1, // altlabelHashCode
  MessageDigest_methods_update_INLRbyteArray_I_V_args, // the arguments
  0, //arguments count
  MessageDigest_methods_update_INLRbyteArray_I_V_exceptions, // the declared exceptions
  MessageDigest_MetainfoWrapper::MessageDigest_method_update_INLRbyteArray_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _MessageDigest_methods[] = 
{
  &MessageDigest_method_GetClass__L_acdk_lang_RClass_,
  &MessageDigest_method_MessageDigest_INLRString__LRMessageDigest_,
  &MessageDigest_method_digest__LRbyteArray_,
  &MessageDigest_method_digest_INLRbyteArray_II_I,
  &MessageDigest_method_engineReset__V,
  &MessageDigest_method_getAlgorithm__LRString_,
  &MessageDigest_method_getDigestLength__I,
  &MessageDigest_method_getInstance_INLRString__LRMessageDigest_,
  &MessageDigest_method_isEqual_INLRbyteArray_INLRbyteArray__Z,
  &MessageDigest_method_reset__V,
  &MessageDigest_method_toString__LRString_,
  &MessageDigest_method_update_B_V,
  &MessageDigest_method_update_INLRbyteArray_II_V,
  &MessageDigest_method_update_INLRbyteArray__V,
  &MessageDigest_method_update_INLRbyteArray_I_V,
  0
};


struct MessageDigest_MetaInfoInitializer
{  MessageDigest_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = MessageDigest::clazzInfo();
    ci->fields =  _MessageDigest_fields;
    ci->methods =  _MessageDigest_methods;
    ci->_scopeParent = acdk_security_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
MessageDigest_MetaInfoInitializer MessageDigest_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 


//static
::acdk::lang::RObject
MessageDigestSpi_create_array(int length)
{
  return new ObjectArrayImpl<RMessageDigestSpi>(length);
}

//static
::acdk::lang::RObject
MessageDigestSpi_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class MessageDigestSpi_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigestSpi_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)MessageDigestSpi::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigestSpi_method_engineDigest__LRbyteArray__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigestSpi* This = dmi_cast<MessageDigestSpi>(This_);
    ret = (::acdk::lang::RObject)This->engineDigest();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigestSpi_method_engineDigest_INLRbyteArray_II_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigestSpi* This = dmi_cast<MessageDigestSpi>(This_);
  ret = This->engineDigest(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigestSpi_method_engineGetDigestLength__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigestSpi* This = dmi_cast<MessageDigestSpi>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->MessageDigestSpi::engineGetDigestLength();
    else
      ret = This->engineGetDigestLength();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigestSpi_method_engineReset__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigestSpi* This = dmi_cast<MessageDigestSpi>(This_);
    This->engineReset();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigestSpi_method_engineUpdate_B_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigestSpi* This = dmi_cast<MessageDigestSpi>(This_);
    This->engineUpdate(::acdk::lang::dmi::castTo< byte>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MessageDigestSpi_method_engineUpdate_INLRbyteArray_II_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MessageDigestSpi* This = dmi_cast<MessageDigestSpi>(This_);
    This->engineUpdate(::acdk::lang::dmi::castTo< RbyteArray>(args[0], dc), ::acdk::lang::dmi::castTo< int>(args[1], dc), ::acdk::lang::dmi::castTo< int>(args[2], dc));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _MessageDigestSpi_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_7_GetClass", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  MessageDigestSpi_MetainfoWrapper::MessageDigestSpi_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_MessageDigestSpi__LRMessageDigestSpi__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_MessageDigestSpi__LRMessageDigestSpi__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_MessageDigestSpi__LRMessageDigestSpi_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "MessageDigestSpi", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  MessageDigestSpi::clazzInfo(), // return type
  "_0_MessageDigestSpi", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_MessageDigestSpi__LRMessageDigestSpi__args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_MessageDigestSpi__LRMessageDigestSpi__exceptions, // the declared exceptions
  0, // this method cannot be invoked because abstract
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_engineDigest__LRbyteArray__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_engineDigest__LRbyteArray__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_engineDigest__LRbyteArray_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "engineDigest", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo(), // return type
  "_1_engineDigest", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_engineDigest__LRbyteArray__args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_engineDigest__LRbyteArray__exceptions, // the declared exceptions
  MessageDigestSpi_MetainfoWrapper::MessageDigestSpi_method_engineDigest__LRbyteArray__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_arg_buf = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buf", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_args[] = 
{
  &MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_arg_buf,
  &MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_arg_offset,
  &MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_engineDigest_INLRbyteArray_II_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "engineDigest", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_2_engineDigest", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_engineDigest_INLRbyteArray_II_I_exceptions, // the declared exceptions
  MessageDigestSpi_MetainfoWrapper::MessageDigestSpi_method_engineDigest_INLRbyteArray_II_I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_engineGetDigestLength__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_engineGetDigestLength__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_engineGetDigestLength__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "engineGetDigestLength", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_3_engineGetDigestLength", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_engineGetDigestLength__I_args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_engineGetDigestLength__I_exceptions, // the declared exceptions
  MessageDigestSpi_MetainfoWrapper::MessageDigestSpi_method_engineGetDigestLength__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_engineReset__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_engineReset__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_engineReset__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "engineReset", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_engineReset", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_engineReset__V_args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_engineReset__V_exceptions, // the declared exceptions
  MessageDigestSpi_MetainfoWrapper::MessageDigestSpi_method_engineReset__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigestSpi_methods_engineUpdate_B_V_arg_input = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "input", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_engineUpdate_B_V_args[] = 
{
  &MessageDigestSpi_methods_engineUpdate_B_V_arg_input,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_engineUpdate_B_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_engineUpdate_B_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "engineUpdate", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_5_engineUpdate", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_engineUpdate_B_V_args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_engineUpdate_B_V_exceptions, // the declared exceptions
  MessageDigestSpi_MetainfoWrapper::MessageDigestSpi_method_engineUpdate_B_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_arg_buf = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "buf", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RbyteArray::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_arg_offset = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "offset", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_arg_len = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "len", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_args[] = 
{
  &MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_arg_buf,
  &MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_arg_offset,
  &MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_arg_len,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MessageDigestSpi_method_engineUpdate_INLRbyteArray_II_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "engineUpdate", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_engineUpdate", // alternative name of method
  -1, // altlabelHashCode
  MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_args, // the arguments
  0, //arguments count
  MessageDigestSpi_methods_engineUpdate_INLRbyteArray_II_V_exceptions, // the declared exceptions
  MessageDigestSpi_MetainfoWrapper::MessageDigestSpi_method_engineUpdate_INLRbyteArray_II_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _MessageDigestSpi_methods[] = 
{
  &MessageDigestSpi_method_GetClass__L_acdk_lang_RClass_,
  &MessageDigestSpi_method_MessageDigestSpi__LRMessageDigestSpi_,
  &MessageDigestSpi_method_engineDigest__LRbyteArray_,
  &MessageDigestSpi_method_engineDigest_INLRbyteArray_II_I,
  &MessageDigestSpi_method_engineGetDigestLength__I,
  &MessageDigestSpi_method_engineReset__V,
  &MessageDigestSpi_method_engineUpdate_B_V,
  &MessageDigestSpi_method_engineUpdate_INLRbyteArray_II_V,
  0
};


struct MessageDigestSpi_MetaInfoInitializer
{  MessageDigestSpi_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = MessageDigestSpi::clazzInfo();
    ci->fields =  _MessageDigestSpi_fields;
    ci->methods =  _MessageDigestSpi_methods;
    ci->_scopeParent = acdk_security_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
MessageDigestSpi_MetaInfoInitializer MessageDigestSpi_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 


//static
::acdk::lang::RObject
NoSuchAlgorithmException_create_array(int length)
{
  return new ObjectArrayImpl<RNoSuchAlgorithmException>(length);
}

//static
::acdk::lang::RObject
NoSuchAlgorithmException_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class NoSuchAlgorithmException_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  NoSuchAlgorithmException_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)NoSuchAlgorithmException::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  NoSuchAlgorithmException_method_NoSuchAlgorithmException__LRNoSuchAlgorithmException__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new NoSuchAlgorithmException();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  NoSuchAlgorithmException_method_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new NoSuchAlgorithmException(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
};


void ThrowException_NoSuchAlgorithmException(IN(::acdk::lang::RThrowable) ex)
{
  throw RNoSuchAlgorithmException(ex);
}

::acdk::lang::dmi::ClazzFieldInfo* _NoSuchAlgorithmException_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* NoSuchAlgorithmException_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* NoSuchAlgorithmException_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo NoSuchAlgorithmException_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  NoSuchAlgorithmException_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  NoSuchAlgorithmException_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  NoSuchAlgorithmException_MetainfoWrapper::NoSuchAlgorithmException_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* NoSuchAlgorithmException_methods_NoSuchAlgorithmException__LRNoSuchAlgorithmException__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* NoSuchAlgorithmException_methods_NoSuchAlgorithmException__LRNoSuchAlgorithmException__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo NoSuchAlgorithmException_method_NoSuchAlgorithmException__LRNoSuchAlgorithmException_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "NoSuchAlgorithmException", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  NoSuchAlgorithmException::clazzInfo(), // return type
  "_0_NoSuchAlgorithmException", // alternative name of method
  -1, // altlabelHashCode
  NoSuchAlgorithmException_methods_NoSuchAlgorithmException__LRNoSuchAlgorithmException__args, // the arguments
  0, //arguments count
  NoSuchAlgorithmException_methods_NoSuchAlgorithmException__LRNoSuchAlgorithmException__exceptions, // the declared exceptions
  NoSuchAlgorithmException_MetainfoWrapper::NoSuchAlgorithmException_method_NoSuchAlgorithmException__LRNoSuchAlgorithmException__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo NoSuchAlgorithmException_methods_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__arg_what = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "what", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* NoSuchAlgorithmException_methods_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__args[] = 
{
  &NoSuchAlgorithmException_methods_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__arg_what,
  0
};

::acdk::lang::dmi::ClazzInfo* NoSuchAlgorithmException_methods_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo NoSuchAlgorithmException_method_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "NoSuchAlgorithmException", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  NoSuchAlgorithmException::clazzInfo(), // return type
  "_1_NoSuchAlgorithmException", // alternative name of method
  -1, // altlabelHashCode
  NoSuchAlgorithmException_methods_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__args, // the arguments
  0, //arguments count
  NoSuchAlgorithmException_methods_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__exceptions, // the declared exceptions
  NoSuchAlgorithmException_MetainfoWrapper::NoSuchAlgorithmException_method_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _NoSuchAlgorithmException_methods[] = 
{
  &NoSuchAlgorithmException_method_GetClass__L_acdk_lang_RClass_,
  &NoSuchAlgorithmException_method_NoSuchAlgorithmException__LRNoSuchAlgorithmException_,
  &NoSuchAlgorithmException_method_NoSuchAlgorithmException_INLRString__LRNoSuchAlgorithmException_,
  0
};


struct NoSuchAlgorithmException_MetaInfoInitializer
{  NoSuchAlgorithmException_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = NoSuchAlgorithmException::clazzInfo();
    ci->fields =  _NoSuchAlgorithmException_fields;
    ci->methods =  _NoSuchAlgorithmException_methods;
    ci->_scopeParent = acdk_security_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
NoSuchAlgorithmException_MetaInfoInitializer NoSuchAlgorithmException_MetaInfoInitializer_staticinstance__;


struct NoSuchAlgorithmException_clazzInfo_ClazzAttributesResInitializer3
{
  NoSuchAlgorithmException_clazzInfo_ClazzAttributesResInitializer3()
  {
    ::acdk::lang::dmi::ClazzAttributesRes::attachAttribute((::acdk::lang::dmi::MetaInfo*)NoSuchAlgorithmException::clazzInfo(), "__throwExceptionFunc", ::acdk::lang::dmi::ClazzAttributeResValue(0xFFFF, (void*)&ThrowException_NoSuchAlgorithmException));
  }
};

NoSuchAlgorithmException_clazzInfo_ClazzAttributesResInitializer3 NoSuchAlgorithmException_clazzInfo_ClazzAttributesResInitializer3_instance;



} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
SHAMessageDigest_create_array(int length)
{
  return new ObjectArrayImpl<RSHAMessageDigest>(length);
}

//static
::acdk::lang::RObject
SHAMessageDigest_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class SHAMessageDigest_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  SHAMessageDigest_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)SHAMessageDigest::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  SHAMessageDigest_method_SHAMessageDigest__LRSHAMessageDigest__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new SHAMessageDigest();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  SHAMessageDigest_method__final__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    SHAMessageDigest* This = dmi_cast<SHAMessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->SHAMessageDigest::_final();
    else
        This->_final();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  SHAMessageDigest_method__init__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    SHAMessageDigest* This = dmi_cast<SHAMessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->SHAMessageDigest::_init();
    else
        This->_init();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  SHAMessageDigest_method__transform__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    SHAMessageDigest* This = dmi_cast<SHAMessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->SHAMessageDigest::_transform();
    else
        This->_transform();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  SHAMessageDigest_fields__count_hi_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    SHAMessageDigest* This = dmi_cast<SHAMessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_count_hi, flags);
    else
      This->_count_hi = ::acdk::lang::dmi::castTo< int>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  SHAMessageDigest_fields__count_lo_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    SHAMessageDigest* This = dmi_cast<SHAMessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_count_lo, flags);
    else
      This->_count_lo = ::acdk::lang::dmi::castTo< int>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  SHAMessageDigest_fields__local_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    SHAMessageDigest* This = dmi_cast<SHAMessageDigest>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_local, flags);
    else
      This->_local = ::acdk::lang::dmi::castTo< int>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo SHAMessageDigest_fields__count_hi = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_count_hi", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_fields__count_hi_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo SHAMessageDigest_fields__count_lo = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_count_lo", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_fields__count_lo_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo SHAMessageDigest_fields__local = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_local", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_fields__local_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _SHAMessageDigest_fields[] = 
{
  &SHAMessageDigest_fields__count_hi,
  &SHAMessageDigest_fields__count_lo,
  &SHAMessageDigest_fields__local,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* SHAMessageDigest_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* SHAMessageDigest_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo SHAMessageDigest_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_4_GetClass", // alternative name of method
  -1, // altlabelHashCode
  SHAMessageDigest_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  SHAMessageDigest_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* SHAMessageDigest_methods_SHAMessageDigest__LRSHAMessageDigest__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* SHAMessageDigest_methods_SHAMessageDigest__LRSHAMessageDigest__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo SHAMessageDigest_method_SHAMessageDigest__LRSHAMessageDigest_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "SHAMessageDigest", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  SHAMessageDigest::clazzInfo(), // return type
  "_0_SHAMessageDigest", // alternative name of method
  -1, // altlabelHashCode
  SHAMessageDigest_methods_SHAMessageDigest__LRSHAMessageDigest__args, // the arguments
  0, //arguments count
  SHAMessageDigest_methods_SHAMessageDigest__LRSHAMessageDigest__exceptions, // the declared exceptions
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_method_SHAMessageDigest__LRSHAMessageDigest__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* SHAMessageDigest_methods__final__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* SHAMessageDigest_methods__final__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo SHAMessageDigest_method__final__V = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_final", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_2__final", // alternative name of method
  -1, // altlabelHashCode
  SHAMessageDigest_methods__final__V_args, // the arguments
  0, //arguments count
  SHAMessageDigest_methods__final__V_exceptions, // the declared exceptions
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_method__final__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* SHAMessageDigest_methods__init__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* SHAMessageDigest_methods__init__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo SHAMessageDigest_method__init__V = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_init", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1__init", // alternative name of method
  -1, // altlabelHashCode
  SHAMessageDigest_methods__init__V_args, // the arguments
  0, //arguments count
  SHAMessageDigest_methods__init__V_exceptions, // the declared exceptions
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_method__init__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* SHAMessageDigest_methods__transform__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* SHAMessageDigest_methods__transform__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo SHAMessageDigest_method__transform__V = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "_transform", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3__transform", // alternative name of method
  -1, // altlabelHashCode
  SHAMessageDigest_methods__transform__V_args, // the arguments
  0, //arguments count
  SHAMessageDigest_methods__transform__V_exceptions, // the declared exceptions
  SHAMessageDigest_MetainfoWrapper::SHAMessageDigest_method__transform__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _SHAMessageDigest_methods[] = 
{
  &SHAMessageDigest_method_GetClass__L_acdk_lang_RClass_,
  &SHAMessageDigest_method_SHAMessageDigest__LRSHAMessageDigest_,
  &SHAMessageDigest_method__final__V,
  &SHAMessageDigest_method__init__V,
  &SHAMessageDigest_method__transform__V,
  0
};


struct SHAMessageDigest_MetaInfoInitializer
{  SHAMessageDigest_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = SHAMessageDigest::clazzInfo();
    ci->fields =  _SHAMessageDigest_fields;
    ci->methods =  _SHAMessageDigest_methods;
    ci->_scopeParent = acdk_security_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
SHAMessageDigest_MetaInfoInitializer SHAMessageDigest_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace security


#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) security_dummyExportFunc() {}
#endif

