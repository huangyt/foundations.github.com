// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "GeneralSecurityException.h"
#include "MessageDigest.h"
#include "MessageDigestSpi.h"
#include "NoSuchAlgorithmException.h"
#include "security.h"
#include "SHAMessageDigest.h"

namespace acdk { 
namespace security { 

::acdk::lang::dmi::ClazzSuperInfo _GeneralSecurityException_super_acdk__lang__Exception =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Exception::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _GeneralSecurityException_interfaces[] =
{
  &_GeneralSecurityException_super_acdk__lang__Exception,
  0
};

::acdk::lang::dmi::ClazzInfo* GeneralSecurityException::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "GeneralSecurityException", // name of class
  -1, // hashCode
  "acdk/security", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _GeneralSecurityException_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    GeneralSecurityException::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_GeneralSecurityException(GeneralSecurityException::clazzInfo());

::acdk::lang::RClass
GeneralSecurityException::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
GeneralSecurityException::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Exception)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _MessageDigest_super_MessageDigestSpi =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MessageDigestSpi::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _MessageDigest_super_acdk__lang__Cloneable =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  acdk::lang::Cloneable::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MessageDigest_interfaces[] =
{
  &_MessageDigest_super_MessageDigestSpi,
  &_MessageDigest_super_acdk__lang__Cloneable,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigest::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "MessageDigest", // name of class
  -1, // hashCode
  "acdk/security", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _MessageDigest_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    MessageDigest::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_MessageDigest(MessageDigest::clazzInfo());

::acdk::lang::RClass
MessageDigest::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
MessageDigest::getCollectableFields(FieldReferences& fields)
{
  MessageDigestSpi::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_algorithm._ref_this()); // RString _algorithm 
}


} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 

::acdk::lang::dmi::ClazzSuperInfo _MessageDigestSpi_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MessageDigestSpi_interfaces[] =
{
  &_MessageDigestSpi_super_acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* MessageDigestSpi::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "MessageDigestSpi", // name of class
  -1, // hashCode
  "acdk/security", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _MessageDigestSpi_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    MessageDigestSpi::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_MessageDigestSpi(MessageDigestSpi::clazzInfo());

::acdk::lang::RClass
MessageDigestSpi::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
MessageDigestSpi::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 

::acdk::lang::dmi::ClazzSuperInfo _NoSuchAlgorithmException_super_GeneralSecurityException =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  GeneralSecurityException::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _NoSuchAlgorithmException_interfaces[] =
{
  &_NoSuchAlgorithmException_super_GeneralSecurityException,
  0
};

::acdk::lang::dmi::ClazzInfo* NoSuchAlgorithmException::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "NoSuchAlgorithmException", // name of class
  -1, // hashCode
  "acdk/security", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _NoSuchAlgorithmException_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    NoSuchAlgorithmException::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_NoSuchAlgorithmException(NoSuchAlgorithmException::clazzInfo());

::acdk::lang::RClass
NoSuchAlgorithmException::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
NoSuchAlgorithmException::getCollectableFields(FieldReferences& fields)
{
  GeneralSecurityException::getCollectableFields(fields);
}


} // namespace acdk
} // namespace security


namespace acdk { 
namespace security { 

using namespace acdk::lang;
::acdk::lang::dmi::ClazzSuperInfo _SHAMessageDigest_super_MessageDigest =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MessageDigest::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _SHAMessageDigest_interfaces[] =
{
  &_SHAMessageDigest_super_MessageDigest,
  0
};

::acdk::lang::dmi::ClazzInfo* SHAMessageDigest::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "SHAMessageDigest", // name of class
  -1, // hashCode
  "acdk/security", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _SHAMessageDigest_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    SHAMessageDigest::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_SHAMessageDigest(SHAMessageDigest::clazzInfo());

::acdk::lang::RClass
SHAMessageDigest::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
SHAMessageDigest::getCollectableFields(FieldReferences& fields)
{
  MessageDigest::getCollectableFields(fields);
}


} // namespace acdk
} // namespace security

