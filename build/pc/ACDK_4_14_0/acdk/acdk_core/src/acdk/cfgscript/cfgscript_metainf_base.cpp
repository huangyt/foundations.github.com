// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "cfgscript.h"
#include "ChDir.h"
#include "Config.h"
#include "ExecutionStack.h"
#include "Props.h"
#include "Script.h"
#include "ScriptClassLoader.h"
#include "ScriptDebug.h"
#include "ScriptEval.h"
#include "ScriptException.h"
#include "ScriptExpr.h"
#include "ScriptGlobals.h"
#include "ScriptObject.h"
#include "ScriptSource.h"
#include "ShellExecutor.h"
#include "SourceTokenizer.h"

namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgRun = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgRun", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgRun, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgBreakStatements = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgBreakStatements", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgBreakStatements, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgStepInto = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgStepInto", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgStepInto, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgContinue = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgContinue", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgContinue, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgPrintEachLine = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgPrintEachLine", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgPrintEachLine, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgBreakOnExecption = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgBreakOnExecption", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgBreakOnExecption, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgBreakOnFail = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgBreakOnFail", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgBreakOnFail, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgSysTraceOn = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgSysTraceOn", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgSysTraceOn, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgStepOverNextStmt = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgStepOverNextStmt", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgStepOverNextStmt, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgExitAll = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgExitAll", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgExitAll, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugFlags_DbgScriptRunIsolated = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgScriptRunIsolated", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgScriptRunIsolated, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* DebugFlags_enumValues[] = {
  &DebugFlags_DbgRun,
  &DebugFlags_DbgBreakStatements,
  &DebugFlags_DbgStepInto,
  &DebugFlags_DbgContinue,
  &DebugFlags_DbgPrintEachLine,
  &DebugFlags_DbgBreakOnExecption,
  &DebugFlags_DbgBreakOnFail,
  &DebugFlags_DbgSysTraceOn,
  &DebugFlags_DbgStepOverNextStmt,
  &DebugFlags_DbgExitAll,
  &DebugFlags_DbgScriptRunIsolated,
0
};

::acdk::lang::dmi::ClazzEnumInfo* DebugFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo DebugFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "DebugFlags", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  DebugFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_DebugFlags(&DebugFlags_enumInfo);

  return &DebugFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_DebugFlagsEnumInfo(DebugFlagsMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ExecutionStackFrame_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _ExecutionStackFrame_super_acdk__lang__StackFrame =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  acdk::lang::StackFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ExecutionStackFrame_interfaces[] =
{
  &_ExecutionStackFrame_super_acdk__lang__Object,
  &_ExecutionStackFrame_super_acdk__lang__StackFrame,
  0
};

::acdk::lang::dmi::ClazzInfo* ExecutionStackFrame::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiNoDmiProxy, // clazz-flags
  0, //AttributesRes
  "ExecutionStackFrame", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ExecutionStackFrame_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 3, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ExecutionStackFrame::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ExecutionStackFrame(ExecutionStackFrame::clazzInfo());

::acdk::lang::RClass
ExecutionStackFrame::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ExecutionStackFrame::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_frameProps._ref_this()); // RProps _frameProps 
  fields.push_back((::acdk::lang::RObject*)this->_scopeProps._ref_this()); // RProps _scopeProps 
  fields.push_back((::acdk::lang::RObject*)this->_script._ref_this()); // RScript _script 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ExecutionStack_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _ExecutionStack_super_acdk__lang__dmi__MetaObjectListener =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  acdk::lang::dmi::MetaObjectListener::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ExecutionStack_interfaces[] =
{
  &_ExecutionStack_super_acdk__lang__Object,
  &_ExecutionStack_super_acdk__lang__dmi__MetaObjectListener,
  0
};

::acdk::lang::dmi::ClazzInfo* ExecutionStack::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiNoDmiProxy, // clazz-flags
  0, //AttributesRes
  "ExecutionStack", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ExecutionStack_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 3, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ExecutionStack::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ExecutionStack(ExecutionStack::clazzInfo());

::acdk::lang::RClass
ExecutionStack::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ExecutionStack::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_executeStack._ref_this()); // RExecutionStackFrameArray _executeStack 
  fields.push_back((::acdk::lang::RObject*)this->_nullFrame._ref_this()); // RExecutionStackFrame _nullFrame 
  fields.push_back((::acdk::lang::RObject*)this->_registeredMetaInfo._ref_this()); // acdk::lang::dmi::RMetaObjectArray _registeredMetaInfo 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsNoFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsNoFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsNoFlags, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsParentRead = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsParentRead", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsParentRead, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsNoParentRead = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsNoParentRead", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsNoParentRead, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsParentWrite = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsParentWrite", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsParentWrite, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsNoParentWrite = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsNoParentWrite", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsNoParentWrite, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsWarnRead = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsWarnRead", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsWarnRead, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsNoWarnRead = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsNoWarnRead", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsNoWarnRead, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsWarnWrite = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsWarnWrite", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsWarnWrite, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsNoWarnWrite = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsNoWarnWrite", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsNoWarnWrite, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsAppendPushFront = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsAppendPushFront", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsAppendPushFront, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsNoStringDups = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsNoStringDups", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsNoStringDups, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsDefaultSetFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsDefaultSetFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsDefaultSetFlags, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsDefaultAppendStringArrayFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsDefaultAppendStringArrayFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsDefaultAppendStringArrayFlags, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsEvalQuoteFileNameArgs = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsEvalQuoteFileNameArgs", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsEvalQuoteFileNameArgs, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsEvalRecursive = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsEvalRecursive", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsEvalRecursive, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsEvalDefault = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsEvalDefault", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsEvalDefault, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsMergeWithParent = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsMergeWithParent", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsMergeWithParent, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsMergeOverWrite = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsMergeOverWrite", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsMergeOverWrite, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsMergeAppendArrays = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsMergeAppendArrays", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsMergeAppendArrays, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropsFlags_PropsMergeDefault = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropsMergeDefault", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropsMergeDefault, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* PropsFlags_enumValues[] = {
  &PropsFlags_PropsNoFlags,
  &PropsFlags_PropsParentRead,
  &PropsFlags_PropsNoParentRead,
  &PropsFlags_PropsParentWrite,
  &PropsFlags_PropsNoParentWrite,
  &PropsFlags_PropsWarnRead,
  &PropsFlags_PropsNoWarnRead,
  &PropsFlags_PropsWarnWrite,
  &PropsFlags_PropsNoWarnWrite,
  &PropsFlags_PropsAppendPushFront,
  &PropsFlags_PropsNoStringDups,
  &PropsFlags_PropsDefaultSetFlags,
  &PropsFlags_PropsDefaultAppendStringArrayFlags,
  &PropsFlags_PropsEvalQuoteFileNameArgs,
  &PropsFlags_PropsEvalRecursive,
  &PropsFlags_PropsEvalDefault,
  &PropsFlags_PropsMergeWithParent,
  &PropsFlags_PropsMergeOverWrite,
  &PropsFlags_PropsMergeAppendArrays,
  &PropsFlags_PropsMergeDefault,
0
};

::acdk::lang::dmi::ClazzEnumInfo* PropsFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo PropsFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "PropsFlags", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  PropsFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_PropsFlags(&PropsFlags_enumInfo);

  return &PropsFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_PropsFlagsEnumInfo(PropsFlagsMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo PropChangeEvents_PropEventValueWrite = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropEventValueWrite", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropEventValueWrite, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropChangeEvents_PropEventCreate = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropEventCreate", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropEventCreate, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropChangeEvents_PropEventAssign = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropEventAssign", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropEventAssign, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo PropChangeEvents_PropEventRemoveKey = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "PropEventRemoveKey", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::PropEventRemoveKey, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* PropChangeEvents_enumValues[] = {
  &PropChangeEvents_PropEventValueWrite,
  &PropChangeEvents_PropEventCreate,
  &PropChangeEvents_PropEventAssign,
  &PropChangeEvents_PropEventRemoveKey,
0
};

::acdk::lang::dmi::ClazzEnumInfo* PropChangeEventsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo PropChangeEvents_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "PropChangeEvents", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  PropChangeEvents_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_PropChangeEvents(&PropChangeEvents_enumInfo);

  return &PropChangeEvents_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_PropChangeEventsEnumInfo(PropChangeEventsMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo DumpFlags_DumpWithParent = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DumpWithParent", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DumpWithParent, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DumpFlags_DumpWithChilds = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DumpWithChilds", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DumpWithChilds, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* DumpFlags_enumValues[] = {
  &DumpFlags_DumpWithParent,
  &DumpFlags_DumpWithChilds,
0
};

::acdk::lang::dmi::ClazzEnumInfo* DumpFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo DumpFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "DumpFlags", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  DumpFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_DumpFlags(&DumpFlags_enumInfo);

  return &DumpFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_DumpFlagsEnumInfo(DumpFlagsMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo* _PropsChangeListener_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* PropsChangeListener::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "PropsChangeListener", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _PropsChangeListener_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    PropsChangeListener::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_PropsChangeListener(PropsChangeListener::clazzInfo());

::acdk::lang::RClass
PropsChangeListener::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
PropsChangeListener::getCollectableFields(FieldReferences& fields)
{
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _Props_super___acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _Props_super___acdk__lang__Cloneable =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  ::acdk::lang::Cloneable::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Props_interfaces[] =
{
  &_Props_super___acdk__lang__Object,
  &_Props_super___acdk__lang__Cloneable,
  0
};

::acdk::lang::dmi::ClazzInfo* Props::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiWeakBind, // clazz-flags
  0, //AttributesRes
  "Props", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Props_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 4, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Props::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Props(Props::clazzInfo());

::acdk::lang::RClass
Props::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Props::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_curHeap._ref_this()); // RHashMap _curHeap 
  fields.push_back((::acdk::lang::RObject*)this->_listeners._ref_this()); // RPropsChangeListenerArray _listeners 
  fields.push_back((::acdk::lang::RObject*)this->_name._ref_this()); // RString _name 
  fields.push_back((::acdk::lang::RObject*)this->_parents._ref_this()); // RPropsArray _parents 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo ScriptFlags_ScriptReadParent = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ScriptReadParent", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::ScriptReadParent, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ScriptFlags_ScriptWriteParent = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ScriptWriteParent", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::ScriptWriteParent, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ScriptFlags_ScriptReadWriteParent = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ScriptReadWriteParent", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::ScriptReadWriteParent, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ScriptFlags_ScriptNoDefaultProps = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ScriptNoDefaultProps", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::ScriptNoDefaultProps, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ScriptFlags_ScriptDefaultFlags = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ScriptDefaultFlags", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::ScriptDefaultFlags, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ScriptFlags_ScriptRunIsolated = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "ScriptRunIsolated", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::ScriptRunIsolated, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* ScriptFlags_enumValues[] = {
  &ScriptFlags_ScriptReadParent,
  &ScriptFlags_ScriptWriteParent,
  &ScriptFlags_ScriptReadWriteParent,
  &ScriptFlags_ScriptNoDefaultProps,
  &ScriptFlags_ScriptDefaultFlags,
  &ScriptFlags_ScriptRunIsolated,
0
};

::acdk::lang::dmi::ClazzEnumInfo* ScriptFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo ScriptFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "ScriptFlags", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  ScriptFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_ScriptFlags(&ScriptFlags_enumInfo);

  return &ScriptFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_ScriptFlagsEnumInfo(ScriptFlagsMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _Script_super___acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Script_interfaces[] =
{
  &_Script_super___acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* Script::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiNoDmiProxy, // clazz-flags
  0, //AttributesRes
  "Script", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Script_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 5, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Script::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Script(Script::clazzInfo());

::acdk::lang::RClass
Script::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Script::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_alreadyIncluded._ref_this()); // RStringArray _alreadyIncluded 
  fields.push_back((::acdk::lang::RObject*)this->_filename._ref_this()); // RString _filename 
  fields.push_back((::acdk::lang::RObject*)this->_parentScript._ref_this()); // RScript _parentScript 
  fields.push_back((::acdk::lang::RObject*)this->_tokenized._ref_this()); // RTokenizedSource _tokenized 
  fields.push_back((::acdk::lang::RObject*)this->currentProps._ref_this()); // RProps currentProps 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ScriptClassLoader_super___acdk__lang__ClassLoader =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ::acdk::lang::ClassLoader::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ScriptClassLoader_interfaces[] =
{
  &_ScriptClassLoader_super___acdk__lang__ClassLoader,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptClassLoader::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "ScriptClassLoader", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ScriptClassLoader_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ScriptClassLoader::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ScriptClassLoader(ScriptClassLoader::clazzInfo());

::acdk::lang::RClass
ScriptClassLoader::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ScriptClassLoader::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, ClassLoader)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo DebugRunAction_DRANextStatement = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DRANextStatement", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DRANextStatement, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugRunAction_DRAEnterFunction = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DRAEnterFunction", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DRAEnterFunction, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugRunAction_DRAThrowException = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DRAThrowException", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DRAThrowException, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugRunAction_DRAReEnterFunction = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DRAReEnterFunction", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DRAReEnterFunction, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* DebugRunAction_enumValues[] = {
  &DebugRunAction_DRANextStatement,
  &DebugRunAction_DRAEnterFunction,
  &DebugRunAction_DRAThrowException,
  &DebugRunAction_DRAReEnterFunction,
0
};

::acdk::lang::dmi::ClazzEnumInfo* DebugRunActionMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo DebugRunAction_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "DebugRunAction", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  DebugRunAction_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_DebugRunAction(&DebugRunAction_enumInfo);

  return &DebugRunAction_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_DebugRunActionEnumInfo(DebugRunActionMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo DebugNextAction_DbgNAContinue = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgNAContinue", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgNAContinue, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugNextAction_DbgNAStepOver = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgNAStepOver", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgNAStepOver, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugNextAction_DbgNAStepInto = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgNAStepInto", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgNAStepInto, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugNextAction_DbgNAUntilReturn = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgNAUntilReturn", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgNAUntilReturn, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugNextAction_DbgNANoThrow = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgNANoThrow", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgNANoThrow, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo DebugNextAction_DbgTerminate = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "DbgTerminate", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::DbgTerminate, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* DebugNextAction_enumValues[] = {
  &DebugNextAction_DbgNAContinue,
  &DebugNextAction_DbgNAStepOver,
  &DebugNextAction_DbgNAStepInto,
  &DebugNextAction_DbgNAUntilReturn,
  &DebugNextAction_DbgNANoThrow,
  &DebugNextAction_DbgTerminate,
0
};

::acdk::lang::dmi::ClazzEnumInfo* DebugNextActionMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo DebugNextAction_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "DebugNextAction", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  DebugNextAction_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_DebugNextAction(&DebugNextAction_enumInfo);

  return &DebugNextAction_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_DebugNextActionEnumInfo(DebugNextActionMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _DebugPoint_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DebugPoint_interfaces[] =
{
  &_DebugPoint_super_acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* DebugPoint::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "DebugPoint", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DebugPoint_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DebugPoint::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DebugPoint(DebugPoint::clazzInfo());

::acdk::lang::RClass
DebugPoint::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DebugPoint::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _FunctionEnterDebugPoint_super_DebugPoint =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DebugPoint::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FunctionEnterDebugPoint_interfaces[] =
{
  &_FunctionEnterDebugPoint_super_DebugPoint,
  0
};

::acdk::lang::dmi::ClazzInfo* FunctionEnterDebugPoint::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "FunctionEnterDebugPoint", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _FunctionEnterDebugPoint_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    FunctionEnterDebugPoint::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_FunctionEnterDebugPoint(FunctionEnterDebugPoint::clazzInfo());

::acdk::lang::RClass
FunctionEnterDebugPoint::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
FunctionEnterDebugPoint::getCollectableFields(FieldReferences& fields)
{
  DebugPoint::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_functionName._ref_this()); // RString _functionName 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _SourceLineDebugPoint_super_DebugPoint =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DebugPoint::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _SourceLineDebugPoint_interfaces[] =
{
  &_SourceLineDebugPoint_super_DebugPoint,
  0
};

::acdk::lang::dmi::ClazzInfo* SourceLineDebugPoint::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "SourceLineDebugPoint", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _SourceLineDebugPoint_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    SourceLineDebugPoint::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_SourceLineDebugPoint(SourceLineDebugPoint::clazzInfo());

::acdk::lang::RClass
SourceLineDebugPoint::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
SourceLineDebugPoint::getCollectableFields(FieldReferences& fields)
{
  DebugPoint::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_sourceName._ref_this()); // RString _sourceName 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ThrowExceptionDebugPoint_super_DebugPoint =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DebugPoint::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _ThrowExceptionDebugPoint_super_ThrowListener =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  ThrowListener::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ThrowExceptionDebugPoint_interfaces[] =
{
  &_ThrowExceptionDebugPoint_super_DebugPoint,
  &_ThrowExceptionDebugPoint_super_ThrowListener,
  0
};

::acdk::lang::dmi::ClazzInfo* ThrowExceptionDebugPoint::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "ThrowExceptionDebugPoint", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ThrowExceptionDebugPoint_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ThrowExceptionDebugPoint::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ThrowExceptionDebugPoint(ThrowExceptionDebugPoint::clazzInfo());

::acdk::lang::RClass
ThrowExceptionDebugPoint::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ThrowExceptionDebugPoint::getCollectableFields(FieldReferences& fields)
{
  DebugPoint::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_exceptionName._ref_this()); // RString _exceptionName 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _WalkDebugPoint_super_DebugPoint =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DebugPoint::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _WalkDebugPoint_interfaces[] =
{
  &_WalkDebugPoint_super_DebugPoint,
  0
};

::acdk::lang::dmi::ClazzInfo* WalkDebugPoint::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "WalkDebugPoint", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _WalkDebugPoint_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 1, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    WalkDebugPoint::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_WalkDebugPoint(WalkDebugPoint::clazzInfo());

::acdk::lang::RClass
WalkDebugPoint::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
WalkDebugPoint::getCollectableFields(FieldReferences& fields)
{
  DebugPoint::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_frame._ref_this()); // RExecutionStackFrame _frame 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo* _Debugger_interfaces[] =
{
  0
};

::acdk::lang::dmi::ClazzInfo* Debugger::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiAbstract, // clazz-flags
  0, //AttributesRes
  "Debugger", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _Debugger_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    Debugger::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_Debugger(Debugger::clazzInfo());

::acdk::lang::RClass
Debugger::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
Debugger::getCollectableFields(FieldReferences& fields)
{
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ConsoleDebugger_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _ConsoleDebugger_super_Debugger =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  Debugger::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ConsoleDebugger_interfaces[] =
{
  &_ConsoleDebugger_super_acdk__lang__Object,
  &_ConsoleDebugger_super_Debugger,
  0
};

::acdk::lang::dmi::ClazzInfo* ConsoleDebugger::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "ConsoleDebugger", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ConsoleDebugger_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ConsoleDebugger::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ConsoleDebugger(ConsoleDebugger::clazzInfo());

::acdk::lang::RClass
ConsoleDebugger::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ConsoleDebugger::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _DebugBreakPoints_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DebugBreakPoints_interfaces[] =
{
  &_DebugBreakPoints_super_acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* DebugBreakPoints::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiNoDmiProxy, // clazz-flags
  0, //AttributesRes
  "DebugBreakPoints", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _DebugBreakPoints_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 2, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    DebugBreakPoints::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_DebugBreakPoints(DebugBreakPoints::clazzInfo());

::acdk::lang::RClass
DebugBreakPoints::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
DebugBreakPoints::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_debugPoints._ref_this()); // RDebugPointArray _debugPoints 
  fields.push_back((::acdk::lang::RObject*)this->_debugger._ref_this()); // RDebugger _debugger 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ScriptException_super___acdk__lang__DmiException =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ::acdk::lang::DmiException::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ScriptException_interfaces[] =
{
  &_ScriptException_super___acdk__lang__DmiException,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptException::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "ScriptException", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ScriptException_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ScriptException::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ScriptException(ScriptException::clazzInfo());

::acdk::lang::RClass
ScriptException::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ScriptException::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, DmiException)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ScriptGlobals_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ScriptGlobals_interfaces[] =
{
  &_ScriptGlobals_super_acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptGlobals::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "ScriptGlobals", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ScriptGlobals_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 0, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ScriptGlobals::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ScriptGlobals(ScriptGlobals::clazzInfo());

::acdk::lang::RClass
ScriptGlobals::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ScriptGlobals::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ScriptSource_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _ScriptSource_super_acdk__io__PushbackCharReader =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  acdk::io::PushbackCharReader::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo _ScriptSource_super_acdk__io__LineNumberCharReader =
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiCiInterface | ::acdk::lang::dmi::MiCiThrowable,
  0, //AttributesRes
  acdk::io::LineNumberCharReader::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ScriptSource_interfaces[] =
{
  &_ScriptSource_super_acdk__lang__Object,
  &_ScriptSource_super_acdk__io__PushbackCharReader,
  &_ScriptSource_super_acdk__io__LineNumberCharReader,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptSource::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiNoDmiProxy, // clazz-flags
  0, //AttributesRes
  "ScriptSource", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ScriptSource_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 3, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ScriptSource::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ScriptSource(ScriptSource::clazzInfo());

::acdk::lang::RClass
ScriptSource::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ScriptSource::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_buffer._ref_this()); // RStringBuffer _buffer 
  fields.push_back((::acdk::lang::RObject*)this->_in._ref_this()); // acdk::io::RCharReader _in 
  fields.push_back((::acdk::lang::RObject*)this->_sourceName._ref_this()); // RString _sourceName 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecUseShell = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecUseShell", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecUseShell, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecUseFileRedirect = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecUseFileRedirect", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecUseFileRedirect, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecUseCleanEnv = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecUseCleanEnv", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecUseCleanEnv, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecIsScript = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecIsScript", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecIsScript, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecEvalBeforeExec = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecEvalBeforeExec", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecEvalBeforeExec, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecNoStdOut = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecNoStdOut", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecNoStdOut, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecNoErrOut = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecNoErrOut", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecNoErrOut, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo ShellExecuteFlags_SExecNoOut = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "SExecNoOut", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::SExecNoOut, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* ShellExecuteFlags_enumValues[] = {
  &ShellExecuteFlags_SExecUseShell,
  &ShellExecuteFlags_SExecUseFileRedirect,
  &ShellExecuteFlags_SExecUseCleanEnv,
  &ShellExecuteFlags_SExecIsScript,
  &ShellExecuteFlags_SExecEvalBeforeExec,
  &ShellExecuteFlags_SExecNoStdOut,
  &ShellExecuteFlags_SExecNoErrOut,
  &ShellExecuteFlags_SExecNoOut,
0
};

::acdk::lang::dmi::ClazzEnumInfo* ShellExecuteFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo ShellExecuteFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "ShellExecuteFlags", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  ShellExecuteFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_ShellExecuteFlags(&ShellExecuteFlags_enumInfo);

  return &ShellExecuteFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_ShellExecuteFlagsEnumInfo(ShellExecuteFlagsMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 

::acdk::lang::dmi::ClazzSuperInfo _ShellExecutor_super_acdk__lang__Object =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ShellExecutor_interfaces[] =
{
  &_ShellExecutor_super_acdk__lang__Object,
  0
};

::acdk::lang::dmi::ClazzInfo* ShellExecutor::clazzInfo()
{
  static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
{
  ::acdk::lang::dmi::MiClazzInfo, // clazz-flags
  0, //AttributesRes
  "ShellExecutor", // name of class
  -1, // hashCode
  "acdk/cfgscript", // the namespace
  0, // _scopeParent
  0, // _nextSibling
  0, // type
  0, // _firstChild
  _ShellExecutor_interfaces, // pointer to Array of ClazzInfo references
  0, // count of Super / Interfaces
  0, // pointer to Array of fields
  0, // count of Fields
  0, // pointer to Array of Methods
  0, // count of Methods
  0, // create-function for cloning/serializing
  0, // create-function for cloning/serializing arrays
  0, // create-function for cloning/serializing arrays
  0, // Class* thisClass; chaching instance
  0, // jlong serialVersionUID; for serialization
  ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
  ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
 7, // count off all collectable members in this class
  0, // member type info for arrays or typed container
    ShellExecutor::_castToInterfacePtr, // cast object to interface pointer
0 // next ClazzInfo in chain
};
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};

static ::acdk::lang::dmi::RegisterClazzInfo _register_ShellExecutor(ShellExecutor::clazzInfo());

::acdk::lang::RClass
ShellExecutor::GetClass()
{
  return ::acdk::lang::Class::getSingeltonClass(clazzInfo());
}

//virtual
void
ShellExecutor::getCollectableFields(FieldReferences& fields)
{
  ACDK_FQ_SUPER_QUALIFIER(acdk::lang::, Object)::getCollectableFields(fields);
  fields.push_back((::acdk::lang::RObject*)this->_cmdline._ref_this()); // RString _cmdline 
  fields.push_back((::acdk::lang::RObject*)this->_env._ref_this()); // RStringArray _env 
  fields.push_back((::acdk::lang::RObject*)this->_errWriter._ref_this()); // ::acdk::io::RCharWriter _errWriter 
  fields.push_back((::acdk::lang::RObject*)this->_errs._ref_this()); // RString _errs 
  fields.push_back((::acdk::lang::RObject*)this->_outWriter._ref_this()); // ::acdk::io::RCharWriter _outWriter 
  fields.push_back((::acdk::lang::RObject*)this->_outs._ref_this()); // RString _outs 
  fields.push_back((::acdk::lang::RObject*)this->_workDir._ref_this()); // RString _workDir 
}


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo SourceTk_STkTemplateText = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "STkTemplateText", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::STkTemplateText, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo SourceTk_STkTemplateExpression = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "STkTemplateExpression", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::STkTemplateExpression, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo SourceTk_STkTemplateComment = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "STkTemplateComment", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::STkTemplateComment, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* SourceTk_enumValues[] = {
  &SourceTk_STkTemplateText,
  &SourceTk_STkTemplateExpression,
  &SourceTk_STkTemplateComment,
0
};

::acdk::lang::dmi::ClazzEnumInfo SourceTk_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "SourceTk", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  SourceTk_enumValues, // values
  0, // internal next link
};

::acdk::lang::dmi::RegisterEnumInfo _register_SourceTk(&SourceTk_enumInfo);


} // namespace acdk
} // namespace cfgscript


namespace acdk { 
namespace cfgscript { 


::acdk::lang::dmi::ClazzEnumValueInfo STFlags_STWantWhiteSpace = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "STWantWhiteSpace", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::STWantWhiteSpace, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo STFlags_STWantNewLine = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "STWantNewLine", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::STWantNewLine, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo STFlags_STWantComments = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "STWantComments", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::STWantComments, // value

};


::acdk::lang::dmi::ClazzEnumValueInfo STFlags_STParseTemplate = 
{
  ::acdk::lang::dmi::MiEnumValInfo, // flags
  0, // attributeRes
  "STParseTemplate", // name
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  0,  // ClazzEnum definition
  acdk::cfgscript::STParseTemplate, // value

};

::acdk::lang::dmi::ClazzEnumValueInfo* STFlags_enumValues[] = {
  &STFlags_STWantWhiteSpace,
  &STFlags_STWantNewLine,
  &STFlags_STWantComments,
  &STFlags_STParseTemplate,
0
};

::acdk::lang::dmi::ClazzEnumInfo* STFlagsMetaInf::GetEnumInfo()
{
static ::acdk::lang::dmi::ClazzEnumInfo STFlags_enumInfo = {
  ::acdk::lang::dmi::MiEnumInfo, // flags
  0, // attribute rest
  "STFlags", // name
  -1, // hashCode
  "acdk/cfgscript", // ns
  0, // _scopeParent
  0, // _nextSibling
  STFlags_enumValues, // values
  0, // internal next link
};

  static ::acdk::lang::dmi::RegisterEnumInfo _register_STFlags(&STFlags_enumInfo);

  return &STFlags_enumInfo;
}
static ::acdk::lang::dmi::RegisterEnumInfo _register_STFlagsEnumInfo(STFlagsMetaInf::GetEnumInfo());


} // namespace acdk
} // namespace cfgscript

