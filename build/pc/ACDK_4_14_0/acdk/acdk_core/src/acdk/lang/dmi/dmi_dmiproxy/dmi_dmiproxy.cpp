// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../dmi.h"
#include "../AcdkDmiClient.h"
#include "../AcdkStdWeakTypeDmiClient.h"
#include "../ClazzAttributesRes.h"
#include "../ClazzInfo.h"
#include "../ClazzInfoInternals.h"
#include "../dmi.h"
#include "../DmiClient.h"
#include "../DmiDelegate.h"
#include "../DmiNamedArg.h"
#include "../DmiObject.h"
#include "../DmiObjectArray.h"
#include "../DmiProxy.h"
#include "../Marshaler.h"
#include "../MetaAttribute.h"
#include "../MetaInfo.h"
#include "../MetaInfoChildsArray.h"
#include "../MetaInfoFlags.h"
#include "../MetaObject.h"
#include "../NamedArgs.h"
#include "../ScriptInterpreter.h"
#include "../ScriptVar.h"
#include "../ScriptVarInl.h"
#include "../StdDispatch.h"
#include "../SysFields.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace lang { 
namespace dmi { 

class DmiDelegate_DmiProxy
: extends ::acdk::lang::Object
, implements DmiDelegate
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DmiDelegate)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DmiDelegate::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, DmiDelegate)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  static ::acdk::lang::RObject create_instance() { return new DmiDelegate_DmiProxy(); }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DmiDelegate_DmiProxy()
  : DmiDelegate()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::dmi::RDmiObject call(IN(::acdk::lang::dmi::RDmiObjectArray) args)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(args);
    _dmiProxyGetTarget()->standardDispatch("call", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RDmiObject)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RDmiObject call(IN(::acdk::lang::dmi::RDmiNamedArgArray) namedArgs)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(namedArgs);
    _dmiProxyGetTarget()->standardDispatch("call", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RDmiObject)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiDelegate_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiDelegate_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DmiDelegate_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DmiDelegate::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DmiDelegate_DmiProxy_interfaces[] =
{
  &DmiDelegate_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiDelegate_methods__DmiDelegate_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiDelegate_DmiProxy_methods__DmiDelegate = 
{
  ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiDelegate_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiDelegate::clazzInfo(), // returnType
  "_DmiProxy", // altname
  -1, // altnamehashCode
  DmiDelegate_methods__DmiDelegate_args,
  0, // argumentCount
  0, // excpetions,
  DmiDelegate_DmiProxy::_DmiDelegate_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DmiDelegate_methods[] = 
{
  &DmiDelegate_DmiProxy_methods__DmiDelegate,
  0
};

::acdk::lang::dmi::ClazzInfo* DmiDelegate_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DmiDelegate_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DmiDelegate_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DmiDelegate_methods, // pointer to Array of Methods
     0, // count of Methods
     DmiDelegate_DmiProxy::create_instance, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DmiDelegate_DmiProxy(DmiDelegate_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

class StdDmiDelegate_DmiProxy
: extends StdDmiDelegate
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(StdDmiDelegate)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  StdDmiDelegate::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, StdDmiDelegate)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  StdDmiDelegate_DmiProxy(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) methodName)
  : StdDmiDelegate(obj, methodName)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  StdDmiDelegate_DmiProxy(IN(::acdk::lang::RClass) cls, IN(::acdk::lang::RString) methodName)
  : StdDmiDelegate(cls, methodName)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::dmi::RDmiObject call(IN(::acdk::lang::dmi::RDmiObjectArray) args)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::call(args);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(args);
    _dmiProxyGetTarget()->standardDispatch("call", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RDmiObject)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RDmiObject call(IN(::acdk::lang::dmi::RDmiNamedArgArray) namedArgs)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::call(namedArgs);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(namedArgs);
    _dmiProxyGetTarget()->standardDispatch("call", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RDmiObject)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, StdDmiDelegate)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new StdDmiDelegate_DmiProxy((::acdk::lang::RObject)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new StdDmiDelegate_DmiProxy((::acdk::lang::RClass)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo StdDmiDelegate_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  StdDmiDelegate::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _StdDmiDelegate_DmiProxy_interfaces[] =
{
  &StdDmiDelegate_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_arg_obj =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "obj",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_arg_methodName =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "methodName",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* StdDmiDelegate_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_args[] = 
{
  &StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_arg_obj,
  &StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_arg_methodName,
  0
};

::acdk::lang::dmi::ClazzMethodInfo StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "StdDmiDelegate_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  StdDmiDelegate::clazzInfo(), // returnType
  "_0_StdDmiDelegate_DmiProxy", // altname
  -1, // altnamehashCode
  StdDmiDelegate_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  StdDmiDelegate_DmiProxy::_StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_arg_cls =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "cls",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::Class::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_arg_methodName =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "methodName",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* StdDmiDelegate_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_args[] = 
{
  &StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_arg_cls,
  &StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_arg_methodName,
  0
};

::acdk::lang::dmi::ClazzMethodInfo StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "StdDmiDelegate_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  StdDmiDelegate::clazzInfo(), // returnType
  "_1_StdDmiDelegate_DmiProxy", // altname
  -1, // altnamehashCode
  StdDmiDelegate_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  StdDmiDelegate_DmiProxy::_StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* StdDmiDelegate_methods[] = 
{
  &StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Object_in_acdk_lang_String,
  &StdDmiDelegate_DmiProxy_methods__StdDmiDelegate_in_acdk_lang_Class_in_acdk_lang_String,
  0
};

::acdk::lang::dmi::ClazzInfo* StdDmiDelegate_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "StdDmiDelegate_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _StdDmiDelegate_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     StdDmiDelegate_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_StdDmiDelegate_DmiProxy(StdDmiDelegate_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

class DmiNamedArg_DmiProxy
: extends DmiNamedArg
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DmiNamedArg)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DmiNamedArg::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, DmiNamedArg)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DmiNamedArg_DmiProxy(IN(::acdk::lang::RString) nam, IN(::acdk::lang::dmi::RDmiObject) val)
  : DmiNamedArg(nam, val)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiNamedArg)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiNamedArg)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiNamedArg)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiNamedArg)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiNamedArg)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiNamedArg)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiNamedArg)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiNamedArg_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), (::acdk::lang::dmi::RDmiObject)args[1].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DmiNamedArg_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DmiNamedArg::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DmiNamedArg_DmiProxy_interfaces[] =
{
  &DmiNamedArg_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiNamedArg_DmiProxy_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_arg_nam =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "nam",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiNamedArg_DmiProxy_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_arg_val =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "val",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::DmiObject::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiNamedArg_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_args[] = 
{
  &DmiNamedArg_DmiProxy_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_arg_nam,
  &DmiNamedArg_DmiProxy_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_arg_val,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiNamedArg_DmiProxy_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiNamedArg_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiNamedArg::clazzInfo(), // returnType
  "_0_DmiNamedArg_DmiProxy", // altname
  -1, // altnamehashCode
  DmiNamedArg_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_args,
  0, // argumentCount
  0, // excpetions,
  DmiNamedArg_DmiProxy::_DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DmiNamedArg_methods[] = 
{
  &DmiNamedArg_DmiProxy_methods__DmiNamedArg_in_acdk_lang_String_in_acdk_lang_dmi_DmiObject,
  0
};

::acdk::lang::dmi::ClazzInfo* DmiNamedArg_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DmiNamedArg_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DmiNamedArg_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DmiNamedArg_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DmiNamedArg_DmiProxy(DmiNamedArg_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

class DmiObject_DmiProxy
: extends DmiObject
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DmiObject)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DmiObject::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, DmiObject)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DmiObject_DmiProxy()
  : DmiObject()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(::acdk::lang::dmi::RDmiObject) obj, int flags)
  : DmiObject(obj, flags)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(::acdk::lang::dmi::RDmiObject) obj)
  : DmiObject(obj)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(bool) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(bool) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(bool) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(bool) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(char) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(char) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(char) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(char) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(ucchar) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(ucchar) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(ucchar) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(ucchar) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(byte) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(byte) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(byte) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(byte) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(short) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(short) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(short) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(short) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(int) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(int) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(int) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(int) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(jlong) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(jlong) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(jlong) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(jlong) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(float) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(float) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(float) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(float) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(double) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(double) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(double) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(double) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(::acdk::lang::RObject) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(IN(::acdk::lang::RObject) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(::acdk::lang::RObject) c, int fl)
  : DmiObject(c, fl)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DmiObject_DmiProxy(OUT(::acdk::lang::RObject) c)
  : DmiObject(c)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiObject)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiObject)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiObject)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiObject)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiObject)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiObject)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiObject)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_acdk_lang_dmi_DmiObject_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy((::acdk::lang::dmi::RDmiObject)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_acdk_lang_dmi_DmiObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy((::acdk::lang::dmi::RDmiObject)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_Z_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getBoolVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_Z_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getBoolRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getBoolRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_C_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getCharVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_C_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getCharVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_C_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getCharRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_C_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getCharRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_U_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getUcCharVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_U_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getUcCharVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_U_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getUcCharRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_U_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getUcCharRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_B_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getByteVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_B_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getByteVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_B_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getByteRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_B_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getByteRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_S_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getShortVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_S_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getShortVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_S_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getShortRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_S_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getShortRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getIntRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getIntRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_J_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getLongVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getLongVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_J_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getLongRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_J_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getLongRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_F_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getFloatVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_F_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getFloatVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_F_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getFloatRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_F_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getFloatRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_D_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getDoubleVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_D_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getDoubleVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_D_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getDoubleRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_D_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy(args[0].getDoubleRef());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_acdk_lang_Object_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy((::acdk::lang::RObject)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_in_acdk_lang_Object_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy((::acdk::lang::RObject)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_acdk_lang_Object_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy((::acdk::lang::RObject&)args[0].getObjectRef(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DmiObject_out_acdk_lang_Object_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DmiObject_DmiProxy((::acdk::lang::RObject&)args[0].getObjectRef());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DmiObject_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DmiObject::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DmiObject_DmiProxy_interfaces[] =
{
  &DmiObject_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_0_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I_arg_obj =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "obj",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::DmiObject::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I_arg_flags =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "flags",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I_arg_obj,
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I_arg_flags,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_1_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_acdk_lang_dmi_DmiObject_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_arg_obj =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "obj",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::DmiObject::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_acdk_lang_dmi_DmiObject_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_arg_obj,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_2_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_acdk_lang_dmi_DmiObject_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_acdk_lang_dmi_DmiObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_Z_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_Z_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_Z_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_Z_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_Z_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_Z_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_3_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_Z_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_Z_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_Z_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_Z_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_Z_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_4_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_Z_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_Z_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_Z_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_Z_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_Z_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_Z_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_Z_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_Z_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_5_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_Z_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_Z_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_Z_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_Z_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_Z_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_6_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_Z_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_Z_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_C_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_C_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_C_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_C_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_C_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_C_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_7_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_C_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_C_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_C_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_C_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_C_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_C = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_8_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_C_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_C_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_C_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_C_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_C_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_C_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_C_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_C_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_9_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_C_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_C_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_C_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_C_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_C_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_C = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_a_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_C_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_C_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_U_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_U_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_U_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_U_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_U_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_U_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_b_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_U_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_U_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_U_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_U_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_U_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_U = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_c_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_U_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_U_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_U_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_U_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_U_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_U_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_U_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_U_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_d_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_U_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_U_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_U_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getUcCharClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_U_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_U_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_U = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_e_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_U_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_U_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_B_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_B_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_B_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_B_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_B_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_B_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_f_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_B_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_B_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_B_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_B_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_B_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_B = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_g_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_B_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_B_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_B_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_B_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_B_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_B_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_B_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_B_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_h_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_B_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_B_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_B_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_B_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_B_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_B = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_i_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_B_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_B_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_S_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_S_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_S_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_S_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_S_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_S_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_j_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_S_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_S_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_S_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_S_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_S_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_S = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_k_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_S_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_S_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_S_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_S_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_S_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_S_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_S_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_S_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_l_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_S_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_S_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_S_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getShortClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_S_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_S_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_S = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_m_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_S_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_S_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_I_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_I_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_I_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_I_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_I_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_n_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_I_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_I_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_o_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_I_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_I_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_I_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_I_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_I_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_p_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_I_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_I_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_q_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_J_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_J_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_J_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_J_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_J_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_J_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_r_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_J_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_J_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_J_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_J_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_J_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_s_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_J_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_J_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_J_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_J_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_J_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_J_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_J_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_J_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_t_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_J_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_J_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_J_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getLongClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_J_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_J_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_J = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_u_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_J_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_J_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_F_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_F_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_F_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_F_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_F_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_F_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_v_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_F_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_F_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_F_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_F_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_F_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_F = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_w_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_F_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_F_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_F_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_F_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_F_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_F_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_F_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_F_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_x_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_F_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_F_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_F_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getFloatClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_F_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_F_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_F = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_y_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_F_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_F_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_D_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_D_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_D_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_D_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_D_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_D_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_z_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_D_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_D_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_D_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_D_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_D_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_D = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_A_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_D_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_D_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_D_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_D_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_D_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_D_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_D_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_D_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_B_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_D_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_D_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_D_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getDoubleClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_D_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_D_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_D = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_C_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_D_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_D_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_acdk_lang_Object_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_D_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_acdk_lang_Object_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_acdk_lang_Object_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_in_acdk_lang_Object_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_E_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_in_acdk_lang_Object_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_in_acdk_lang_Object_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_I_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_I_arg_fl =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "fl",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_acdk_lang_Object_I_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_I_arg_c,
  &DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_I_arg_fl,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_F_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_acdk_lang_Object_I_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_acdk_lang_Object_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_arg_c =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiOut,
  0, //AttributesRes
  "c",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DmiObject_methods__DmiObject_out_acdk_lang_Object_args[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_arg_c,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DmiObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DmiObject::clazzInfo(), // returnType
  "_G_DmiObject_DmiProxy", // altname
  -1, // altnamehashCode
  DmiObject_methods__DmiObject_out_acdk_lang_Object_args,
  0, // argumentCount
  0, // excpetions,
  DmiObject_DmiProxy::_DmiObject_out_acdk_lang_Object_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DmiObject_methods[] = 
{
  &DmiObject_DmiProxy_methods__DmiObject,
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_dmi_DmiObject,
  &DmiObject_DmiProxy_methods__DmiObject_in_Z_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_Z,
  &DmiObject_DmiProxy_methods__DmiObject_out_Z_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_Z,
  &DmiObject_DmiProxy_methods__DmiObject_in_C_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_C,
  &DmiObject_DmiProxy_methods__DmiObject_out_C_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_C,
  &DmiObject_DmiProxy_methods__DmiObject_in_U_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_U,
  &DmiObject_DmiProxy_methods__DmiObject_out_U_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_U,
  &DmiObject_DmiProxy_methods__DmiObject_in_B_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_B,
  &DmiObject_DmiProxy_methods__DmiObject_out_B_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_B,
  &DmiObject_DmiProxy_methods__DmiObject_in_S_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_S,
  &DmiObject_DmiProxy_methods__DmiObject_out_S_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_S,
  &DmiObject_DmiProxy_methods__DmiObject_in_I_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_I_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_J_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_J,
  &DmiObject_DmiProxy_methods__DmiObject_out_J_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_J,
  &DmiObject_DmiProxy_methods__DmiObject_in_F_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_F,
  &DmiObject_DmiProxy_methods__DmiObject_out_F_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_F,
  &DmiObject_DmiProxy_methods__DmiObject_in_D_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_D,
  &DmiObject_DmiProxy_methods__DmiObject_out_D_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_D,
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object_I,
  &DmiObject_DmiProxy_methods__DmiObject_in_acdk_lang_Object,
  &DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object_I,
  &DmiObject_DmiProxy_methods__DmiObject_out_acdk_lang_Object,
  0
};

::acdk::lang::dmi::ClazzInfo* DmiObject_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DmiObject_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DmiObject_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DmiObject_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DmiObject_DmiProxy(DmiObject_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

class MetaAttribute_DmiProxy
: extends MetaAttribute
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MetaAttribute)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MetaAttribute::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, MetaAttribute)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MetaAttribute_DmiProxy(int t, IN(::acdk::lang::RString) nam, IN(::acdk::lang::RObject) val)
  : MetaAttribute(t, nam, val)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MetaAttribute_DmiProxy(int t, IN(::acdk::lang::RString) nam)
  : MetaAttribute(t, nam)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaAttribute)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaAttribute)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaAttribute)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaAttribute)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaAttribute)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaAttribute)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaAttribute)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MetaAttribute_DmiProxy(args[0].getIntVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RObject)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MetaAttribute_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MetaAttribute_DmiProxy(args[0].getIntVar(), (::acdk::lang::RString)args[1].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MetaAttribute_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MetaAttribute::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MetaAttribute_DmiProxy_interfaces[] =
{
  &MetaAttribute_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_arg_t =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "t",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_arg_nam =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "nam",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_arg_val =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "val",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::Object::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaAttribute_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_args[] = 
{
  &MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_arg_t,
  &MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_arg_nam,
  &MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_arg_val,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MetaAttribute_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MetaAttribute::clazzInfo(), // returnType
  "_0_MetaAttribute_DmiProxy", // altname
  -1, // altnamehashCode
  MetaAttribute_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_args,
  0, // argumentCount
  0, // excpetions,
  MetaAttribute_DmiProxy::_MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_arg_t =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "t",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_arg_nam =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "nam",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaAttribute_methods__MetaAttribute_I_in_acdk_lang_String_args[] = 
{
  &MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_arg_t,
  &MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_arg_nam,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MetaAttribute_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MetaAttribute::clazzInfo(), // returnType
  "_1_MetaAttribute_DmiProxy", // altname
  -1, // altnamehashCode
  MetaAttribute_methods__MetaAttribute_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  MetaAttribute_DmiProxy::_MetaAttribute_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MetaAttribute_methods[] = 
{
  &MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String_in_acdk_lang_Object,
  &MetaAttribute_DmiProxy_methods__MetaAttribute_I_in_acdk_lang_String,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaAttribute_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MetaAttribute_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MetaAttribute_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MetaAttribute_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MetaAttribute_DmiProxy(MetaAttribute_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

class MetaObjectListener_DmiProxy
: extends ::acdk::lang::Object
, implements MetaObjectListener
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MetaObjectListener)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MetaObjectListener::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, MetaObjectListener)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  static ::acdk::lang::RObject create_instance() { return new MetaObjectListener_DmiProxy(); }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MetaObjectListener_DmiProxy()
  : MetaObjectListener()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void onRegister(IN(::acdk::lang::dmi::RMetaObject) metaObject)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(metaObject);
    _dmiProxyGetTarget()->standardDispatch("onRegister", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void onUnregister(IN(::acdk::lang::dmi::RMetaObject) metaObject)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(metaObject);
    _dmiProxyGetTarget()->standardDispatch("onUnregister", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MetaObjectListener_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MetaObjectListener_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MetaObjectListener_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MetaObjectListener::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MetaObjectListener_DmiProxy_interfaces[] =
{
  &MetaObjectListener_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectListener_methods__MetaObjectListener_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectListener_DmiProxy_methods__MetaObjectListener = 
{
  ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MetaObjectListener_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MetaObjectListener::clazzInfo(), // returnType
  "_DmiProxy", // altname
  -1, // altnamehashCode
  MetaObjectListener_methods__MetaObjectListener_args,
  0, // argumentCount
  0, // excpetions,
  MetaObjectListener_DmiProxy::_MetaObjectListener_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MetaObjectListener_methods[] = 
{
  &MetaObjectListener_DmiProxy_methods__MetaObjectListener,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectListener_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MetaObjectListener_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MetaObjectListener_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MetaObjectListener_methods, // pointer to Array of Methods
     0, // count of Methods
     MetaObjectListener_DmiProxy::create_instance, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MetaObjectListener_DmiProxy(MetaObjectListener_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

class MetaObject_DmiProxy
: extends ::acdk::lang::Object
, implements MetaObject
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MetaObject)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MetaObject::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, MetaObject)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  static ::acdk::lang::RObject create_instance() { return new MetaObject_DmiProxy(); }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MetaObject_DmiProxy()
  : MetaObject()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void deleteInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[1]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::deleteInstanceMetaAttribute(obj, keyname);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("deleteInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void deleteMetaAttribute(IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::deleteMetaAttribute(keyname);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("deleteMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::dmi::RMetaAttribute getInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::getInstanceMetaAttribute(obj, keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("getInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttribute)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RMetaAttributeArray getInstanceMetaAttributes(IN(::acdk::lang::RObject) obj)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::getInstanceMetaAttributes(obj);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    _dmiProxyGetTarget()->standardDispatch("getInstanceMetaAttributes", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttributeArray)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RMetaAttribute getMetaAttribute(IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::getMetaAttribute(keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("getMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttribute)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RMetaAttributeArray getMetaAttributes()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::getMetaAttributes();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getMetaAttributes", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttributeArray)(::acdk::lang::RObject)__acdk_retval;
  }
  bool hasInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::hasInstanceMetaAttribute(obj, keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("hasInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool hasMetaAttribute(IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::hasMetaAttribute(keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("hasMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void setInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname, IN(::acdk::lang::RObject) attr)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[11]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::setInstanceMetaAttribute(obj, keyname, attr);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    __acdk_args[2] = ::acdk::lang::inOf(attr);
    _dmiProxyGetTarget()->standardDispatch("setInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setMetaAttribute(IN(::acdk::lang::RString) keyname, IN(::acdk::lang::RObject) obj)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[12]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::setMetaAttribute(keyname, obj);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    __acdk_args[1] = ::acdk::lang::inOf(obj);
    _dmiProxyGetTarget()->standardDispatch("setMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RString toTypeString(int format)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    _dmiProxyGetTarget()->standardDispatch("toTypeString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MetaObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MetaObject_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MetaObject_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MetaObject::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MetaObject_DmiProxy_interfaces[] =
{
  &MetaObject_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods__MetaObject_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_DmiProxy_methods__MetaObject = 
{
  ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MetaObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MetaObject::clazzInfo(), // returnType
  "_DmiProxy", // altname
  -1, // altnamehashCode
  MetaObject_methods__MetaObject_args,
  0, // argumentCount
  0, // excpetions,
  MetaObject_DmiProxy::_MetaObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MetaObject_methods[] = 
{
  &MetaObject_DmiProxy_methods__MetaObject,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MetaObject_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MetaObject_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MetaObject_methods, // pointer to Array of Methods
     0, // count of Methods
     MetaObject_DmiProxy::create_instance, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MetaObject_DmiProxy(MetaObject_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

class MetaObjectImpl_DmiProxy
: extends MetaObjectImpl
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MetaObjectImpl)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MetaObjectImpl::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, MetaObjectImpl)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MetaObjectImpl_DmiProxy()
  : MetaObjectImpl()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RString toTypeString(int format)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::clazzInfo()->methods[2]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::toTypeString(format);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    _dmiProxyGetTarget()->standardDispatch("toTypeString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  void deleteInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[1]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::deleteInstanceMetaAttribute(obj, keyname);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("deleteInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void deleteMetaAttribute(IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::deleteMetaAttribute(keyname);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("deleteMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::dmi::RMetaAttribute getInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::getInstanceMetaAttribute(obj, keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("getInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttribute)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RMetaAttributeArray getInstanceMetaAttributes(IN(::acdk::lang::RObject) obj)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::getInstanceMetaAttributes(obj);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    _dmiProxyGetTarget()->standardDispatch("getInstanceMetaAttributes", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttributeArray)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RMetaAttribute getMetaAttribute(IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::getMetaAttribute(keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("getMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttribute)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::lang::dmi::RMetaAttributeArray getMetaAttributes()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::getMetaAttributes();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getMetaAttributes", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::dmi::RMetaAttributeArray)(::acdk::lang::RObject)__acdk_retval;
  }
  bool hasInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::hasInstanceMetaAttribute(obj, keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("hasInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool hasMetaAttribute(IN(::acdk::lang::RString) keyname)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::hasMetaAttribute(keyname);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    _dmiProxyGetTarget()->standardDispatch("hasMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void setInstanceMetaAttribute(IN(::acdk::lang::RObject) obj, IN(::acdk::lang::RString) keyname, IN(::acdk::lang::RObject) attr)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[11]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::setInstanceMetaAttribute(obj, keyname, attr);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(obj);
    __acdk_args[1] = ::acdk::lang::inOf(keyname);
    __acdk_args[2] = ::acdk::lang::inOf(attr);
    _dmiProxyGetTarget()->standardDispatch("setInstanceMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setMetaAttribute(IN(::acdk::lang::RString) keyname, IN(::acdk::lang::RObject) obj)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObject)::clazzInfo()->methods[12]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, MetaObjectImpl)::setMetaAttribute(keyname, obj);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(keyname);
    __acdk_args[1] = ::acdk::lang::inOf(obj);
    _dmiProxyGetTarget()->standardDispatch("setMetaAttribute", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MetaObjectImpl_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MetaObjectImpl_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MetaObjectImpl_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MetaObjectImpl::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MetaObjectImpl_DmiProxy_interfaces[] =
{
  &MetaObjectImpl_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectImpl_methods__MetaObjectImpl_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectImpl_DmiProxy_methods__MetaObjectImpl = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MetaObjectImpl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MetaObjectImpl::clazzInfo(), // returnType
  "_0_MetaObjectImpl_DmiProxy", // altname
  -1, // altnamehashCode
  MetaObjectImpl_methods__MetaObjectImpl_args,
  0, // argumentCount
  0, // excpetions,
  MetaObjectImpl_DmiProxy::_MetaObjectImpl_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MetaObjectImpl_methods[] = 
{
  &MetaObjectImpl_DmiProxy_methods__MetaObjectImpl,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectImpl_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MetaObjectImpl_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MetaObjectImpl_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MetaObjectImpl_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MetaObjectImpl_DmiProxy(MetaObjectImpl_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

using namespace acdk::lang;
class ScriptInterpreter_DmiProxy
: extends ::acdk::lang::Object
, implements ScriptInterpreter
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ScriptInterpreter)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ScriptInterpreter::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::lang::dmi::, ScriptInterpreter)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  static ::acdk::lang::RObject create_instance() { return new ScriptInterpreter_DmiProxy(); }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ScriptInterpreter_DmiProxy()
  : ScriptInterpreter()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject eval(IN(::acdk::lang::RString) code)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(code);
    _dmiProxyGetTarget()->standardDispatch("eval", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  void interactive(IN(::acdk::io::RCharReader) in, IN(::acdk::io::RCharWriter) out, IN(::acdk::io::RCharWriter) err)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(in);
    __acdk_args[1] = ::acdk::lang::inOf(out);
    __acdk_args[2] = ::acdk::lang::inOf(err);
    _dmiProxyGetTarget()->standardDispatch("interactive", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void parse(IN(::acdk::io::RFile) file)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(file);
    _dmiProxyGetTarget()->standardDispatch("parse", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void parse(IN(::acdk::lang::RString) script)
  {
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(script);
    _dmiProxyGetTarget()->standardDispatch("parse", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScriptInterpreter_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScriptInterpreter_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ScriptInterpreter_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ScriptInterpreter::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ScriptInterpreter_DmiProxy_interfaces[] =
{
  &ScriptInterpreter_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScriptInterpreter_methods__ScriptInterpreter_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScriptInterpreter_DmiProxy_methods__ScriptInterpreter = 
{
  ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScriptInterpreter_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScriptInterpreter::clazzInfo(), // returnType
  "_DmiProxy", // altname
  -1, // altnamehashCode
  ScriptInterpreter_methods__ScriptInterpreter_args,
  0, // argumentCount
  0, // excpetions,
  ScriptInterpreter_DmiProxy::_ScriptInterpreter_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ScriptInterpreter_methods[] = 
{
  &ScriptInterpreter_DmiProxy_methods__ScriptInterpreter,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptInterpreter_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ScriptInterpreter_DmiProxy", // name of class
  -1, // hashCode
    "acdk/lang/dmi", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ScriptInterpreter_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ScriptInterpreter_methods, // pointer to Array of Methods
     0, // count of Methods
     ScriptInterpreter_DmiProxy::create_instance, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ScriptInterpreter_DmiProxy(ScriptInterpreter_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace lang
} // namespace dmi

