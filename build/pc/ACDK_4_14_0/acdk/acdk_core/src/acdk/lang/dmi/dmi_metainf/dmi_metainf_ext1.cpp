// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../dmi.h"
#include "../AcdkDmiClient.h"
#include "../AcdkStdWeakTypeDmiClient.h"
#include "../ClazzAttributesRes.h"
#include "../ClazzInfo.h"
#include "../ClazzInfoInternals.h"
#include "../dmi.h"
#include "../DmiClient.h"
#include "../DmiDelegate.h"
#include "../DmiNamedArg.h"
#include "../DmiObject.h"
#include "../DmiObjectArray.h"
#include "../DmiProxy.h"
#include "../Marshaler.h"
#include "../MetaAttribute.h"
#include "../MetaInfo.h"
#include "../MetaInfoChildsArray.h"
#include "../MetaInfoFlags.h"
#include "../MetaObject.h"
#include "../NamedArgs.h"
#include "../ScriptInterpreter.h"
#include "../ScriptVar.h"
#include "../ScriptVarInl.h"
#include "../StdDispatch.h"
#include "../SysFields.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace lang { 
namespace dmi { 


//static
::acdk::lang::RObject
MetaAttribute_create_array(int length)
{
  return new ObjectArrayImpl<RMetaAttribute>(length);
}

//static
::acdk::lang::RObject
MetaAttribute_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class MetaAttribute_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaAttribute_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)MetaAttribute::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaAttribute_method_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new MetaAttribute(::acdk::lang::dmi::castTo< int>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc), ::acdk::lang::dmi::castTo< RObject>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaAttribute_method_MetaAttribute_IINLRString__LRMetaAttribute__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new MetaAttribute(::acdk::lang::dmi::castTo< int>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  MetaAttribute_fields_name_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    MetaAttribute* This = dmi_cast<MetaAttribute>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->name, flags);
    else
      This->name = ::acdk::lang::dmi::castTo< RString>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  MetaAttribute_fields_type_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    MetaAttribute* This = dmi_cast<MetaAttribute>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->type, flags);
    else
      This->type = ::acdk::lang::dmi::castTo< int>(var, dc);
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  MetaAttribute_fields_value_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    MetaAttribute* This = dmi_cast<MetaAttribute>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->value, flags);
    else
      This->value = ::acdk::lang::dmi::castTo< RObject>(var, dc);
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo MetaAttribute_fields_name = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "name", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(),
  MetaAttribute_MetainfoWrapper::MetaAttribute_fields_name_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo MetaAttribute_fields_type = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "type", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  MetaAttribute_MetainfoWrapper::MetaAttribute_fields_type_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo MetaAttribute_fields_value = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "value", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(),
  MetaAttribute_MetainfoWrapper::MetaAttribute_fields_value_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _MetaAttribute_fields[] = 
{
  &MetaAttribute_fields_name,
  &MetaAttribute_fields_type,
  &MetaAttribute_fields_value,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaAttribute_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaAttribute_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaAttribute_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  MetaAttribute_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  MetaAttribute_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  MetaAttribute_MetainfoWrapper::MetaAttribute_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__arg_t = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "t", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__arg_nam = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "nam", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__arg_val = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "val", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__args[] = 
{
  &MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__arg_t,
  &MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__arg_nam,
  &MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__arg_val,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaAttribute_method_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "MetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  MetaAttribute::clazzInfo(), // return type
  "_0_MetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__args, // the arguments
  0, //arguments count
  MetaAttribute_methods_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__exceptions, // the declared exceptions
  MetaAttribute_MetainfoWrapper::MetaAttribute_method_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__arg_t = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "t", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__arg_nam = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "nam", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__args[] = 
{
  &MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__arg_t,
  &MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__arg_nam,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaAttribute_method_MetaAttribute_IINLRString__LRMetaAttribute_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "MetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  MetaAttribute::clazzInfo(), // return type
  "_1_MetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__args, // the arguments
  0, //arguments count
  MetaAttribute_methods_MetaAttribute_IINLRString__LRMetaAttribute__exceptions, // the declared exceptions
  MetaAttribute_MetainfoWrapper::MetaAttribute_method_MetaAttribute_IINLRString__LRMetaAttribute__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _MetaAttribute_methods[] = 
{
  &MetaAttribute_method_GetClass__L_acdk_lang_RClass_,
  &MetaAttribute_method_MetaAttribute_IINLRString_INLRObject__LRMetaAttribute_,
  &MetaAttribute_method_MetaAttribute_IINLRString__LRMetaAttribute_,
  0
};


struct MetaAttribute_MetaInfoInitializer
{  MetaAttribute_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = MetaAttribute::clazzInfo();
    ci->fields =  _MetaAttribute_fields;
    ci->methods =  _MetaAttribute_methods;
    ci->_scopeParent = acdk_lang_dmi_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
MetaAttribute_MetaInfoInitializer MetaAttribute_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 


//static
::acdk::lang::RObject
MetaObjectListener_create_array(int length)
{
  return new ObjectArrayImpl<RMetaObjectListener>(length);
}

//static
::acdk::lang::RObject
MetaObjectListener_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class MetaObjectListener_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObjectListener_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)MetaObjectListener::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObjectListener_method_onRegister_INLRMetaObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObjectListener* This = dmi_cast<MetaObjectListener>(This_);
    This->onRegister(::acdk::lang::dmi::castTo< RMetaObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObjectListener_method_onUnregister_INLRMetaObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObjectListener* This = dmi_cast<MetaObjectListener>(This_);
    This->onUnregister(::acdk::lang::dmi::castTo< RMetaObject>(args[0], dc));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _MetaObjectListener_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectListener_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectListener_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectListener_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_2_GetClass", // alternative name of method
  -1, // altlabelHashCode
  MetaObjectListener_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  MetaObjectListener_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  MetaObjectListener_MetainfoWrapper::MetaObjectListener_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObjectListener_methods_onRegister_INLRMetaObject__V_arg_metaObject = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "metaObject", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectListener_methods_onRegister_INLRMetaObject__V_args[] = 
{
  &MetaObjectListener_methods_onRegister_INLRMetaObject__V_arg_metaObject,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectListener_methods_onRegister_INLRMetaObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectListener_method_onRegister_INLRMetaObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "onRegister", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_0_onRegister", // alternative name of method
  -1, // altlabelHashCode
  MetaObjectListener_methods_onRegister_INLRMetaObject__V_args, // the arguments
  0, //arguments count
  MetaObjectListener_methods_onRegister_INLRMetaObject__V_exceptions, // the declared exceptions
  MetaObjectListener_MetainfoWrapper::MetaObjectListener_method_onRegister_INLRMetaObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObjectListener_methods_onUnregister_INLRMetaObject__V_arg_metaObject = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "metaObject", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectListener_methods_onUnregister_INLRMetaObject__V_args[] = 
{
  &MetaObjectListener_methods_onUnregister_INLRMetaObject__V_arg_metaObject,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectListener_methods_onUnregister_INLRMetaObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectListener_method_onUnregister_INLRMetaObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "onUnregister", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1_onUnregister", // alternative name of method
  -1, // altlabelHashCode
  MetaObjectListener_methods_onUnregister_INLRMetaObject__V_args, // the arguments
  0, //arguments count
  MetaObjectListener_methods_onUnregister_INLRMetaObject__V_exceptions, // the declared exceptions
  MetaObjectListener_MetainfoWrapper::MetaObjectListener_method_onUnregister_INLRMetaObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _MetaObjectListener_methods[] = 
{
  &MetaObjectListener_method_GetClass__L_acdk_lang_RClass_,
  &MetaObjectListener_method_onRegister_INLRMetaObject__V,
  &MetaObjectListener_method_onUnregister_INLRMetaObject__V,
  0
};


struct MetaObjectListener_MetaInfoInitializer
{  MetaObjectListener_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = MetaObjectListener::clazzInfo();
    ci->fields =  _MetaObjectListener_fields;
    ci->methods =  _MetaObjectListener_methods;
    ci->_scopeParent = acdk_lang_dmi_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
MetaObjectListener_MetaInfoInitializer MetaObjectListener_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 


//static
::acdk::lang::RObject
MetaObject_create_array(int length)
{
  return new ObjectArrayImpl<RMetaObject>(length);
}

//static
::acdk::lang::RObject
MetaObject_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class MetaObject_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)MetaObject::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_deleteInstanceMetaAttribute_INLRObject_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MetaObject::deleteInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    else
        This->deleteInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_deleteMetaAttribute_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MetaObject::deleteMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        This->deleteMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MetaObject::getInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    else
        ret = (::acdk::lang::RObject)This->getInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MetaObject::getInstanceMetaAttributes(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->getInstanceMetaAttributes(::acdk::lang::dmi::castTo< RObject>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_getMetaAttribute_INLRString__LRMetaAttribute__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MetaObject::getMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->getMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_getMetaAttributes__LRMetaAttributeArray__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MetaObject::getMetaAttributes();
    else
        ret = (::acdk::lang::RObject)This->getMetaAttributes();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_getObjectMetaAttribute_INLRString__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MetaObject::getObjectMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->getObjectMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_hasInstanceMetaAttribute_INLRObject_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->MetaObject::hasInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    else
      ret = This->hasInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_hasMetaAttribute_INLRString__Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->MetaObject::hasMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    else
      ret = This->hasMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_registerListener_INLRMetaObjectListener__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject::registerListener(::acdk::lang::dmi::castTo< RMetaObjectListener>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MetaObject::setInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc), ::acdk::lang::dmi::castTo< RObject>(args[2], dc));
    else
        This->setInstanceMetaAttribute(::acdk::lang::dmi::castTo< RObject>(args[0], dc), ::acdk::lang::dmi::castTo< RString>(args[1], dc), ::acdk::lang::dmi::castTo< RObject>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_setMetaAttribute_INLRString_INLRObject__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->MetaObject::setMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    else
        This->setMetaAttribute(::acdk::lang::dmi::castTo< RString>(args[0], dc), ::acdk::lang::dmi::castTo< RObject>(args[1], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_toTypeString_I_LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    ret = (::acdk::lang::RObject)This->toTypeString(::acdk::lang::dmi::castTo< int>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_toTypeString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject* This = dmi_cast<MetaObject>(This_);
    ret = (::acdk::lang::RObject)This->toTypeString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObject_method_unRegisterListener_INLRMetaObjectListener__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObject::unRegisterListener(::acdk::lang::dmi::castTo< RMetaObjectListener>(args[0], dc));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _MetaObject_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_f_GetClass", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  MetaObject_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_args[] = 
{
  &MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_arg_obj,
  &MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_arg_keyname,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_deleteInstanceMetaAttribute_INLRObject_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "deleteInstanceMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_deleteInstanceMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_args, // the arguments
  0, //arguments count
  MetaObject_methods_deleteInstanceMetaAttribute_INLRObject_INLRString__V_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_deleteInstanceMetaAttribute_INLRObject_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_deleteMetaAttribute_INLRString__V_arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_deleteMetaAttribute_INLRString__V_args[] = 
{
  &MetaObject_methods_deleteMetaAttribute_INLRString__V_arg_keyname,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_deleteMetaAttribute_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_deleteMetaAttribute_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "deleteMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_9_deleteMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_deleteMetaAttribute_INLRString__V_args, // the arguments
  0, //arguments count
  MetaObject_methods_deleteMetaAttribute_INLRString__V_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_deleteMetaAttribute_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__args[] = 
{
  &MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__arg_obj,
  &MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__arg_keyname,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getInstanceMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaAttribute::clazzInfo(), // return type
  "_4_getInstanceMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__args, // the arguments
  0, //arguments count
  MetaObject_methods_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__args[] = 
{
  &MetaObject_methods_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getInstanceMetaAttributes", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaAttributeArray::clazzInfo(), // return type
  "_1_getInstanceMetaAttributes", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__args, // the arguments
  0, //arguments count
  MetaObject_methods_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_getMetaAttribute_INLRString__LRMetaAttribute__arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_getMetaAttribute_INLRString__LRMetaAttribute__args[] = 
{
  &MetaObject_methods_getMetaAttribute_INLRString__LRMetaAttribute__arg_keyname,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_getMetaAttribute_INLRString__LRMetaAttribute__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_getMetaAttribute_INLRString__LRMetaAttribute_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaAttribute::clazzInfo(), // return type
  "_2_getMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_getMetaAttribute_INLRString__LRMetaAttribute__args, // the arguments
  0, //arguments count
  MetaObject_methods_getMetaAttribute_INLRString__LRMetaAttribute__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_getMetaAttribute_INLRString__LRMetaAttribute__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_getMetaAttributes__LRMetaAttributeArray__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_getMetaAttributes__LRMetaAttributeArray__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_getMetaAttributes__LRMetaAttributeArray_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getMetaAttributes", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaAttributeArray::clazzInfo(), // return type
  "_0_getMetaAttributes", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_getMetaAttributes__LRMetaAttributeArray__args, // the arguments
  0, //arguments count
  MetaObject_methods_getMetaAttributes__LRMetaAttributeArray__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_getMetaAttributes__LRMetaAttributeArray__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_getObjectMetaAttribute_INLRString__LRObject__arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_getObjectMetaAttribute_INLRString__LRObject__args[] = 
{
  &MetaObject_methods_getObjectMetaAttribute_INLRString__LRObject__arg_keyname,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_getObjectMetaAttribute_INLRString__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_getObjectMetaAttribute_INLRString__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getObjectMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_3_getObjectMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_getObjectMetaAttribute_INLRString__LRObject__args, // the arguments
  0, //arguments count
  MetaObject_methods_getObjectMetaAttribute_INLRString__LRObject__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_getObjectMetaAttribute_INLRString__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_args[] = 
{
  &MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_arg_obj,
  &MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_arg_keyname,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_hasInstanceMetaAttribute_INLRObject_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hasInstanceMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_6_hasInstanceMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_args, // the arguments
  0, //arguments count
  MetaObject_methods_hasInstanceMetaAttribute_INLRObject_INLRString__Z_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_hasInstanceMetaAttribute_INLRObject_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_hasMetaAttribute_INLRString__Z_arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_hasMetaAttribute_INLRString__Z_args[] = 
{
  &MetaObject_methods_hasMetaAttribute_INLRString__Z_arg_keyname,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_hasMetaAttribute_INLRString__Z_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_hasMetaAttribute_INLRString__Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "hasMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz(), // return type
  "_5_hasMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_hasMetaAttribute_INLRString__Z_args, // the arguments
  0, //arguments count
  MetaObject_methods_hasMetaAttribute_INLRString__Z_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_hasMetaAttribute_INLRString__Z_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_registerListener_INLRMetaObjectListener__V_arg_listner = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "listner", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaObjectListener::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_registerListener_INLRMetaObjectListener__V_args[] = 
{
  &MetaObject_methods_registerListener_INLRMetaObjectListener__V_arg_listner,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_registerListener_INLRMetaObjectListener__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_registerListener_INLRMetaObjectListener__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "registerListener", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_d_registerListener", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_registerListener_INLRMetaObjectListener__V_args, // the arguments
  0, //arguments count
  MetaObject_methods_registerListener_INLRMetaObjectListener__V_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_registerListener_INLRMetaObjectListener__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_arg_attr = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "attr", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_args[] = 
{
  &MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_arg_obj,
  &MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_arg_keyname,
  &MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_arg_attr,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setInstanceMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_8_setInstanceMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_args, // the arguments
  0, //arguments count
  MetaObject_methods_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_arg_keyname = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "keyname", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_arg_obj = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "obj", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_args[] = 
{
  &MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_arg_keyname,
  &MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_arg_obj,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_setMetaAttribute_INLRString_INLRObject__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setMetaAttribute", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_7_setMetaAttribute", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_args, // the arguments
  0, //arguments count
  MetaObject_methods_setMetaAttribute_INLRString_INLRObject__V_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_setMetaAttribute_INLRString_INLRObject__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_toTypeString_I_LRString__arg_format = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "format", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_toTypeString_I_LRString__args[] = 
{
  &MetaObject_methods_toTypeString_I_LRString__arg_format,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_toTypeString_I_LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_toTypeString_I_LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toTypeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_b_toTypeString", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_toTypeString_I_LRString__args, // the arguments
  0, //arguments count
  MetaObject_methods_toTypeString_I_LRString__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_toTypeString_I_LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_toTypeString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_toTypeString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_toTypeString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract,// class flags, like static, Constructor
  0, //AttributesRes
  "toTypeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_c_toTypeString", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_toTypeString__LRString__args, // the arguments
  0, //arguments count
  MetaObject_methods_toTypeString__LRString__exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_toTypeString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObject_methods_unRegisterListener_INLRMetaObjectListener__V_arg_listner = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "listner", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RMetaObjectListener::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObject_methods_unRegisterListener_INLRMetaObjectListener__V_args[] = 
{
  &MetaObject_methods_unRegisterListener_INLRMetaObjectListener__V_arg_listner,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObject_methods_unRegisterListener_INLRMetaObjectListener__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObject_method_unRegisterListener_INLRMetaObjectListener__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "unRegisterListener", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_e_unRegisterListener", // alternative name of method
  -1, // altlabelHashCode
  MetaObject_methods_unRegisterListener_INLRMetaObjectListener__V_args, // the arguments
  0, //arguments count
  MetaObject_methods_unRegisterListener_INLRMetaObjectListener__V_exceptions, // the declared exceptions
  MetaObject_MetainfoWrapper::MetaObject_method_unRegisterListener_INLRMetaObjectListener__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _MetaObject_methods[] = 
{
  &MetaObject_method_GetClass__L_acdk_lang_RClass_,
  &MetaObject_method_deleteInstanceMetaAttribute_INLRObject_INLRString__V,
  &MetaObject_method_deleteMetaAttribute_INLRString__V,
  &MetaObject_method_getInstanceMetaAttribute_INLRObject_INLRString__LRMetaAttribute_,
  &MetaObject_method_getInstanceMetaAttributes_INLRObject__LRMetaAttributeArray_,
  &MetaObject_method_getMetaAttribute_INLRString__LRMetaAttribute_,
  &MetaObject_method_getMetaAttributes__LRMetaAttributeArray_,
  &MetaObject_method_getObjectMetaAttribute_INLRString__LRObject_,
  &MetaObject_method_hasInstanceMetaAttribute_INLRObject_INLRString__Z,
  &MetaObject_method_hasMetaAttribute_INLRString__Z,
  &MetaObject_method_registerListener_INLRMetaObjectListener__V,
  &MetaObject_method_setInstanceMetaAttribute_INLRObject_INLRString_INLRObject__V,
  &MetaObject_method_setMetaAttribute_INLRString_INLRObject__V,
  &MetaObject_method_toTypeString_I_LRString_,
  &MetaObject_method_toTypeString__LRString_,
  &MetaObject_method_unRegisterListener_INLRMetaObjectListener__V,
  0
};


struct MetaObject_MetaInfoInitializer
{  MetaObject_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = MetaObject::clazzInfo();
    ci->fields =  _MetaObject_fields;
    ci->methods =  _MetaObject_methods;
    ci->_scopeParent = acdk_lang_dmi_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
MetaObject_MetaInfoInitializer MetaObject_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 


//static
::acdk::lang::RObject
MetaObjectImpl_create_array(int length)
{
  return new ObjectArrayImpl<RMetaObjectImpl>(length);
}

//static
::acdk::lang::RObject
MetaObjectImpl_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class MetaObjectImpl_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObjectImpl_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)MetaObjectImpl::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObjectImpl_method_MetaObjectImpl__LRMetaObjectImpl__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new MetaObjectImpl();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObjectImpl_method_toTypeString_I_LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObjectImpl* This = dmi_cast<MetaObjectImpl>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MetaObjectImpl::toTypeString(::acdk::lang::dmi::castTo< int>(args[0], dc));
    else
        ret = (::acdk::lang::RObject)This->toTypeString(::acdk::lang::dmi::castTo< int>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  MetaObjectImpl_method_toTypeString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    MetaObjectImpl* This = dmi_cast<MetaObjectImpl>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->MetaObjectImpl::toTypeString();
    else
        ret = (::acdk::lang::RObject)This->toTypeString();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _MetaObjectImpl_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectImpl_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectImpl_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectImpl_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_3_GetClass", // alternative name of method
  -1, // altlabelHashCode
  MetaObjectImpl_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  MetaObjectImpl_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  MetaObjectImpl_MetainfoWrapper::MetaObjectImpl_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectImpl_methods_MetaObjectImpl__LRMetaObjectImpl__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectImpl_methods_MetaObjectImpl__LRMetaObjectImpl__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectImpl_method_MetaObjectImpl__LRMetaObjectImpl_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "MetaObjectImpl", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  MetaObjectImpl::clazzInfo(), // return type
  "_0_MetaObjectImpl", // alternative name of method
  -1, // altlabelHashCode
  MetaObjectImpl_methods_MetaObjectImpl__LRMetaObjectImpl__args, // the arguments
  0, //arguments count
  MetaObjectImpl_methods_MetaObjectImpl__LRMetaObjectImpl__exceptions, // the declared exceptions
  MetaObjectImpl_MetainfoWrapper::MetaObjectImpl_method_MetaObjectImpl__LRMetaObjectImpl__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo MetaObjectImpl_methods_toTypeString_I_LRString__arg_format = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "format", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectImpl_methods_toTypeString_I_LRString__args[] = 
{
  &MetaObjectImpl_methods_toTypeString_I_LRString__arg_format,
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectImpl_methods_toTypeString_I_LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectImpl_method_toTypeString_I_LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toTypeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_1_toTypeString", // alternative name of method
  -1, // altlabelHashCode
  MetaObjectImpl_methods_toTypeString_I_LRString__args, // the arguments
  0, //arguments count
  MetaObjectImpl_methods_toTypeString_I_LRString__exceptions, // the declared exceptions
  MetaObjectImpl_MetainfoWrapper::MetaObjectImpl_method_toTypeString_I_LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MetaObjectImpl_methods_toTypeString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* MetaObjectImpl_methods_toTypeString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MetaObjectImpl_method_toTypeString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual,// class flags, like static, Constructor
  0, //AttributesRes
  "toTypeString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_2_toTypeString", // alternative name of method
  -1, // altlabelHashCode
  MetaObjectImpl_methods_toTypeString__LRString__args, // the arguments
  0, //arguments count
  MetaObjectImpl_methods_toTypeString__LRString__exceptions, // the declared exceptions
  MetaObjectImpl_MetainfoWrapper::MetaObjectImpl_method_toTypeString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _MetaObjectImpl_methods[] = 
{
  &MetaObjectImpl_method_GetClass__L_acdk_lang_RClass_,
  &MetaObjectImpl_method_MetaObjectImpl__LRMetaObjectImpl_,
  &MetaObjectImpl_method_toTypeString_I_LRString_,
  &MetaObjectImpl_method_toTypeString__LRString_,
  0
};


struct MetaObjectImpl_MetaInfoInitializer
{  MetaObjectImpl_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = MetaObjectImpl::clazzInfo();
    ci->fields =  _MetaObjectImpl_fields;
    ci->methods =  _MetaObjectImpl_methods;
    ci->_scopeParent = acdk_lang_dmi_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
MetaObjectImpl_MetaInfoInitializer MetaObjectImpl_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace lang
} // namespace dmi


namespace acdk { 
namespace lang { 
namespace dmi { 

using namespace acdk::lang;

//static
::acdk::lang::RObject
ScriptInterpreter_create_array(int length)
{
  return new ObjectArrayImpl<RScriptInterpreter>(length);
}

//static
::acdk::lang::RObject
ScriptInterpreter_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class ScriptInterpreter_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ScriptInterpreter_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)ScriptInterpreter::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ScriptInterpreter_method_eval_INLRString__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ScriptInterpreter* This = dmi_cast<ScriptInterpreter>(This_);
    ret = (::acdk::lang::RObject)This->eval(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ScriptInterpreter_method_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ScriptInterpreter* This = dmi_cast<ScriptInterpreter>(This_);
    This->interactive(::acdk::lang::dmi::castTo< RCharReader>(args[0], dc), ::acdk::lang::dmi::castTo< RCharWriter>(args[1], dc), ::acdk::lang::dmi::castTo< RCharWriter>(args[2], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ScriptInterpreter_method_parse_INLRFile__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ScriptInterpreter* This = dmi_cast<ScriptInterpreter>(This_);
    This->parse(::acdk::lang::dmi::castTo< RFile>(args[0], dc));
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  ScriptInterpreter_method_parse_INLRString__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ScriptInterpreter* This = dmi_cast<ScriptInterpreter>(This_);
    This->parse(::acdk::lang::dmi::castTo< RString>(args[0], dc));
    return methinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo* _ScriptInterpreter_fields[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScriptInterpreter_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptInterpreter_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScriptInterpreter_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_4_GetClass", // alternative name of method
  -1, // altlabelHashCode
  ScriptInterpreter_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  ScriptInterpreter_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  ScriptInterpreter_MetainfoWrapper::ScriptInterpreter_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScriptInterpreter_methods_eval_INLRString__LRObject__arg_code = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "code", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScriptInterpreter_methods_eval_INLRString__LRObject__args[] = 
{
  &ScriptInterpreter_methods_eval_INLRString__LRObject__arg_code,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptInterpreter_methods_eval_INLRString__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScriptInterpreter_method_eval_INLRString__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "eval", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_2_eval", // alternative name of method
  -1, // altlabelHashCode
  ScriptInterpreter_methods_eval_INLRString__LRObject__args, // the arguments
  0, //arguments count
  ScriptInterpreter_methods_eval_INLRString__LRObject__exceptions, // the declared exceptions
  ScriptInterpreter_MetainfoWrapper::ScriptInterpreter_method_eval_INLRString__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_arg_in = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "in", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharReader::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_arg_out = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "out", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_arg_err = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "err", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCharWriter::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_args[] = 
{
  &ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_arg_in,
  &ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_arg_out,
  &ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_arg_err,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScriptInterpreter_method_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "interactive", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_3_interactive", // alternative name of method
  -1, // altlabelHashCode
  ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_args, // the arguments
  0, //arguments count
  ScriptInterpreter_methods_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_exceptions, // the declared exceptions
  ScriptInterpreter_MetainfoWrapper::ScriptInterpreter_method_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScriptInterpreter_methods_parse_INLRFile__V_arg_file = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "file", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RFile::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScriptInterpreter_methods_parse_INLRFile__V_args[] = 
{
  &ScriptInterpreter_methods_parse_INLRFile__V_arg_file,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptInterpreter_methods_parse_INLRFile__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScriptInterpreter_method_parse_INLRFile__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_0_parse", // alternative name of method
  -1, // altlabelHashCode
  ScriptInterpreter_methods_parse_INLRFile__V_args, // the arguments
  0, //arguments count
  ScriptInterpreter_methods_parse_INLRFile__V_exceptions, // the declared exceptions
  ScriptInterpreter_MetainfoWrapper::ScriptInterpreter_method_parse_INLRFile__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScriptInterpreter_methods_parse_INLRString__V_arg_script = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "script", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScriptInterpreter_methods_parse_INLRString__V_args[] = 
{
  &ScriptInterpreter_methods_parse_INLRString__V_arg_script,
  0
};

::acdk::lang::dmi::ClazzInfo* ScriptInterpreter_methods_parse_INLRString__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScriptInterpreter_method_parse_INLRString__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiVirtual | ::acdk::lang::dmi::MiMiAbstract | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "parse", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_1_parse", // alternative name of method
  -1, // altlabelHashCode
  ScriptInterpreter_methods_parse_INLRString__V_args, // the arguments
  0, //arguments count
  ScriptInterpreter_methods_parse_INLRString__V_exceptions, // the declared exceptions
  ScriptInterpreter_MetainfoWrapper::ScriptInterpreter_method_parse_INLRString__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _ScriptInterpreter_methods[] = 
{
  &ScriptInterpreter_method_GetClass__L_acdk_lang_RClass_,
  &ScriptInterpreter_method_eval_INLRString__LRObject_,
  &ScriptInterpreter_method_interactive_INLRCharReader_INLRCharWriter_INLRCharWriter__V,
  &ScriptInterpreter_method_parse_INLRFile__V,
  &ScriptInterpreter_method_parse_INLRString__V,
  0
};


struct ScriptInterpreter_MetaInfoInitializer
{  ScriptInterpreter_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = ScriptInterpreter::clazzInfo();
    ci->fields =  _ScriptInterpreter_fields;
    ci->methods =  _ScriptInterpreter_methods;
    ci->_scopeParent = acdk_lang_dmi_unitInfo.getMetaInfo();
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
ScriptInterpreter_MetaInfoInitializer ScriptInterpreter_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace lang
} // namespace dmi

