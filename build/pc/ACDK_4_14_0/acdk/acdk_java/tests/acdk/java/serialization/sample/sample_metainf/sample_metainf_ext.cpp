// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../sample.h"
#include "../JavaSerSample.h"
#include "../sample.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>



//static
::acdk::lang::RObject
JavaSerSample_create_array(int length)
{
  return new ObjectArrayImpl<RJavaSerSample>(length);
}

//static
::acdk::lang::RObject
JavaSerSample_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class JavaSerSample_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  JavaSerSample_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)JavaSerSample::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  JavaSerSample_method_JavaSerSample_II_LRJavaSerSample__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new JavaSerSample(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  JavaSerSample_method_create_instance__LRObject__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)JavaSerSample::create_instance();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  JavaSerSample_method_getX__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    JavaSerSample* This = dmi_cast<JavaSerSample>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->JavaSerSample::getX();
    else
      ret = This->getX();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  JavaSerSample_method_getY__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    JavaSerSample* This = dmi_cast<JavaSerSample>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->JavaSerSample::getY();
    else
      ret = This->getY();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  JavaSerSample_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    JavaSerSample* This = dmi_cast<JavaSerSample>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->JavaSerSample::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  JavaSerSample_fields__privateString_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    JavaSerSample* This = dmi_cast<JavaSerSample>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_privateString, flags);
    else
      This->_privateString = (RString)var.getObjectVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  JavaSerSample_fields__x_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    JavaSerSample* This = dmi_cast<JavaSerSample>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_x, flags);
    else
      This->_x = var.getIntVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  JavaSerSample_fields__y_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    JavaSerSample* This = dmi_cast<JavaSerSample>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_y, flags);
    else
      This->_y = var.getIntVar();
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo JavaSerSample_fields__privateString = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo | 0x200000,
  0, //AttributesRes
  "_privateString", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(),
  JavaSerSample_MetainfoWrapper::JavaSerSample_fields__privateString_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo JavaSerSample_fields__x = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_x", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  JavaSerSample_MetainfoWrapper::JavaSerSample_fields__x_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo JavaSerSample_fields__y = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_y", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  JavaSerSample_MetainfoWrapper::JavaSerSample_fields__y_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _JavaSerSample_fields[] = 
{
  &JavaSerSample_fields__privateString,
  &JavaSerSample_fields__x,
  &JavaSerSample_fields__y,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* JavaSerSample_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* JavaSerSample_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo JavaSerSample_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_5_GetClass", // alternative name of method
  -1, // altlabelHashCode
  JavaSerSample_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  JavaSerSample_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  JavaSerSample_MetainfoWrapper::JavaSerSample_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__arg_x = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "x", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__arg_y = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "y", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__args[] = 
{
  &JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__arg_x,
  &JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__arg_y,
  0
};

::acdk::lang::dmi::ClazzInfo* JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo JavaSerSample_method_JavaSerSample_II_LRJavaSerSample_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "JavaSerSample", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  JavaSerSample::clazzInfo(), // return type
  "_1_JavaSerSample", // alternative name of method
  -1, // altlabelHashCode
  JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__args, // the arguments
  0, //arguments count
  JavaSerSample_methods_JavaSerSample_II_LRJavaSerSample__exceptions, // the declared exceptions
  JavaSerSample_MetainfoWrapper::JavaSerSample_method_JavaSerSample_II_LRJavaSerSample__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* JavaSerSample_methods_create_instance__LRObject__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* JavaSerSample_methods_create_instance__LRObject__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo JavaSerSample_method_create_instance__LRObject_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "create_instance", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RObject::clazzInfo(), // return type
  "_0_create_instance", // alternative name of method
  -1, // altlabelHashCode
  JavaSerSample_methods_create_instance__LRObject__args, // the arguments
  0, //arguments count
  JavaSerSample_methods_create_instance__LRObject__exceptions, // the declared exceptions
  JavaSerSample_MetainfoWrapper::JavaSerSample_method_create_instance__LRObject__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* JavaSerSample_methods_getX__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* JavaSerSample_methods_getX__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo JavaSerSample_method_getX__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getX", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_2_getX", // alternative name of method
  -1, // altlabelHashCode
  JavaSerSample_methods_getX__I_args, // the arguments
  0, //arguments count
  JavaSerSample_methods_getX__I_exceptions, // the declared exceptions
  JavaSerSample_MetainfoWrapper::JavaSerSample_method_getX__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* JavaSerSample_methods_getY__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* JavaSerSample_methods_getY__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo JavaSerSample_method_getY__I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getY", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_3_getY", // alternative name of method
  -1, // altlabelHashCode
  JavaSerSample_methods_getY__I_args, // the arguments
  0, //arguments count
  JavaSerSample_methods_getY__I_exceptions, // the declared exceptions
  JavaSerSample_MetainfoWrapper::JavaSerSample_method_getY__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* JavaSerSample_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* JavaSerSample_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo JavaSerSample_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_4_toString", // alternative name of method
  -1, // altlabelHashCode
  JavaSerSample_methods_toString__LRString__args, // the arguments
  0, //arguments count
  JavaSerSample_methods_toString__LRString__exceptions, // the declared exceptions
  JavaSerSample_MetainfoWrapper::JavaSerSample_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _JavaSerSample_methods[] = 
{
  &JavaSerSample_method_GetClass__L_acdk_lang_RClass_,
  &JavaSerSample_method_JavaSerSample_II_LRJavaSerSample_,
  &JavaSerSample_method_create_instance__LRObject_,
  &JavaSerSample_method_getX__I,
  &JavaSerSample_method_getY__I,
  &JavaSerSample_method_toString__LRString_,
  0
};


struct JavaSerSample_MetaInfoInitializer
{  JavaSerSample_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = JavaSerSample::clazzInfo();
    ci->fields =  _JavaSerSample_fields;
    ci->methods =  _JavaSerSample_methods;
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
JavaSerSample_MetaInfoInitializer JavaSerSample_MetaInfoInitializer_staticinstance__;




#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) sample_dummyExportFunc() {}
#endif

