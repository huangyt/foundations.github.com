// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../util.h"
#include "../CodeLocation.h"
#include "../Source.h"
#include "../StringSource.h"
#include "../TStackedSet.h"
#include "../util.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace aci { 
namespace util { 


//static
::acdk::lang::RObject
CodeLocation_create_array(int length)
{
  return new ObjectArrayImpl<RCodeLocation>(length);
}

//static
::acdk::lang::RObject
CodeLocation_create_array_array(int firstLength, int secondLength)
{
  return Nil;//not implemented yet
}
class CodeLocation_MetainfoWrapper 
{

public:
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_CodeLocation__LRCodeLocation__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new CodeLocation();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_CodeLocation_INLRString_IIII_LRCodeLocation__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new CodeLocation((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_CodeLocation_INLRString_III_LRCodeLocation__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)new CodeLocation((RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_GetClass__L_acdk_lang_RClass__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject)CodeLocation::GetClass();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_getCharPos__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->CodeLocation::getCharPos();
    else
      ret = This->getCharPos();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_getCloned__LRCodeLocation__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->CodeLocation::getCloned();
    else
        ret = (::acdk::lang::RObject)This->getCloned();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_getColumnPos__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->CodeLocation::getColumnPos();
    else
      ret = This->getColumnPos();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_getEndCharPos__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->CodeLocation::getEndCharPos();
    else
      ret = This->getEndCharPos();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_getLinePos__I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
      ret = This->CodeLocation::getLinePos();
    else
      ret = This->getLinePos();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_reset__V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->CodeLocation::reset();
    else
        This->reset();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_setCharPos_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->CodeLocation::setCharPos(args[0].getIntVar());
    else
        This->setCharPos(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_setColumnPos_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->CodeLocation::setColumnPos(args[0].getIntVar());
    else
        This->setColumnPos(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_setEndCharPos_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->CodeLocation::setEndCharPos(args[0].getIntVar());
    else
        This->setEndCharPos(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_setLinePos_I_V_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        This->CodeLocation::setLinePos(args[0].getIntVar());
    else
        This->setLinePos(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo* 
  CodeLocation_method_toString__LRString__dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiIvNoWeakBind)
        ret = (::acdk::lang::RObject)This->CodeLocation::toString();
    else
        ret = (::acdk::lang::RObject)This->toString();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  CodeLocation_fields__charPos_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_charPos, flags);
    else
      This->_charPos = var.getIntVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  CodeLocation_fields__columnPos_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_columnPos, flags);
    else
      This->_columnPos = var.getIntVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  CodeLocation_fields__endCharPos_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_endCharPos, flags);
    else
      This->_endCharPos = var.getIntVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  CodeLocation_fields__fileName_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_fileName, flags);
    else
      This->_fileName = (RString)var.getObjectVar();
    return fieldinf;
  }
  static const ::acdk::lang::dmi::ClazzFieldInfo*
  CodeLocation_fields__linePos_accessor(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& var, ::acdk::lang::dmi::DmiClient& dc, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzFieldInfo* fieldinf)
  {
    CodeLocation* This = dmi_cast<CodeLocation>(This_);
    if (flags & ::acdk::lang::dmi::MiReadOnly)
     var = ::acdk::lang::getScriptVarOf(This->_linePos, flags);
    else
      This->_linePos = var.getIntVar();
    return fieldinf;
  }
};

::acdk::lang::dmi::ClazzFieldInfo CodeLocation_fields__charPos = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_charPos", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  CodeLocation_MetainfoWrapper::CodeLocation_fields__charPos_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo CodeLocation_fields__columnPos = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_columnPos", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  CodeLocation_MetainfoWrapper::CodeLocation_fields__columnPos_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo CodeLocation_fields__endCharPos = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_endCharPos", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  CodeLocation_MetainfoWrapper::CodeLocation_fields__endCharPos_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo CodeLocation_fields__fileName = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_fileName", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(),
  CodeLocation_MetainfoWrapper::CodeLocation_fields__fileName_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo CodeLocation_fields__linePos = 
{
  ::acdk::lang::dmi::MiPrivate | ::acdk::lang::dmi::MiFieldInfo,
  0, //AttributesRes
  "_linePos", // name
   -1, // hashCode
   "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(),
  CodeLocation_MetainfoWrapper::CodeLocation_fields__linePos_accessor, // read/write access to this fields
  (void*)0 // address of field
};

::acdk::lang::dmi::ClazzFieldInfo* _CodeLocation_fields[] = 
{
  &CodeLocation_fields__charPos,
  &CodeLocation_fields__columnPos,
  &CodeLocation_fields__endCharPos,
  &CodeLocation_fields__fileName,
  &CodeLocation_fields__linePos,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_CodeLocation__LRCodeLocation__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_CodeLocation__LRCodeLocation__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_CodeLocation__LRCodeLocation_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "CodeLocation", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  CodeLocation::clazzInfo(), // return type
  "_0_CodeLocation", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_CodeLocation__LRCodeLocation__args, // the arguments
  0, //arguments count
  CodeLocation_methods_CodeLocation__LRCodeLocation__exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_CodeLocation__LRCodeLocation__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_fileName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "fileName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_charPos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "charPos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_columnPos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "columnPos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_linePos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "linePos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_endCharPos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit, 
  0, //AttributesRes
  "endCharPos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__args[] = 
{
  &CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_fileName,
  &CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_charPos,
  &CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_columnPos,
  &CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_linePos,
  &CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__arg_endCharPos,
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_CodeLocation_INLRString_IIII_LRCodeLocation_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "CodeLocation", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  CodeLocation::clazzInfo(), // return type
  "_1_CodeLocation", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__args, // the arguments
  0, //arguments count
  CodeLocation_methods_CodeLocation_INLRString_IIII_LRCodeLocation__exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_CodeLocation_INLRString_IIII_LRCodeLocation__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_fileName = 
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn, 
  0, //AttributesRes
  "fileName", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_charPos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "charPos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_columnPos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "columnPos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_linePos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "linePos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__args[] = 
{
  &CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_fileName,
  &CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_charPos,
  &CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_columnPos,
  &CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__arg_linePos,
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_CodeLocation_INLRString_III_LRCodeLocation_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,// class flags, like static, Constructor
  0, //AttributesRes
  "CodeLocation", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  CodeLocation::clazzInfo(), // return type
  "_2_CodeLocation", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__args, // the arguments
  0, //arguments count
  CodeLocation_methods_CodeLocation_INLRString_III_LRCodeLocation__exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_CodeLocation_INLRString_III_LRCodeLocation__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_GetClass__L_acdk_lang_RClass__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_GetClass__L_acdk_lang_RClass__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_GetClass__L_acdk_lang_RClass_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiStatic | ::acdk::lang::dmi::MiMethodInfo,// class flags, like static, Constructor
  0, //AttributesRes
  "GetClass", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::RClass::clazzInfo(), // return type
  "_e_GetClass", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_GetClass__L_acdk_lang_RClass__args, // the arguments
  0, //arguments count
  CodeLocation_methods_GetClass__L_acdk_lang_RClass__exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_GetClass__L_acdk_lang_RClass__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_getCharPos__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_getCharPos__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_getCharPos__I = 
{
  ::acdk::lang::dmi::MiReadOnly | ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getCharPos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_5_getCharPos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_getCharPos__I_args, // the arguments
  0, //arguments count
  CodeLocation_methods_getCharPos__I_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_getCharPos__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_getCloned__LRCodeLocation__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_getCloned__LRCodeLocation__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_getCloned__LRCodeLocation_ = 
{
  ::acdk::lang::dmi::MiReadOnly | ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getCloned", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RCodeLocation::clazzInfo(), // return type
  "_d_getCloned", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_getCloned__LRCodeLocation__args, // the arguments
  0, //arguments count
  CodeLocation_methods_getCloned__LRCodeLocation__exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_getCloned__LRCodeLocation__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_getColumnPos__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_getColumnPos__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_getColumnPos__I = 
{
  ::acdk::lang::dmi::MiReadOnly | ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getColumnPos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_9_getColumnPos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_getColumnPos__I_args, // the arguments
  0, //arguments count
  CodeLocation_methods_getColumnPos__I_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_getColumnPos__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_getEndCharPos__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_getEndCharPos__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_getEndCharPos__I = 
{
  ::acdk::lang::dmi::MiReadOnly | ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getEndCharPos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_7_getEndCharPos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_getEndCharPos__I_args, // the arguments
  0, //arguments count
  CodeLocation_methods_getEndCharPos__I_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_getEndCharPos__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_getLinePos__I_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_getLinePos__I_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_getLinePos__I = 
{
  ::acdk::lang::dmi::MiReadOnly | ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "getLinePos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz(), // return type
  "_b_getLinePos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_getLinePos__I_args, // the arguments
  0, //arguments count
  CodeLocation_methods_getLinePos__I_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_getLinePos__I_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_reset__V_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_reset__V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_reset__V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "reset", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_4_reset", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_reset__V_args, // the arguments
  0, //arguments count
  CodeLocation_methods_reset__V_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_reset__V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_setCharPos_I_V_arg_pos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "pos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_setCharPos_I_V_args[] = 
{
  &CodeLocation_methods_setCharPos_I_V_arg_pos,
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_setCharPos_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_setCharPos_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setCharPos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_6_setCharPos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_setCharPos_I_V_args, // the arguments
  0, //arguments count
  CodeLocation_methods_setCharPos_I_V_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_setCharPos_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_setColumnPos_I_V_arg_pos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "pos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_setColumnPos_I_V_args[] = 
{
  &CodeLocation_methods_setColumnPos_I_V_arg_pos,
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_setColumnPos_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_setColumnPos_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setColumnPos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_a_setColumnPos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_setColumnPos_I_V_args, // the arguments
  0, //arguments count
  CodeLocation_methods_setColumnPos_I_V_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_setColumnPos_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_setEndCharPos_I_V_arg_pos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "pos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_setEndCharPos_I_V_args[] = 
{
  &CodeLocation_methods_setEndCharPos_I_V_arg_pos,
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_setEndCharPos_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_setEndCharPos_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setEndCharPos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_8_setEndCharPos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_setEndCharPos_I_V_args, // the arguments
  0, //arguments count
  CodeLocation_methods_setEndCharPos_I_V_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_setEndCharPos_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo CodeLocation_methods_setLinePos_I_V_arg_pos = 
{
  ::acdk::lang::dmi::MiMethodArgInfo, 
  0, //AttributesRes
  "pos", // name of arg
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz() // type or arg
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_setLinePos_I_V_args[] = 
{
  &CodeLocation_methods_setLinePos_I_V_arg_pos,
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_setLinePos_I_V_exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_setLinePos_I_V = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "setLinePos", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getVoidClazz(), // return type
  "_c_setLinePos", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_setLinePos_I_V_args, // the arguments
  0, //arguments count
  CodeLocation_methods_setLinePos_I_V_exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_setLinePos_I_V_dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodArgInfo* CodeLocation_methods_toString__LRString__args[] = 
{
  0
};

::acdk::lang::dmi::ClazzInfo* CodeLocation_methods_toString__LRString__exceptions[] =
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo CodeLocation_method_toString__LRString_ = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiOrgPoly,// class flags, like static, Constructor
  0, //AttributesRes
  "toString", // name of method
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  RString::clazzInfo(), // return type
  "_3_toString", // alternative name of method
  -1, // altlabelHashCode
  CodeLocation_methods_toString__LRString__args, // the arguments
  0, //arguments count
  CodeLocation_methods_toString__LRString__exceptions, // the declared exceptions
  CodeLocation_MetainfoWrapper::CodeLocation_method_toString__LRString__dispatch, // invoke this method
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, // dispatch throwing exceptions
  0 // cached method signature hash
};

::acdk::lang::dmi::ClazzMethodInfo* _CodeLocation_methods[] = 
{
  &CodeLocation_method_CodeLocation__LRCodeLocation_,
  &CodeLocation_method_CodeLocation_INLRString_IIII_LRCodeLocation_,
  &CodeLocation_method_CodeLocation_INLRString_III_LRCodeLocation_,
  &CodeLocation_method_GetClass__L_acdk_lang_RClass_,
  &CodeLocation_method_getCharPos__I,
  &CodeLocation_method_getCloned__LRCodeLocation_,
  &CodeLocation_method_getColumnPos__I,
  &CodeLocation_method_getEndCharPos__I,
  &CodeLocation_method_getLinePos__I,
  &CodeLocation_method_reset__V,
  &CodeLocation_method_setCharPos_I_V,
  &CodeLocation_method_setColumnPos_I_V,
  &CodeLocation_method_setEndCharPos_I_V,
  &CodeLocation_method_setLinePos_I_V,
  &CodeLocation_method_toString__LRString_,
  0
};


struct CodeLocation_MetaInfoInitializer
{  CodeLocation_MetaInfoInitializer()
  {
    ::acdk::lang::dmi::ClazzInfo* ci = CodeLocation::clazzInfo();
    ci->fields =  _CodeLocation_fields;
    ci->methods =  _CodeLocation_methods;
    ci->registerClazzInfo(); // make sure clazzinfo is registered
    ci->_resolveMemberParents();
    ci->flags |= ::acdk::lang::dmi::MiResolved;
  }
};
CodeLocation_MetaInfoInitializer CodeLocation_MetaInfoInitializer_staticinstance__;


} // namespace acdk
} // namespace aci
} // namespace util


#if defined(ACDK_OS_WIN32)
// force to create an import lib on windows platforms
void __declspec(dllexport) util_dummyExportFunc() {}
#endif

