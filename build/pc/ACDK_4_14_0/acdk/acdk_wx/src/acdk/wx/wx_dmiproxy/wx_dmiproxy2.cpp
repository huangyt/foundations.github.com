// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../wx.h"
#include "../App.h"
#include "../ArtProvider.h"
#include "../Bitmap.h"
#include "../BitmapButton.h"
#include "../BitmapDataObject.h"
#include "../BoxSizer.h"
#include "../Button.h"
#include "../Caret.h"
#include "../CheckBox.h"
#include "../Choice.h"
#include "../ClientData.h"
#include "../ClientDC.h"
#include "../Clipboard.h"
#include "../Colour.h"
#include "../ColourData.h"
#include "../ColourDialog.h"
#include "../ComboBox.h"
#include "../Config.h"
#include "../Control.h"
#include "../ControlWithItems.h"
#include "../Cursor.h"
#include "../DataFormat.h"
#include "../DataObject.h"
#include "../DataObjectComposite.h"
#include "../DataObjectSimple.h"
#include "../DC.h"
#include "../Dialog.h"
#include "../DirDialog.h"
#include "../DropSource.h"
#include "../DropTarget.h"
#include "../Event.h"
#include "../FileDataObject.h"
#include "../FileDialog.h"
#include "../FileDropTarget.h"
#include "../Font.h"
#include "../FontData.h"
#include "../FontDialog.h"
#include "../Frame.h"
#include "../Gauge.h"
#include "../GDIImage.h"
#include "../GDIObject.h"
#include "../HtmlWindow.h"
#include "../Icon.h"
#include "../LayoutConstraints.h"
#include "../ListBox.h"
#include "../MDIChildFrame.h"
#include "../MDIClientWindow.h"
#include "../MDIParentFrame.h"
#include "../MemoryDC.h"
#include "../Menu.h"
#include "../MenuBar.h"
#include "../MenuItem.h"
#include "../Notebook.h"
#include "../PaintDC.h"
#include "../Panel.h"
#include "../Pen.h"
#include "../PostScriptDC.h"
#include "../ProgressDialog.h"
#include "../RadioBox.h"
#include "../RadioButton.h"
#include "../Region.h"
#include "../ScreenDC.h"
#include "../ScrolledWindow.h"
#include "../SingleChoiceDialog.h"
#include "../Sizer.h"
#include "../Slider.h"
#include "../SpinButton.h"
#include "../SpinCtrl.h"
#include "../SplitterWindow.h"
#include "../StaticBitmap.h"
#include "../StaticBox.h"
#include "../StaticText.h"
#include "../StatusBar.h"
#include "../Structs.h"
#include "../TextCtrl.h"
#include "../TextCtrlCharWriter.h"
#include "../TextDataObject.h"
#include "../TextDropTarget.h"
#include "../TextEntryDialog.h"
#include "../Timer.h"
#include "../ToggleButton.h"
#include "../ToolBar.h"
#include "../ToolTip.h"
#include "../TreeCtrl.h"
#include "../Validator.h"
#include "../Window.h"
#include "../WindowDC.h"
#include "../WindowStyle.h"
#include "../Wizard.h"
#include "../WizardPage.h"
#include "../wx.h"
#include "../WxObject.h"
#include "../XmlResource.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class NotebookEvent_DmiProxy
: extends NotebookEvent
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(NotebookEvent)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  NotebookEvent::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, NotebookEvent)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  NotebookEvent_DmiProxy(int eventType, int id, int sel, int oldSel)
  : NotebookEvent(eventType, id, sel, oldSel)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  NotebookEvent_DmiProxy()
  : NotebookEvent()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  NotebookEvent_DmiProxy(int eventType)
  : NotebookEvent(eventType)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  NotebookEvent_DmiProxy(int eventType, int id)
  : NotebookEvent(eventType, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  NotebookEvent_DmiProxy(int eventType, int id, int sel)
  : NotebookEvent(eventType, id, sel)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotebookEvent)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotebookEvent)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotebookEvent)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotebookEvent)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotebookEvent)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotebookEvent)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotebookEvent)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotebookEvent_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotebookEvent_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotebookEvent_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotebookEvent_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotebookEvent_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotebookEvent_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotebookEvent_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotebookEvent_DmiProxy(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotebookEvent_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotebookEvent_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo NotebookEvent_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  NotebookEvent::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _NotebookEvent_DmiProxy_interfaces[] =
{
  &NotebookEvent_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_eventType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "eventType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_sel =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "sel",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_oldSel =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "oldSel",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotebookEvent_methods__NotebookEvent_I_I_I_I_args[] = 
{
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_eventType,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_id,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_sel,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I_arg_oldSel,
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "NotebookEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotebookEvent::clazzInfo(), // returnType
  "_0_NotebookEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotebookEvent_methods__NotebookEvent_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  NotebookEvent_DmiProxy::_NotebookEvent_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotebookEvent_methods__NotebookEvent_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotebookEvent_DmiProxy_methods__NotebookEvent = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "NotebookEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotebookEvent::clazzInfo(), // returnType
  "_1_NotebookEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotebookEvent_methods__NotebookEvent_args,
  0, // argumentCount
  0, // excpetions,
  NotebookEvent_DmiProxy::_NotebookEvent_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_arg_eventType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "eventType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotebookEvent_methods__NotebookEvent_I_args[] = 
{
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_arg_eventType,
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "NotebookEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotebookEvent::clazzInfo(), // returnType
  "_2_NotebookEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotebookEvent_methods__NotebookEvent_I_args,
  0, // argumentCount
  0, // excpetions,
  NotebookEvent_DmiProxy::_NotebookEvent_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_arg_eventType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "eventType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotebookEvent_methods__NotebookEvent_I_I_args[] = 
{
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_arg_eventType,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "NotebookEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotebookEvent::clazzInfo(), // returnType
  "_3_NotebookEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotebookEvent_methods__NotebookEvent_I_I_args,
  0, // argumentCount
  0, // excpetions,
  NotebookEvent_DmiProxy::_NotebookEvent_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_arg_eventType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "eventType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_arg_sel =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "sel",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotebookEvent_methods__NotebookEvent_I_I_I_args[] = 
{
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_arg_eventType,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_arg_id,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_arg_sel,
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "NotebookEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotebookEvent::clazzInfo(), // returnType
  "_4_NotebookEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotebookEvent_methods__NotebookEvent_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  NotebookEvent_DmiProxy::_NotebookEvent_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* NotebookEvent_methods[] = 
{
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I_I,
  &NotebookEvent_DmiProxy_methods__NotebookEvent,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I,
  &NotebookEvent_DmiProxy_methods__NotebookEvent_I_I_I,
  0
};

::acdk::lang::dmi::ClazzInfo* NotebookEvent_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "NotebookEvent_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _NotebookEvent_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     NotebookEvent_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_NotebookEvent_DmiProxy(NotebookEvent_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Notebook_DmiProxy
: extends Notebook
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Notebook)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Notebook::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Notebook)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Notebook_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Notebook(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Notebook_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : Notebook(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Notebook_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : Notebook(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Notebook_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Notebook(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  bool addPage(IN(::acdk::wx::RWindow) pPage, IN(::acdk::lang::RString) strText, bool bSelect, int imageId)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::addPage(pPage, strText, bSelect, imageId);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(4);
    __acdk_args[0] = ::acdk::lang::inOf(pPage);
    __acdk_args[1] = ::acdk::lang::inOf(strText);
    __acdk_args[2] = ::acdk::lang::inOf(bSelect);
    __acdk_args[3] = ::acdk::lang::inOf(imageId);
    _dmiProxyGetTarget()->standardDispatch("addPage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::wx::RSize calcSizeFromPage(IN(::acdk::wx::RSize) sizePage)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[11]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::calcSizeFromPage(sizePage);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(sizePage);
    _dmiProxyGetTarget()->standardDispatch("calcSizeFromPage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RSize)(::acdk::lang::RObject)__acdk_retval;
  }
  bool deleteAllPages()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::deleteAllPages();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("deleteAllPages", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool deletePage(int nPage)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[13]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::deletePage(nPage);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    _dmiProxyGetTarget()->standardDispatch("deletePage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getPageImage(int nPage)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[17]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::getPageImage(nPage);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    _dmiProxyGetTarget()->standardDispatch("getPageImage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString getPageText(int nPage)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[18]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::getPageText(nPage);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    _dmiProxyGetTarget()->standardDispatch("getPageText", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  int getRowCount()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[19]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::getRowCount();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getRowCount", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getSelection()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[20]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::getSelection();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getSelection", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool insertPage(int nPage, IN(::acdk::wx::RWindow) pPage, IN(::acdk::lang::RString) strText, bool bSelect, int imageId)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[21]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::insertPage(nPage, pPage, strText, bSelect, imageId);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    __acdk_args[1] = ::acdk::lang::inOf(pPage);
    __acdk_args[2] = ::acdk::lang::inOf(strText);
    __acdk_args[3] = ::acdk::lang::inOf(bSelect);
    __acdk_args[4] = ::acdk::lang::inOf(imageId);
    _dmiProxyGetTarget()->standardDispatch("insertPage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool removePage(int nPage)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[24]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::removePage(nPage);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    _dmiProxyGetTarget()->standardDispatch("removePage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void setImageList(IN(::acdk::wx::RImageList) imageList)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[25]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setImageList(imageList);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(imageList);
    _dmiProxyGetTarget()->standardDispatch("setImageList", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setPadding(IN(::acdk::wx::RSize) padding)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[26]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setPadding(padding);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(padding);
    _dmiProxyGetTarget()->standardDispatch("setPadding", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool setPageImage(int nPage, int nImage)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[27]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setPageImage(nPage, nImage);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    __acdk_args[1] = ::acdk::lang::inOf(nImage);
    _dmiProxyGetTarget()->standardDispatch("setPageImage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void setPageSize(IN(::acdk::wx::RSize) size)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[28]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setPageSize(size);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(size);
    _dmiProxyGetTarget()->standardDispatch("setPageSize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool setPageText(int nPage, IN(::acdk::lang::RString) strText)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[29]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setPageText(nPage, strText);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    __acdk_args[1] = ::acdk::lang::inOf(strText);
    _dmiProxyGetTarget()->standardDispatch("setPageText", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int setSelection(int nPage)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[30]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setSelection(nPage);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(nPage);
    _dmiProxyGetTarget()->standardDispatch("setSelection", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void setTabSize(IN(::acdk::wx::RSize) sz)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clazzInfo()->methods[31]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setTabSize(sz);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(sz);
    _dmiProxyGetTarget()->standardDispatch("setTabSize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Notebook)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Notebook_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Notebook_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Notebook_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Notebook_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Notebook_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Notebook_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Notebook::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Notebook_DmiProxy_interfaces[] =
{
  &Notebook_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Notebook_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Notebook_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Notebook::clazzInfo(), // returnType
  "_0_Notebook_DmiProxy", // altname
  -1, // altnamehashCode
  Notebook_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Notebook_DmiProxy::_Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Notebook_methods__Notebook_in_acdk_wx_Window_I_args[] = 
{
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_arg_parent,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Notebook_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Notebook::clazzInfo(), // returnType
  "_1_Notebook_DmiProxy", // altname
  -1, // altnamehashCode
  Notebook_methods__Notebook_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  Notebook_DmiProxy::_Notebook_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Notebook_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Notebook_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Notebook::clazzInfo(), // returnType
  "_2_Notebook_DmiProxy", // altname
  -1, // altnamehashCode
  Notebook_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Notebook_DmiProxy::_Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Notebook_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Notebook_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Notebook::clazzInfo(), // returnType
  "_3_Notebook_DmiProxy", // altname
  -1, // altnamehashCode
  Notebook_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Notebook_DmiProxy::_Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Notebook_methods[] = 
{
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &Notebook_DmiProxy_methods__Notebook_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  0
};

::acdk::lang::dmi::ClazzInfo* Notebook_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Notebook_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Notebook_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Notebook_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Notebook_DmiProxy(Notebook_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Panel_DmiProxy
: extends Panel
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Panel)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Panel::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Panel)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Panel_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Panel(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Panel_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : Panel(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Panel_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : Panel(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Panel_DmiProxy(IN(::acdk::wx::RWindow) parent, int x, int y, int width, int height, int style)
  : Panel(parent, x, y, width, height, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Panel_DmiProxy(IN(::acdk::wx::RWindow) parent, int x, int y, int width, int height)
  : Panel(parent, x, y, width, height)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Panel_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Panel(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Panel_DmiProxy(IN(::acdk::wx::RWindow) parent)
  : Panel(parent)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Panel)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Panel_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Panel_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Panel_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Panel_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Panel_in_acdk_wx_Window_I_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Panel_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Panel_in_acdk_wx_Window_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Panel_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Panel_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Panel_in_acdk_wx_Window_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Panel_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Panel_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Panel::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Panel_DmiProxy_interfaces[] =
{
  &Panel_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Panel_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Panel_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Panel::clazzInfo(), // returnType
  "_6_Panel_DmiProxy", // altname
  -1, // altnamehashCode
  Panel_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Panel_DmiProxy::_Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Panel_methods__Panel_in_acdk_wx_Window_I_args[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_arg_parent,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Panel_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Panel::clazzInfo(), // returnType
  "_4_Panel_DmiProxy", // altname
  -1, // altnamehashCode
  Panel_methods__Panel_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  Panel_DmiProxy::_Panel_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Panel_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Panel_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Panel::clazzInfo(), // returnType
  "_5_Panel_DmiProxy", // altname
  -1, // altnamehashCode
  Panel_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Panel_DmiProxy::_Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_x =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "x",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_y =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "y",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_height =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "height",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Panel_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_args[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_parent,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_x,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_y,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_width,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_height,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Panel_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Panel::clazzInfo(), // returnType
  "_0_Panel_DmiProxy", // altname
  -1, // altnamehashCode
  Panel_methods__Panel_in_acdk_wx_Window_I_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Panel_DmiProxy::_Panel_in_acdk_wx_Window_I_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_x =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "x",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_y =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "y",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_height =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "height",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Panel_methods__Panel_in_acdk_wx_Window_I_I_I_I_args[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_parent,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_x,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_y,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_width,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_arg_height,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Panel_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Panel::clazzInfo(), // returnType
  "_1_Panel_DmiProxy", // altname
  -1, // altnamehashCode
  Panel_methods__Panel_in_acdk_wx_Window_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Panel_DmiProxy::_Panel_in_acdk_wx_Window_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Panel_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Panel_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Panel::clazzInfo(), // returnType
  "_2_Panel_DmiProxy", // altname
  -1, // altnamehashCode
  Panel_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Panel_DmiProxy::_Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Panel_methods__Panel_in_acdk_wx_Window_args[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_arg_parent,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Panel_DmiProxy_methods__Panel_in_acdk_wx_Window = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Panel_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Panel::clazzInfo(), // returnType
  "_3_Panel_DmiProxy", // altname
  -1, // altnamehashCode
  Panel_methods__Panel_in_acdk_wx_Window_args,
  0, // argumentCount
  0, // excpetions,
  Panel_DmiProxy::_Panel_in_acdk_wx_Window_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Panel_methods[] = 
{
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I_I,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_I_I_I,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &Panel_DmiProxy_methods__Panel_in_acdk_wx_Window,
  0
};

::acdk::lang::dmi::ClazzInfo* Panel_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Panel_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Panel_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Panel_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Panel_DmiProxy(Panel_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Pen_DmiProxy
: extends Pen
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Pen)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Pen::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Pen)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Pen_DmiProxy()
  : Pen()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Pen_DmiProxy(IN(::acdk::wx::RColour) col, int width, int style)
  : Pen(col, width, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  bool ok()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::clazzInfo()->methods[18]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::ok();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("ok", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Pen)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Pen_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Pen_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Pen_in_acdk_wx_Colour_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Pen_DmiProxy((::acdk::wx::RColour)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Pen_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Pen::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Pen_DmiProxy_interfaces[] =
{
  &Pen_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Pen_methods__Pen_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Pen_DmiProxy_methods__Pen = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Pen_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Pen::clazzInfo(), // returnType
  "_0_Pen_DmiProxy", // altname
  -1, // altnamehashCode
  Pen_methods__Pen_args,
  0, // argumentCount
  0, // excpetions,
  Pen_DmiProxy::_Pen_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I_arg_col =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "col",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Colour::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Pen_methods__Pen_in_acdk_wx_Colour_I_I_args[] = 
{
  &Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I_arg_col,
  &Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I_arg_width,
  &Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Pen_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Pen::clazzInfo(), // returnType
  "_1_Pen_DmiProxy", // altname
  -1, // altnamehashCode
  Pen_methods__Pen_in_acdk_wx_Colour_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Pen_DmiProxy::_Pen_in_acdk_wx_Colour_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Pen_methods[] = 
{
  &Pen_DmiProxy_methods__Pen,
  &Pen_DmiProxy_methods__Pen_in_acdk_wx_Colour_I_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Pen_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Pen_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Pen_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Pen_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Pen_DmiProxy(Pen_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Brush_DmiProxy
: extends Brush
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Brush)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Brush::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Brush)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Brush_DmiProxy()
  : Brush()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Brush_DmiProxy(IN(::acdk::wx::RColour) col, int style)
  : Brush(col, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Brush_DmiProxy(IN(::acdk::wx::RBitmap) stipple)
  : Brush(stipple)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Brush_DmiProxy(IN(::acdk::wx::RBrush) brush)
  : Brush(brush)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void setColour(IN(::acdk::wx::RColour) col)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::clazzInfo()->methods[20]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::setColour(col);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(col);
    _dmiProxyGetTarget()->standardDispatch("setColour", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setColour(char r, char g, char b)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::clazzInfo()->methods[21]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::setColour(r, g, b);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(r);
    __acdk_args[1] = ::acdk::lang::inOf(g);
    __acdk_args[2] = ::acdk::lang::inOf(b);
    _dmiProxyGetTarget()->standardDispatch("setColour", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStipple(IN(::acdk::wx::RBitmap) stipple)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::clazzInfo()->methods[22]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::setStipple(stipple);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(stipple);
    _dmiProxyGetTarget()->standardDispatch("setStipple", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStyle(int style)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::clazzInfo()->methods[23]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::setStyle(style);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(style);
    _dmiProxyGetTarget()->standardDispatch("setStyle", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Brush)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Brush_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Brush_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Brush_in_acdk_wx_Colour_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Brush_DmiProxy((::acdk::wx::RColour)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Brush_in_acdk_wx_Bitmap_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Brush_DmiProxy((::acdk::wx::RBitmap)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Brush_in_acdk_wx_Brush_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Brush_DmiProxy((::acdk::wx::RBrush)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Brush_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Brush::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Brush_DmiProxy_interfaces[] =
{
  &Brush_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Brush_methods__Brush_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Brush_DmiProxy_methods__Brush = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Brush_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Brush::clazzInfo(), // returnType
  "_0_Brush_DmiProxy", // altname
  -1, // altnamehashCode
  Brush_methods__Brush_args,
  0, // argumentCount
  0, // excpetions,
  Brush_DmiProxy::_Brush_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Brush_DmiProxy_methods__Brush_in_acdk_wx_Colour_I_arg_col =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "col",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Colour::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Brush_DmiProxy_methods__Brush_in_acdk_wx_Colour_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Brush_methods__Brush_in_acdk_wx_Colour_I_args[] = 
{
  &Brush_DmiProxy_methods__Brush_in_acdk_wx_Colour_I_arg_col,
  &Brush_DmiProxy_methods__Brush_in_acdk_wx_Colour_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Brush_DmiProxy_methods__Brush_in_acdk_wx_Colour_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Brush_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Brush::clazzInfo(), // returnType
  "_1_Brush_DmiProxy", // altname
  -1, // altnamehashCode
  Brush_methods__Brush_in_acdk_wx_Colour_I_args,
  0, // argumentCount
  0, // excpetions,
  Brush_DmiProxy::_Brush_in_acdk_wx_Colour_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Brush_DmiProxy_methods__Brush_in_acdk_wx_Bitmap_arg_stipple =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "stipple",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Brush_methods__Brush_in_acdk_wx_Bitmap_args[] = 
{
  &Brush_DmiProxy_methods__Brush_in_acdk_wx_Bitmap_arg_stipple,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Brush_DmiProxy_methods__Brush_in_acdk_wx_Bitmap = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Brush_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Brush::clazzInfo(), // returnType
  "_2_Brush_DmiProxy", // altname
  -1, // altnamehashCode
  Brush_methods__Brush_in_acdk_wx_Bitmap_args,
  0, // argumentCount
  0, // excpetions,
  Brush_DmiProxy::_Brush_in_acdk_wx_Bitmap_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Brush_DmiProxy_methods__Brush_in_acdk_wx_Brush_arg_brush =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "brush",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Brush::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Brush_methods__Brush_in_acdk_wx_Brush_args[] = 
{
  &Brush_DmiProxy_methods__Brush_in_acdk_wx_Brush_arg_brush,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Brush_DmiProxy_methods__Brush_in_acdk_wx_Brush = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Brush_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Brush::clazzInfo(), // returnType
  "_3_Brush_DmiProxy", // altname
  -1, // altnamehashCode
  Brush_methods__Brush_in_acdk_wx_Brush_args,
  0, // argumentCount
  0, // excpetions,
  Brush_DmiProxy::_Brush_in_acdk_wx_Brush_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Brush_methods[] = 
{
  &Brush_DmiProxy_methods__Brush,
  &Brush_DmiProxy_methods__Brush_in_acdk_wx_Colour_I,
  &Brush_DmiProxy_methods__Brush_in_acdk_wx_Bitmap,
  &Brush_DmiProxy_methods__Brush_in_acdk_wx_Brush,
  0
};

::acdk::lang::dmi::ClazzInfo* Brush_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Brush_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Brush_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Brush_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Brush_DmiProxy(Brush_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ProgressDialog_DmiProxy
: extends ProgressDialog
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ProgressDialog)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ProgressDialog::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ProgressDialog)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ProgressDialog_DmiProxy(IN(::acdk::lang::RString) title, IN(::acdk::lang::RString) message, int maximum, IN(::acdk::wx::RWindow) parent, int style)
  : ProgressDialog(title, message, maximum, parent, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ProgressDialog_DmiProxy(IN(::acdk::lang::RString) title, IN(::acdk::lang::RString) message)
  : ProgressDialog(title, message)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ProgressDialog_DmiProxy(IN(::acdk::lang::RString) title, IN(::acdk::lang::RString) message, int maximum)
  : ProgressDialog(title, message, maximum)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ProgressDialog_DmiProxy(IN(::acdk::lang::RString) title, IN(::acdk::lang::RString) message, int maximum, IN(::acdk::wx::RWindow) parent)
  : ProgressDialog(title, message, maximum, parent)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ProgressDialog)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ProgressDialog_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), args[2].getIntVar(), (::acdk::wx::RWindow)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ProgressDialog_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ProgressDialog_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), args[2].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ProgressDialog_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), args[2].getIntVar(), (::acdk::wx::RWindow)args[3].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ProgressDialog_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ProgressDialog::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ProgressDialog_DmiProxy_interfaces[] =
{
  &ProgressDialog_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_maximum =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "maximum",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_args[] = 
{
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_title,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_message,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_maximum,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_parent,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ProgressDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ProgressDialog::clazzInfo(), // returnType
  "_0_ProgressDialog_DmiProxy", // altname
  -1, // altnamehashCode
  ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  ProgressDialog_DmiProxy::_ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_args[] = 
{
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_arg_title,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_arg_message,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ProgressDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ProgressDialog::clazzInfo(), // returnType
  "_1_ProgressDialog_DmiProxy", // altname
  -1, // altnamehashCode
  ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  ProgressDialog_DmiProxy::_ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_arg_maximum =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "maximum",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_args[] = 
{
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_arg_title,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_arg_message,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_arg_maximum,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ProgressDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ProgressDialog::clazzInfo(), // returnType
  "_2_ProgressDialog_DmiProxy", // altname
  -1, // altnamehashCode
  ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_args,
  0, // argumentCount
  0, // excpetions,
  ProgressDialog_DmiProxy::_ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_maximum =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "maximum",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_args[] = 
{
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_title,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_message,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_maximum,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_arg_parent,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ProgressDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ProgressDialog::clazzInfo(), // returnType
  "_3_ProgressDialog_DmiProxy", // altname
  -1, // altnamehashCode
  ProgressDialog_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_args,
  0, // argumentCount
  0, // excpetions,
  ProgressDialog_DmiProxy::_ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ProgressDialog_methods[] = 
{
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window_I,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I,
  &ProgressDialog_DmiProxy_methods__ProgressDialog_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Window,
  0
};

::acdk::lang::dmi::ClazzInfo* ProgressDialog_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ProgressDialog_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ProgressDialog_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ProgressDialog_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ProgressDialog_DmiProxy(ProgressDialog_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class RadioBox_DmiProxy
: extends RadioBox
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(RadioBox)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  RadioBox::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, RadioBox)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : RadioBox(parent, id, title, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int majorDim)
  : RadioBox(parent, id, title, pos, size, majorDim)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int majorDim, int style)
  : RadioBox(parent, id, title, pos, size, majorDim, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int majorDim, int style, IN(::acdk::lang::RStringArray) choices)
  : RadioBox(parent, id, title, pos, size, majorDim, style, choices)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title)
  : RadioBox(parent, id, title)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos)
  : RadioBox(parent, id, title, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int majorDim, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : RadioBox(parent, id, title, pos, size, majorDim, style, choices, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int majorDim, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator)
  : RadioBox(parent, id, title, pos, size, majorDim, style, choices, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioBox)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar(), (::acdk::lang::RStringArray)args[7].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar(), (::acdk::lang::RStringArray)args[7].getObjectVar(), (::acdk::wx::RValidator)args[8].getObjectVar(), (::acdk::lang::RString)args[9].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar(), (::acdk::lang::RStringArray)args[7].getObjectVar(), (::acdk::wx::RValidator)args[8].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo RadioBox_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  RadioBox::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _RadioBox_DmiProxy_interfaces[] =
{
  &RadioBox_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_4_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_majorDim =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "majorDim",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_majorDim,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_5_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_majorDim =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "majorDim",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_title,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_pos,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_size,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_majorDim,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_6_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_majorDim =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "majorDim",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_title,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_pos,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_size,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_majorDim,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_style,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_arg_choices,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_7_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_2_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_3_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_majorDim =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "majorDim",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_title,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_majorDim,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_1_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_majorDim =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "majorDim",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_title,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_majorDim,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioBox::clazzInfo(), // returnType
  "_8_RadioBox_DmiProxy", // altname
  -1, // altnamehashCode
  RadioBox_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  RadioBox_DmiProxy::_RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* RadioBox_methods[] = 
{
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String,
  &RadioBox_DmiProxy_methods__RadioBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_in_acdk_lang_StringArray_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* RadioBox_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "RadioBox_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _RadioBox_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     RadioBox_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_RadioBox_DmiProxy(RadioBox_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class RadioButton_DmiProxy
: extends RadioButton
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(RadioButton)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  RadioButton::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, RadioButton)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  RadioButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : RadioButton(parent, id, label, pos, size, style, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label)
  : RadioButton(parent, id, label)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos)
  : RadioButton(parent, id, label, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : RadioButton(parent, id, label, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : RadioButton(parent, id, label, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  RadioButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator)
  : RadioButton(parent, id, label, pos, size, style, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, RadioButton)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar(), (::acdk::lang::RString)args[7].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new RadioButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo RadioButton_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  RadioButton::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _RadioButton_DmiProxy_interfaces[] =
{
  &RadioButton_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_label,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "RadioButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioButton::clazzInfo(), // returnType
  "_0_RadioButton_DmiProxy", // altname
  -1, // altnamehashCode
  RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  RadioButton_DmiProxy::_RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_arg_label,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioButton::clazzInfo(), // returnType
  "_1_RadioButton_DmiProxy", // altname
  -1, // altnamehashCode
  RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  RadioButton_DmiProxy::_RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_label,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioButton::clazzInfo(), // returnType
  "_2_RadioButton_DmiProxy", // altname
  -1, // altnamehashCode
  RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  RadioButton_DmiProxy::_RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_label,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioButton::clazzInfo(), // returnType
  "_3_RadioButton_DmiProxy", // altname
  -1, // altnamehashCode
  RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  RadioButton_DmiProxy::_RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioButton::clazzInfo(), // returnType
  "_4_RadioButton_DmiProxy", // altname
  -1, // altnamehashCode
  RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  RadioButton_DmiProxy::_RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args[] = 
{
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_label,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "RadioButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  RadioButton::clazzInfo(), // returnType
  "_5_RadioButton_DmiProxy", // altname
  -1, // altnamehashCode
  RadioButton_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  RadioButton_DmiProxy::_RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* RadioButton_methods[] = 
{
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &RadioButton_DmiProxy_methods__RadioButton_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* RadioButton_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "RadioButton_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _RadioButton_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     RadioButton_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_RadioButton_DmiProxy(RadioButton_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Region_DmiProxy
: extends Region
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Region)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Region::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Region)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Region_DmiProxy()
  : Region()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Region_DmiProxy(int x, int y, int w, int h)
  : Region(x, y, w, h)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Region_DmiProxy(IN(::acdk::wx::RPoint) topLeft, IN(::acdk::wx::RPoint) bottomRight)
  : Region(topLeft, bottomRight)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Region_DmiProxy(IN(::acdk::wx::RRect) rect)
  : Region(rect)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Region_DmiProxy(IN(::acdk::wx::RBitmap) bmp, IN(::acdk::wx::RColour) transColour, int tolerance)
  : Region(bmp, transColour, tolerance)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Region_DmiProxy(IN(::acdk::wx::RBitmap) bmp)
  : Region(bmp)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Region_DmiProxy(IN(::acdk::wx::RBitmap) bmp, IN(::acdk::wx::RColour) transColour)
  : Region(bmp, transColour)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Region)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Region)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Region)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Region)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Region)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Region)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Region)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Region_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Region_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Region_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Region_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Region_in_acdk_wx_Point_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Region_DmiProxy((::acdk::wx::RPoint)args[0].getObjectVar(), (::acdk::wx::RPoint)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Region_in_acdk_wx_Rect_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Region_DmiProxy((::acdk::wx::RRect)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Region_DmiProxy((::acdk::wx::RBitmap)args[0].getObjectVar(), (::acdk::wx::RColour)args[1].getObjectVar(), args[2].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Region_in_acdk_wx_Bitmap_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Region_DmiProxy((::acdk::wx::RBitmap)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Region_DmiProxy((::acdk::wx::RBitmap)args[0].getObjectVar(), (::acdk::wx::RColour)args[1].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Region_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Region::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Region_DmiProxy_interfaces[] =
{
  &Region_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Region_methods__Region_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Region_DmiProxy_methods__Region = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Region_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Region::clazzInfo(), // returnType
  "_0_Region_DmiProxy", // altname
  -1, // altnamehashCode
  Region_methods__Region_args,
  0, // argumentCount
  0, // excpetions,
  Region_DmiProxy::_Region_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_I_I_I_I_arg_x =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "x",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_I_I_I_I_arg_y =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "y",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_I_I_I_I_arg_w =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "w",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_I_I_I_I_arg_h =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "h",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Region_methods__Region_I_I_I_I_args[] = 
{
  &Region_DmiProxy_methods__Region_I_I_I_I_arg_x,
  &Region_DmiProxy_methods__Region_I_I_I_I_arg_y,
  &Region_DmiProxy_methods__Region_I_I_I_I_arg_w,
  &Region_DmiProxy_methods__Region_I_I_I_I_arg_h,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Region_DmiProxy_methods__Region_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Region_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Region::clazzInfo(), // returnType
  "_1_Region_DmiProxy", // altname
  -1, // altnamehashCode
  Region_methods__Region_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Region_DmiProxy::_Region_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point_arg_topLeft =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "topLeft",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point_arg_bottomRight =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bottomRight",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Region_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point_args[] = 
{
  &Region_DmiProxy_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point_arg_topLeft,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point_arg_bottomRight,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Region_DmiProxy_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Region_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Region::clazzInfo(), // returnType
  "_2_Region_DmiProxy", // altname
  -1, // altnamehashCode
  Region_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Region_DmiProxy::_Region_in_acdk_wx_Point_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Rect_arg_rect =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "rect",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Rect::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Region_methods__Region_in_acdk_wx_Rect_args[] = 
{
  &Region_DmiProxy_methods__Region_in_acdk_wx_Rect_arg_rect,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Region_DmiProxy_methods__Region_in_acdk_wx_Rect = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Region_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Region::clazzInfo(), // returnType
  "_3_Region_DmiProxy", // altname
  -1, // altnamehashCode
  Region_methods__Region_in_acdk_wx_Rect_args,
  0, // argumentCount
  0, // excpetions,
  Region_DmiProxy::_Region_in_acdk_wx_Rect_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_arg_bmp =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bmp",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_arg_transColour =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "transColour",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Colour::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_arg_tolerance =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "tolerance",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Region_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_args[] = 
{
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_arg_bmp,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_arg_transColour,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_arg_tolerance,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Region_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Region::clazzInfo(), // returnType
  "_4_Region_DmiProxy", // altname
  -1, // altnamehashCode
  Region_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_args,
  0, // argumentCount
  0, // excpetions,
  Region_DmiProxy::_Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_arg_bmp =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bmp",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Region_methods__Region_in_acdk_wx_Bitmap_args[] = 
{
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_arg_bmp,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Region_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Region::clazzInfo(), // returnType
  "_5_Region_DmiProxy", // altname
  -1, // altnamehashCode
  Region_methods__Region_in_acdk_wx_Bitmap_args,
  0, // argumentCount
  0, // excpetions,
  Region_DmiProxy::_Region_in_acdk_wx_Bitmap_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_arg_bmp =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bmp",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_arg_transColour =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "transColour",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Colour::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Region_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_args[] = 
{
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_arg_bmp,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_arg_transColour,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Region_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Region::clazzInfo(), // returnType
  "_6_Region_DmiProxy", // altname
  -1, // altnamehashCode
  Region_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_args,
  0, // argumentCount
  0, // excpetions,
  Region_DmiProxy::_Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Region_methods[] = 
{
  &Region_DmiProxy_methods__Region,
  &Region_DmiProxy_methods__Region_I_I_I_I,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Point_in_acdk_wx_Point,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Rect,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour_I,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap,
  &Region_DmiProxy_methods__Region_in_acdk_wx_Bitmap_in_acdk_wx_Colour,
  0
};

::acdk::lang::dmi::ClazzInfo* Region_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Region_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Region_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Region_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Region_DmiProxy(Region_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ScrolledWindow_DmiProxy
: extends ScrolledWindow
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ScrolledWindow)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ScrolledWindow::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ScrolledWindow)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ScrolledWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : ScrolledWindow(parent, id, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrolledWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : ScrolledWindow(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrolledWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : ScrolledWindow(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrolledWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : ScrolledWindow(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrolledWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : ScrolledWindow(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void enableScrolling(bool x_scrolling, bool y_scrolling)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[10]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::enableScrolling(x_scrolling, y_scrolling);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x_scrolling);
    __acdk_args[1] = ::acdk::lang::inOf(y_scrolling);
    _dmiProxyGetTarget()->standardDispatch("enableScrolling", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void getScrollPixelsPerUnit(OUT(int) pixelsPerUnitX, OUT(int) pixelsPerUnitY)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[14]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::getScrollPixelsPerUnit(pixelsPerUnitX, pixelsPerUnitY);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::outOf(pixelsPerUnitX);
    __acdk_args[1] = ::acdk::lang::outOf(pixelsPerUnitY);
    _dmiProxyGetTarget()->standardDispatch("getScrollPixelsPerUnit", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::wx::RWindow getTargetWindow()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[16]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::getTargetWindow();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getTargetWindow", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RWindow)(::acdk::lang::RObject)__acdk_retval;
  }
  void getViewStart(OUT(int) x, OUT(int) y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[17]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::getViewStart(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::outOf(x);
    __acdk_args[1] = ::acdk::lang::outOf(y);
    _dmiProxyGetTarget()->standardDispatch("getViewStart", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void scroll(int x, int y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[18]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::scroll(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("scroll", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setScrollbars(int pixelsPerUnitX, int pixelsPerUnitY, int noUnitsX, int noUnitsY, int xPos, int yPos, bool noRefresh)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[22]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::setScrollbars(pixelsPerUnitX, pixelsPerUnitY, noUnitsX, noUnitsY, xPos, yPos, noRefresh);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(7);
    __acdk_args[0] = ::acdk::lang::inOf(pixelsPerUnitX);
    __acdk_args[1] = ::acdk::lang::inOf(pixelsPerUnitY);
    __acdk_args[2] = ::acdk::lang::inOf(noUnitsX);
    __acdk_args[3] = ::acdk::lang::inOf(noUnitsY);
    __acdk_args[4] = ::acdk::lang::inOf(xPos);
    __acdk_args[5] = ::acdk::lang::inOf(yPos);
    __acdk_args[6] = ::acdk::lang::inOf(noRefresh);
    _dmiProxyGetTarget()->standardDispatch("setScrollbars", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setTargetWindow(IN(::acdk::wx::RWindow) target)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[27]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::setTargetWindow(target);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(target);
    _dmiProxyGetTarget()->standardDispatch("setTargetWindow", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrolledWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::lang::RString)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrolledWindow_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrolledWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrolledWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrolledWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrolledWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ScrolledWindow_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ScrolledWindow::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ScrolledWindow_DmiProxy_interfaces[] =
{
  &ScrolledWindow_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ScrolledWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrolledWindow::clazzInfo(), // returnType
  "_0_ScrolledWindow_DmiProxy", // altname
  -1, // altnamehashCode
  ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  ScrolledWindow_DmiProxy::_ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_args[] = 
{
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_arg_parent,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrolledWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrolledWindow::clazzInfo(), // returnType
  "_1_ScrolledWindow_DmiProxy", // altname
  -1, // altnamehashCode
  ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  ScrolledWindow_DmiProxy::_ScrolledWindow_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrolledWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrolledWindow::clazzInfo(), // returnType
  "_2_ScrolledWindow_DmiProxy", // altname
  -1, // altnamehashCode
  ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  ScrolledWindow_DmiProxy::_ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrolledWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrolledWindow::clazzInfo(), // returnType
  "_3_ScrolledWindow_DmiProxy", // altname
  -1, // altnamehashCode
  ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  ScrolledWindow_DmiProxy::_ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrolledWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrolledWindow::clazzInfo(), // returnType
  "_4_ScrolledWindow_DmiProxy", // altname
  -1, // altnamehashCode
  ScrolledWindow_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  ScrolledWindow_DmiProxy::_ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ScrolledWindow_methods[] = 
{
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &ScrolledWindow_DmiProxy_methods__ScrolledWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* ScrolledWindow_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ScrolledWindow_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ScrolledWindow_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ScrolledWindow_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ScrolledWindow_DmiProxy(ScrolledWindow_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class GridSizer_DmiProxy
: extends GridSizer
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(GridSizer)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  GridSizer::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, GridSizer)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  GridSizer_DmiProxy(int rows, int cols, int vgap, int hgap)
  : GridSizer(rows, cols, vgap, hgap)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  GridSizer_DmiProxy(int cols, int vgap, int hgap)
  : GridSizer(cols, vgap, hgap)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  GridSizer_DmiProxy(int cols)
  : GridSizer(cols)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  GridSizer_DmiProxy(int cols, int vgap)
  : GridSizer(cols, vgap)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void add(IN(::acdk::wx::RWindow) window, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[1]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::add(window, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(window);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("add", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void add(IN(::acdk::wx::RSizer) sizer, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[6]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::add(sizer, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(sizer);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("add", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void add(int width, int height, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[11]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::add(width, height, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(width);
    __acdk_args[1] = ::acdk::lang::inOf(height);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("add", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::wx::RSize calcMin()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[16]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::calcMin();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("calcMin", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RSize)(::acdk::lang::RObject)__acdk_retval;
  }
  void clear(bool delete_windows)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[17]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::clear(delete_windows);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(delete_windows);
    _dmiProxyGetTarget()->standardDispatch("clear", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void deleteWindows()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[19]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::deleteWindows();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("deleteWindows", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool detach(IN(::acdk::wx::RWindow) window)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[20]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::detach(window);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(window);
    _dmiProxyGetTarget()->standardDispatch("detach", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void insert(int before, IN(::acdk::wx::RWindow) window, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[28]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::insert(before, window, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(before);
    __acdk_args[1] = ::acdk::lang::inOf(window);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("insert", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void insert(int before, IN(::acdk::wx::RSizer) sizer, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[33]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::insert(before, sizer, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(before);
    __acdk_args[1] = ::acdk::lang::inOf(sizer);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("insert", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void insert(int before, int width, int height, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[38]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::insert(before, width, height, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(7);
    __acdk_args[0] = ::acdk::lang::inOf(before);
    __acdk_args[1] = ::acdk::lang::inOf(width);
    __acdk_args[2] = ::acdk::lang::inOf(height);
    __acdk_args[3] = ::acdk::lang::inOf(option);
    __acdk_args[4] = ::acdk::lang::inOf(flag);
    __acdk_args[5] = ::acdk::lang::inOf(border);
    __acdk_args[6] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("insert", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void layout()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[45]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::layout();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("layout", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void prepend(IN(::acdk::wx::RWindow) window, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[46]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::prepend(window, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(window);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("prepend", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void prepend(IN(::acdk::wx::RSizer) sizer, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[51]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::prepend(sizer, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(sizer);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("prepend", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void prepend(int width, int height, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[56]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::prepend(width, height, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(width);
    __acdk_args[1] = ::acdk::lang::inOf(height);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("prepend", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void recalcSizes()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[61]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::recalcSizes();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("recalcSizes", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool remove(IN(::acdk::wx::RSizer) sizer)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[62]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::remove(sizer);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(sizer);
    _dmiProxyGetTarget()->standardDispatch("remove", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool remove(int pos)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[63]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::remove(pos);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    _dmiProxyGetTarget()->standardDispatch("remove", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GridSizer)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _GridSizer_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new GridSizer_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _GridSizer_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new GridSizer_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _GridSizer_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new GridSizer_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _GridSizer_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new GridSizer_DmiProxy(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo GridSizer_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  GridSizer::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _GridSizer_DmiProxy_interfaces[] =
{
  &GridSizer_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_rows =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "rows",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_cols =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "cols",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_vgap =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "vgap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_hgap =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "hgap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* GridSizer_methods__GridSizer_I_I_I_I_args[] = 
{
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_rows,
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_cols,
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_vgap,
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_I_arg_hgap,
  0
};

::acdk::lang::dmi::ClazzMethodInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "GridSizer_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  GridSizer::clazzInfo(), // returnType
  "_0_GridSizer_DmiProxy", // altname
  -1, // altnamehashCode
  GridSizer_methods__GridSizer_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  GridSizer_DmiProxy::_GridSizer_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_arg_cols =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "cols",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_arg_vgap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "vgap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I_arg_hgap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "hgap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* GridSizer_methods__GridSizer_I_I_I_args[] = 
{
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_arg_cols,
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_arg_vgap,
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_arg_hgap,
  0
};

::acdk::lang::dmi::ClazzMethodInfo GridSizer_DmiProxy_methods__GridSizer_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "GridSizer_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  GridSizer::clazzInfo(), // returnType
  "_1_GridSizer_DmiProxy", // altname
  -1, // altnamehashCode
  GridSizer_methods__GridSizer_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  GridSizer_DmiProxy::_GridSizer_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_arg_cols =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "cols",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* GridSizer_methods__GridSizer_I_args[] = 
{
  &GridSizer_DmiProxy_methods__GridSizer_I_arg_cols,
  0
};

::acdk::lang::dmi::ClazzMethodInfo GridSizer_DmiProxy_methods__GridSizer_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "GridSizer_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  GridSizer::clazzInfo(), // returnType
  "_2_GridSizer_DmiProxy", // altname
  -1, // altnamehashCode
  GridSizer_methods__GridSizer_I_args,
  0, // argumentCount
  0, // excpetions,
  GridSizer_DmiProxy::_GridSizer_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_arg_cols =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "cols",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo GridSizer_DmiProxy_methods__GridSizer_I_I_arg_vgap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "vgap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* GridSizer_methods__GridSizer_I_I_args[] = 
{
  &GridSizer_DmiProxy_methods__GridSizer_I_I_arg_cols,
  &GridSizer_DmiProxy_methods__GridSizer_I_I_arg_vgap,
  0
};

::acdk::lang::dmi::ClazzMethodInfo GridSizer_DmiProxy_methods__GridSizer_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "GridSizer_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  GridSizer::clazzInfo(), // returnType
  "_3_GridSizer_DmiProxy", // altname
  -1, // altnamehashCode
  GridSizer_methods__GridSizer_I_I_args,
  0, // argumentCount
  0, // excpetions,
  GridSizer_DmiProxy::_GridSizer_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* GridSizer_methods[] = 
{
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I_I,
  &GridSizer_DmiProxy_methods__GridSizer_I_I_I,
  &GridSizer_DmiProxy_methods__GridSizer_I,
  &GridSizer_DmiProxy_methods__GridSizer_I_I,
  0
};

::acdk::lang::dmi::ClazzInfo* GridSizer_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "GridSizer_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _GridSizer_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     GridSizer_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_GridSizer_DmiProxy(GridSizer_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Slider_DmiProxy
: extends Slider
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Slider)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Slider::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Slider)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Slider_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int value, int minValue, int maxValue, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : Slider(parent, id, value, minValue, maxValue, pos, size, style, choices, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Slider_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int value, int minValue, int maxValue)
  : Slider(parent, id, value, minValue, maxValue)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Slider_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int value, int minValue, int maxValue, IN(::acdk::wx::RPoint) pos)
  : Slider(parent, id, value, minValue, maxValue, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Slider_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int value, int minValue, int maxValue, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Slider(parent, id, value, minValue, maxValue, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Slider_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int value, int minValue, int maxValue, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Slider(parent, id, value, minValue, maxValue, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Slider_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int value, int minValue, int maxValue, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices)
  : Slider(parent, id, value, minValue, maxValue, pos, size, style, choices)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Slider_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int value, int minValue, int maxValue, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator)
  : Slider(parent, id, value, minValue, maxValue, pos, size, style, choices, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Slider)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Slider_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar(), (::acdk::wx::RPoint)args[5].getObjectVar(), (::acdk::wx::RSize)args[6].getObjectVar(), args[7].getIntVar(), (::acdk::lang::RStringArray)args[8].getObjectVar(), (::acdk::wx::RValidator)args[9].getObjectVar(), (::acdk::lang::RString)args[10].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Slider_in_acdk_wx_Window_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Slider_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Slider_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar(), (::acdk::wx::RPoint)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Slider_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar(), (::acdk::wx::RPoint)args[5].getObjectVar(), (::acdk::wx::RSize)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Slider_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar(), (::acdk::wx::RPoint)args[5].getObjectVar(), (::acdk::wx::RSize)args[6].getObjectVar(), args[7].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Slider_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar(), (::acdk::wx::RPoint)args[5].getObjectVar(), (::acdk::wx::RSize)args[6].getObjectVar(), args[7].getIntVar(), (::acdk::lang::RStringArray)args[8].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Slider_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getIntVar(), (::acdk::wx::RPoint)args[5].getObjectVar(), (::acdk::wx::RSize)args[6].getObjectVar(), args[7].getIntVar(), (::acdk::lang::RStringArray)args[8].getObjectVar(), (::acdk::wx::RValidator)args[9].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Slider_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Slider::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Slider_DmiProxy_interfaces[] =
{
  &Slider_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_minValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "minValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_maxValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "maxValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_value,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_minValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_maxValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Slider_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Slider::clazzInfo(), // returnType
  "_0_Slider_DmiProxy", // altname
  -1, // altnamehashCode
  Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Slider_DmiProxy::_Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_minValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "minValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_maxValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "maxValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_args[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_parent,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_id,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_value,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_minValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_arg_maxValue,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Slider_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Slider::clazzInfo(), // returnType
  "_1_Slider_DmiProxy", // altname
  -1, // altnamehashCode
  Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Slider_DmiProxy::_Slider_in_acdk_wx_Window_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_minValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "minValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_maxValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "maxValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_args[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_parent,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_id,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_value,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_minValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_maxValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Slider_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Slider::clazzInfo(), // returnType
  "_2_Slider_DmiProxy", // altname
  -1, // altnamehashCode
  Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Slider_DmiProxy::_Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_minValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "minValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_maxValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "maxValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_value,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_minValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_maxValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Slider_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Slider::clazzInfo(), // returnType
  "_3_Slider_DmiProxy", // altname
  -1, // altnamehashCode
  Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Slider_DmiProxy::_Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_minValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "minValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_maxValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "maxValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_value,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_minValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_maxValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Slider_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Slider::clazzInfo(), // returnType
  "_4_Slider_DmiProxy", // altname
  -1, // altnamehashCode
  Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Slider_DmiProxy::_Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_minValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "minValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_maxValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "maxValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_value,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_minValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_maxValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Slider_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Slider::clazzInfo(), // returnType
  "_5_Slider_DmiProxy", // altname
  -1, // altnamehashCode
  Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args,
  0, // argumentCount
  0, // excpetions,
  Slider_DmiProxy::_Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_minValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "minValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_maxValue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "maxValue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_value,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_minValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_maxValue,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Slider_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Slider::clazzInfo(), // returnType
  "_6_Slider_DmiProxy", // altname
  -1, // altnamehashCode
  Slider_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  Slider_DmiProxy::_Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Slider_methods[] = 
{
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray,
  &Slider_DmiProxy_methods__Slider_in_acdk_wx_Window_I_I_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* Slider_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Slider_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Slider_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Slider_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Slider_DmiProxy(Slider_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class SpinButton_DmiProxy
: extends SpinButton
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(SpinButton)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  SpinButton::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, SpinButton)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  SpinButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : SpinButton(parent, id, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : SpinButton(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : SpinButton(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : SpinButton(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : SpinButton(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinButton)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::lang::RString)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinButton_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo SpinButton_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  SpinButton::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _SpinButton_DmiProxy_interfaces[] =
{
  &SpinButton_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "SpinButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinButton::clazzInfo(), // returnType
  "_0_SpinButton_DmiProxy", // altname
  -1, // altnamehashCode
  SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  SpinButton_DmiProxy::_SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinButton_methods__SpinButton_in_acdk_wx_Window_I_args[] = 
{
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_arg_parent,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinButton::clazzInfo(), // returnType
  "_1_SpinButton_DmiProxy", // altname
  -1, // altnamehashCode
  SpinButton_methods__SpinButton_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  SpinButton_DmiProxy::_SpinButton_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinButton::clazzInfo(), // returnType
  "_2_SpinButton_DmiProxy", // altname
  -1, // altnamehashCode
  SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  SpinButton_DmiProxy::_SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinButton::clazzInfo(), // returnType
  "_3_SpinButton_DmiProxy", // altname
  -1, // altnamehashCode
  SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  SpinButton_DmiProxy::_SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinButton::clazzInfo(), // returnType
  "_4_SpinButton_DmiProxy", // altname
  -1, // altnamehashCode
  SpinButton_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  SpinButton_DmiProxy::_SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* SpinButton_methods[] = 
{
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &SpinButton_DmiProxy_methods__SpinButton_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* SpinButton_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "SpinButton_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _SpinButton_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     SpinButton_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_SpinButton_DmiProxy(SpinButton_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class SpinCtrl_DmiProxy
: extends SpinCtrl
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(SpinCtrl)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  SpinCtrl::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, SpinCtrl)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, int min, int max, int initial, IN(::acdk::lang::RString) name)
  : SpinCtrl(parent, id, value, pos, size, style, min, max, initial, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : SpinCtrl(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value)
  : SpinCtrl(parent, id, value)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos)
  : SpinCtrl(parent, id, value, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : SpinCtrl(parent, id, value, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : SpinCtrl(parent, id, value, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, int min)
  : SpinCtrl(parent, id, value, pos, size, style, min)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, int min, int max)
  : SpinCtrl(parent, id, value, pos, size, style, min, max)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SpinCtrl_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, int min, int max, int initial)
  : SpinCtrl(parent, id, value, pos, size, style, min, max, initial)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SpinCtrl)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar(), args[7].getIntVar(), args[8].getIntVar(), (::acdk::lang::RString)args[9].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar(), args[7].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SpinCtrl_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), args[6].getIntVar(), args[7].getIntVar(), args[8].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo SpinCtrl_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  SpinCtrl::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _SpinCtrl_DmiProxy_interfaces[] =
{
  &SpinCtrl_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_min =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "min",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_max =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "max",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_initial =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "initial",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_value,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_pos,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_size,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_style,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_min,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_max,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_initial,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_0_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_1_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_arg_value,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_2_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_value,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_3_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_value,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_4_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_value,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_5_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_min =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "min",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_value,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_pos,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_size,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_style,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_arg_min,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_6_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_min =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "min",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_max =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "max",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_value,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_pos,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_size,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_style,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_min,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_arg_max,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_7_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_min =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "min",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_max =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "max",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_initial =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "initial",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_args[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_parent,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_id,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_value,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_pos,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_size,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_style,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_min,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_max,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_arg_initial,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SpinCtrl_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SpinCtrl::clazzInfo(), // returnType
  "_8_SpinCtrl_DmiProxy", // altname
  -1, // altnamehashCode
  SpinCtrl_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  SpinCtrl_DmiProxy::_SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* SpinCtrl_methods[] = 
{
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I_in_acdk_lang_String,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I,
  &SpinCtrl_DmiProxy_methods__SpinCtrl_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_I_I_I,
  0
};

::acdk::lang::dmi::ClazzInfo* SpinCtrl_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "SpinCtrl_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _SpinCtrl_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     SpinCtrl_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_SpinCtrl_DmiProxy(SpinCtrl_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class SplitterWindow_DmiProxy
: extends SplitterWindow
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(SplitterWindow)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  SplitterWindow::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, SplitterWindow)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  SplitterWindow_DmiProxy()
  : SplitterWindow()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SplitterWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : SplitterWindow(parent, id, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SplitterWindow_DmiProxy(IN(::acdk::wx::RWindow) parent)
  : SplitterWindow(parent)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SplitterWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : SplitterWindow(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SplitterWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : SplitterWindow(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SplitterWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : SplitterWindow(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  SplitterWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : SplitterWindow(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void onDoubleClickSash(int x, int y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::clazzInfo()->methods[17]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::onDoubleClickSash(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("onDoubleClickSash", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool onSashPositionChange(int newSashPosition)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::clazzInfo()->methods[18]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::onSashPositionChange(newSashPosition);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(newSashPosition);
    _dmiProxyGetTarget()->standardDispatch("onSashPositionChange", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int onSashPositionChanging(int newSashPosition)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::clazzInfo()->methods[19]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::onSashPositionChanging(newSashPosition);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(newSashPosition);
    _dmiProxyGetTarget()->standardDispatch("onSashPositionChanging", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void onUnsplit(IN(::acdk::wx::RWindow) removed)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::clazzInfo()->methods[20]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::onUnsplit(removed);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(removed);
    _dmiProxyGetTarget()->standardDispatch("onUnsplit", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool splitHorizontally(IN(::acdk::wx::RWindow) window1, IN(::acdk::wx::RWindow) window2, int sashPosition)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::clazzInfo()->methods[28]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::splitHorizontally(window1, window2, sashPosition);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(window1);
    __acdk_args[1] = ::acdk::lang::inOf(window2);
    __acdk_args[2] = ::acdk::lang::inOf(sashPosition);
    _dmiProxyGetTarget()->standardDispatch("splitHorizontally", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool splitVertically(IN(::acdk::wx::RWindow) window1, IN(::acdk::wx::RWindow) window2, int sashPosition)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::clazzInfo()->methods[30]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::splitVertically(window1, window2, sashPosition);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(window1);
    __acdk_args[1] = ::acdk::lang::inOf(window2);
    __acdk_args[2] = ::acdk::lang::inOf(sashPosition);
    _dmiProxyGetTarget()->standardDispatch("splitVertically", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, SplitterWindow)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SplitterWindow_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SplitterWindow_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SplitterWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::lang::RString)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SplitterWindow_in_acdk_wx_Window_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SplitterWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SplitterWindow_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SplitterWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SplitterWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SplitterWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new SplitterWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo SplitterWindow_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  SplitterWindow::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _SplitterWindow_DmiProxy_interfaces[] =
{
  &SplitterWindow_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* SplitterWindow_methods__SplitterWindow_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo SplitterWindow_DmiProxy_methods__SplitterWindow = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "SplitterWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SplitterWindow::clazzInfo(), // returnType
  "_0_SplitterWindow_DmiProxy", // altname
  -1, // altnamehashCode
  SplitterWindow_methods__SplitterWindow_args,
  0, // argumentCount
  0, // excpetions,
  SplitterWindow_DmiProxy::_SplitterWindow_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "SplitterWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SplitterWindow::clazzInfo(), // returnType
  "_1_SplitterWindow_DmiProxy", // altname
  -1, // altnamehashCode
  SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  SplitterWindow_DmiProxy::_SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_args[] = 
{
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_arg_parent,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SplitterWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SplitterWindow::clazzInfo(), // returnType
  "_2_SplitterWindow_DmiProxy", // altname
  -1, // altnamehashCode
  SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_args,
  0, // argumentCount
  0, // excpetions,
  SplitterWindow_DmiProxy::_SplitterWindow_in_acdk_wx_Window_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_args[] = 
{
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_arg_parent,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SplitterWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SplitterWindow::clazzInfo(), // returnType
  "_3_SplitterWindow_DmiProxy", // altname
  -1, // altnamehashCode
  SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  SplitterWindow_DmiProxy::_SplitterWindow_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SplitterWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SplitterWindow::clazzInfo(), // returnType
  "_4_SplitterWindow_DmiProxy", // altname
  -1, // altnamehashCode
  SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  SplitterWindow_DmiProxy::_SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SplitterWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SplitterWindow::clazzInfo(), // returnType
  "_5_SplitterWindow_DmiProxy", // altname
  -1, // altnamehashCode
  SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  SplitterWindow_DmiProxy::_SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "SplitterWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  SplitterWindow::clazzInfo(), // returnType
  "_6_SplitterWindow_DmiProxy", // altname
  -1, // altnamehashCode
  SplitterWindow_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  SplitterWindow_DmiProxy::_SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* SplitterWindow_methods[] = 
{
  &SplitterWindow_DmiProxy_methods__SplitterWindow,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &SplitterWindow_DmiProxy_methods__SplitterWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* SplitterWindow_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "SplitterWindow_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _SplitterWindow_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     SplitterWindow_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_SplitterWindow_DmiProxy(SplitterWindow_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class StaticBitmap_DmiProxy
: extends StaticBitmap
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(StaticBitmap)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  StaticBitmap::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, StaticBitmap)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  StaticBitmap_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : StaticBitmap(parent, id, label, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  StaticBitmap_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) label)
  : StaticBitmap(parent, id, label)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  StaticBitmap_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) label, IN(::acdk::wx::RPoint) pos)
  : StaticBitmap(parent, id, label, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  StaticBitmap_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : StaticBitmap(parent, id, label, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  StaticBitmap_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : StaticBitmap(parent, id, label, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, StaticBitmap)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new StaticBitmap_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RString)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new StaticBitmap_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new StaticBitmap_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new StaticBitmap_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new StaticBitmap_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo StaticBitmap_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  StaticBitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _StaticBitmap_DmiProxy_interfaces[] =
{
  &StaticBitmap_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_label,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "StaticBitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  StaticBitmap::clazzInfo(), // returnType
  "_0_StaticBitmap_DmiProxy", // altname
  -1, // altnamehashCode
  StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  StaticBitmap_DmiProxy::_StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_args[] = 
{
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_parent,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_id,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_label,
  0
};

::acdk::lang::dmi::ClazzMethodInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "StaticBitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  StaticBitmap::clazzInfo(), // returnType
  "_1_StaticBitmap_DmiProxy", // altname
  -1, // altnamehashCode
  StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_args,
  0, // argumentCount
  0, // excpetions,
  StaticBitmap_DmiProxy::_StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_args[] = 
{
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_parent,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_id,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_label,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "StaticBitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  StaticBitmap::clazzInfo(), // returnType
  "_2_StaticBitmap_DmiProxy", // altname
  -1, // altnamehashCode
  StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  StaticBitmap_DmiProxy::_StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_label,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "StaticBitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  StaticBitmap::clazzInfo(), // returnType
  "_3_StaticBitmap_DmiProxy", // altname
  -1, // altnamehashCode
  StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  StaticBitmap_DmiProxy::_StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "StaticBitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  StaticBitmap::clazzInfo(), // returnType
  "_4_StaticBitmap_DmiProxy", // altname
  -1, // altnamehashCode
  StaticBitmap_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  StaticBitmap_DmiProxy::_StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* StaticBitmap_methods[] = 
{
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size,
  &StaticBitmap_DmiProxy_methods__StaticBitmap_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* StaticBitmap_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "StaticBitmap_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _StaticBitmap_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     StaticBitmap_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_StaticBitmap_DmiProxy(StaticBitmap_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx

