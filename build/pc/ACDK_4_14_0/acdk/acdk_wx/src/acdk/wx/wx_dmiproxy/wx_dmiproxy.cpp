// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../wx.h"
#include "../App.h"
#include "../ArtProvider.h"
#include "../Bitmap.h"
#include "../BitmapButton.h"
#include "../BitmapDataObject.h"
#include "../BoxSizer.h"
#include "../Button.h"
#include "../Caret.h"
#include "../CheckBox.h"
#include "../Choice.h"
#include "../ClientData.h"
#include "../ClientDC.h"
#include "../Clipboard.h"
#include "../Colour.h"
#include "../ColourData.h"
#include "../ColourDialog.h"
#include "../ComboBox.h"
#include "../Config.h"
#include "../Control.h"
#include "../ControlWithItems.h"
#include "../Cursor.h"
#include "../DataFormat.h"
#include "../DataObject.h"
#include "../DataObjectComposite.h"
#include "../DataObjectSimple.h"
#include "../DC.h"
#include "../Dialog.h"
#include "../DirDialog.h"
#include "../DropSource.h"
#include "../DropTarget.h"
#include "../Event.h"
#include "../FileDataObject.h"
#include "../FileDialog.h"
#include "../FileDropTarget.h"
#include "../Font.h"
#include "../FontData.h"
#include "../FontDialog.h"
#include "../Frame.h"
#include "../Gauge.h"
#include "../GDIImage.h"
#include "../GDIObject.h"
#include "../HtmlWindow.h"
#include "../Icon.h"
#include "../LayoutConstraints.h"
#include "../ListBox.h"
#include "../MDIChildFrame.h"
#include "../MDIClientWindow.h"
#include "../MDIParentFrame.h"
#include "../MemoryDC.h"
#include "../Menu.h"
#include "../MenuBar.h"
#include "../MenuItem.h"
#include "../Notebook.h"
#include "../PaintDC.h"
#include "../Panel.h"
#include "../Pen.h"
#include "../PostScriptDC.h"
#include "../ProgressDialog.h"
#include "../RadioBox.h"
#include "../RadioButton.h"
#include "../Region.h"
#include "../ScreenDC.h"
#include "../ScrolledWindow.h"
#include "../SingleChoiceDialog.h"
#include "../Sizer.h"
#include "../Slider.h"
#include "../SpinButton.h"
#include "../SpinCtrl.h"
#include "../SplitterWindow.h"
#include "../StaticBitmap.h"
#include "../StaticBox.h"
#include "../StaticText.h"
#include "../StatusBar.h"
#include "../Structs.h"
#include "../TextCtrl.h"
#include "../TextCtrlCharWriter.h"
#include "../TextDataObject.h"
#include "../TextDropTarget.h"
#include "../TextEntryDialog.h"
#include "../Timer.h"
#include "../ToggleButton.h"
#include "../ToolBar.h"
#include "../ToolTip.h"
#include "../TreeCtrl.h"
#include "../Validator.h"
#include "../Window.h"
#include "../WindowDC.h"
#include "../WindowStyle.h"
#include "../Wizard.h"
#include "../WizardPage.h"
#include "../wx.h"
#include "../WxObject.h"
#include "../XmlResource.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace wx { 

class App_DmiProxy
: extends App
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(App)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  App::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, App)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  App_DmiProxy()
  : App()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void handleException(IN(::acdk::lang::RThrowable) ex)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::clazzInfo()->methods[4]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::handleException(ex);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(ex);
    _dmiProxyGetTarget()->standardDispatch("handleException", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int onExit()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::onExit();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("onExit", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool onInit()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::onInit();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("onInit", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int onRun()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::onRun();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("onRun", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, App)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _App_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new App_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo App_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  App::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _App_DmiProxy_interfaces[] =
{
  &App_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* App_methods__App_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo App_DmiProxy_methods__App = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "App_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  App::clazzInfo(), // returnType
  "_0_App_DmiProxy", // altname
  -1, // altnamehashCode
  App_methods__App_args,
  0, // argumentCount
  0, // excpetions,
  App_DmiProxy::_App_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* App_methods[] = 
{
  &App_DmiProxy_methods__App,
  0
};

::acdk::lang::dmi::ClazzInfo* App_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "App_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _App_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     App_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_App_DmiProxy(App_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Bitmap_DmiProxy
: extends Bitmap
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Bitmap)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Bitmap::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Bitmap)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Bitmap_DmiProxy()
  : Bitmap()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Bitmap_DmiProxy(IN(::acdk::lang::RString) name, BitmapType type)
  : Bitmap(name, (BitmapType)type)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Bitmap_DmiProxy(IN(::acdk::wx::RIcon) icon)
  : Bitmap(icon)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Bitmap_DmiProxy(int width, int height, int depth)
  : Bitmap(width, height, depth)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Bitmap_DmiProxy(int width, int height)
  : Bitmap(width, height)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Bitmap)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Bitmap)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Bitmap)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Bitmap)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Bitmap)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Bitmap)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Bitmap)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Bitmap_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Bitmap_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Bitmap_in_acdk_lang_String_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Bitmap_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), (BitmapType)args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Bitmap_in_acdk_wx_Icon_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Bitmap_DmiProxy((::acdk::wx::RIcon)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Bitmap_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Bitmap_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Bitmap_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Bitmap_DmiProxy(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Bitmap_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Bitmap_DmiProxy_interfaces[] =
{
  &Bitmap_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Bitmap_methods__Bitmap_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Bitmap_DmiProxy_methods__Bitmap = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Bitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Bitmap::clazzInfo(), // returnType
  "_0_Bitmap_DmiProxy", // altname
  -1, // altnamehashCode
  Bitmap_methods__Bitmap_args,
  0, // argumentCount
  0, // excpetions,
  Bitmap_DmiProxy::_Bitmap_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_in_acdk_lang_String_I_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_in_acdk_lang_String_I_arg_type =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "type",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Bitmap_methods__Bitmap_in_acdk_lang_String_I_args[] = 
{
  &Bitmap_DmiProxy_methods__Bitmap_in_acdk_lang_String_I_arg_name,
  &Bitmap_DmiProxy_methods__Bitmap_in_acdk_lang_String_I_arg_type,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Bitmap_DmiProxy_methods__Bitmap_in_acdk_lang_String_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Bitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Bitmap::clazzInfo(), // returnType
  "_1_Bitmap_DmiProxy", // altname
  -1, // altnamehashCode
  Bitmap_methods__Bitmap_in_acdk_lang_String_I_args,
  0, // argumentCount
  0, // excpetions,
  Bitmap_DmiProxy::_Bitmap_in_acdk_lang_String_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_in_acdk_wx_Icon_arg_icon =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "icon",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Icon::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Bitmap_methods__Bitmap_in_acdk_wx_Icon_args[] = 
{
  &Bitmap_DmiProxy_methods__Bitmap_in_acdk_wx_Icon_arg_icon,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Bitmap_DmiProxy_methods__Bitmap_in_acdk_wx_Icon = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Bitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Bitmap::clazzInfo(), // returnType
  "_2_Bitmap_DmiProxy", // altname
  -1, // altnamehashCode
  Bitmap_methods__Bitmap_in_acdk_wx_Icon_args,
  0, // argumentCount
  0, // excpetions,
  Bitmap_DmiProxy::_Bitmap_in_acdk_wx_Icon_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_I_I_I_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_I_I_I_arg_height =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "height",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_I_I_I_arg_depth =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "depth",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Bitmap_methods__Bitmap_I_I_I_args[] = 
{
  &Bitmap_DmiProxy_methods__Bitmap_I_I_I_arg_width,
  &Bitmap_DmiProxy_methods__Bitmap_I_I_I_arg_height,
  &Bitmap_DmiProxy_methods__Bitmap_I_I_I_arg_depth,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Bitmap_DmiProxy_methods__Bitmap_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Bitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Bitmap::clazzInfo(), // returnType
  "_3_Bitmap_DmiProxy", // altname
  -1, // altnamehashCode
  Bitmap_methods__Bitmap_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Bitmap_DmiProxy::_Bitmap_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_I_I_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Bitmap_DmiProxy_methods__Bitmap_I_I_arg_height =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "height",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Bitmap_methods__Bitmap_I_I_args[] = 
{
  &Bitmap_DmiProxy_methods__Bitmap_I_I_arg_width,
  &Bitmap_DmiProxy_methods__Bitmap_I_I_arg_height,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Bitmap_DmiProxy_methods__Bitmap_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Bitmap_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Bitmap::clazzInfo(), // returnType
  "_4_Bitmap_DmiProxy", // altname
  -1, // altnamehashCode
  Bitmap_methods__Bitmap_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Bitmap_DmiProxy::_Bitmap_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Bitmap_methods[] = 
{
  &Bitmap_DmiProxy_methods__Bitmap,
  &Bitmap_DmiProxy_methods__Bitmap_in_acdk_lang_String_I,
  &Bitmap_DmiProxy_methods__Bitmap_in_acdk_wx_Icon,
  &Bitmap_DmiProxy_methods__Bitmap_I_I_I,
  &Bitmap_DmiProxy_methods__Bitmap_I_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Bitmap_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Bitmap_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Bitmap_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Bitmap_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Bitmap_DmiProxy(Bitmap_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ImageList_DmiProxy
: extends ImageList
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ImageList)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ImageList::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ImageList)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ImageList_DmiProxy()
  : ImageList()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ImageList_DmiProxy(int width, int height, bool mask, int initialCount)
  : ImageList(width, height, mask, initialCount)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ImageList_DmiProxy(int width, int height)
  : ImageList(width, height)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ImageList_DmiProxy(int width, int height, bool mask)
  : ImageList(width, height, mask)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  int getImageCount()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::getImageCount();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getImageCount", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool getSize(int index, OUT(int) width, OUT(int) height)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::getSize(index, width, height);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(index);
    __acdk_args[1] = ::acdk::lang::outOf(width);
    __acdk_args[2] = ::acdk::lang::outOf(height);
    _dmiProxyGetTarget()->standardDispatch("getSize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ImageList)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ImageList_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ImageList_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ImageList_I_I_Z_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ImageList_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getBoolVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ImageList_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ImageList_DmiProxy(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ImageList_I_I_Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ImageList_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getBoolVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ImageList_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ImageList::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ImageList_DmiProxy_interfaces[] =
{
  &ImageList_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* ImageList_methods__ImageList_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ImageList_DmiProxy_methods__ImageList = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ImageList_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ImageList::clazzInfo(), // returnType
  "_0_ImageList_DmiProxy", // altname
  -1, // altnamehashCode
  ImageList_methods__ImageList_args,
  0, // argumentCount
  0, // excpetions,
  ImageList_DmiProxy::_ImageList_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_height =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "height",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_mask =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "mask",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_initialCount =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "initialCount",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ImageList_methods__ImageList_I_I_Z_I_args[] = 
{
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_width,
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_height,
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_mask,
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_I_arg_initialCount,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ImageList_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ImageList::clazzInfo(), // returnType
  "_1_ImageList_DmiProxy", // altname
  -1, // altnamehashCode
  ImageList_methods__ImageList_I_I_Z_I_args,
  0, // argumentCount
  0, // excpetions,
  ImageList_DmiProxy::_ImageList_I_I_Z_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_arg_height =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "height",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ImageList_methods__ImageList_I_I_args[] = 
{
  &ImageList_DmiProxy_methods__ImageList_I_I_arg_width,
  &ImageList_DmiProxy_methods__ImageList_I_I_arg_height,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ImageList_DmiProxy_methods__ImageList_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ImageList_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ImageList::clazzInfo(), // returnType
  "_2_ImageList_DmiProxy", // altname
  -1, // altnamehashCode
  ImageList_methods__ImageList_I_I_args,
  0, // argumentCount
  0, // excpetions,
  ImageList_DmiProxy::_ImageList_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_arg_width =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "width",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_arg_height =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "height",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ImageList_DmiProxy_methods__ImageList_I_I_Z_arg_mask =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "mask",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ImageList_methods__ImageList_I_I_Z_args[] = 
{
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_arg_width,
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_arg_height,
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_arg_mask,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ImageList_DmiProxy_methods__ImageList_I_I_Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ImageList_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ImageList::clazzInfo(), // returnType
  "_3_ImageList_DmiProxy", // altname
  -1, // altnamehashCode
  ImageList_methods__ImageList_I_I_Z_args,
  0, // argumentCount
  0, // excpetions,
  ImageList_DmiProxy::_ImageList_I_I_Z_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ImageList_methods[] = 
{
  &ImageList_DmiProxy_methods__ImageList,
  &ImageList_DmiProxy_methods__ImageList_I_I_Z_I,
  &ImageList_DmiProxy_methods__ImageList_I_I,
  &ImageList_DmiProxy_methods__ImageList_I_I_Z,
  0
};

::acdk::lang::dmi::ClazzInfo* ImageList_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ImageList_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ImageList_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ImageList_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ImageList_DmiProxy(ImageList_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class BitmapButton_DmiProxy
: extends BitmapButton
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(BitmapButton)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  BitmapButton::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, BitmapButton)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  BitmapButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) bitmap, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : BitmapButton(parent, id, bitmap, pos, size, style, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  BitmapButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) bitmap)
  : BitmapButton(parent, id, bitmap)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  BitmapButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) bitmap, IN(::acdk::wx::RPoint) pos)
  : BitmapButton(parent, id, bitmap, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  BitmapButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) bitmap, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : BitmapButton(parent, id, bitmap, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  BitmapButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) bitmap, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : BitmapButton(parent, id, bitmap, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  BitmapButton_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RBitmap) bitmap, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator)
  : BitmapButton(parent, id, bitmap, pos, size, style, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapButton)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar(), (::acdk::lang::RString)args[7].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapButton_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RBitmap)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo BitmapButton_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  BitmapButton::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _BitmapButton_DmiProxy_interfaces[] =
{
  &BitmapButton_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_bitmap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bitmap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_bitmap,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "BitmapButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapButton::clazzInfo(), // returnType
  "_0_BitmapButton_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  BitmapButton_DmiProxy::_BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_bitmap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bitmap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_args[] = 
{
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_parent,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_id,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_arg_bitmap,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "BitmapButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapButton::clazzInfo(), // returnType
  "_1_BitmapButton_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_args,
  0, // argumentCount
  0, // excpetions,
  BitmapButton_DmiProxy::_BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_bitmap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bitmap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_args[] = 
{
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_parent,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_id,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_bitmap,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "BitmapButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapButton::clazzInfo(), // returnType
  "_2_BitmapButton_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  BitmapButton_DmiProxy::_BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_bitmap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bitmap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_bitmap,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "BitmapButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapButton::clazzInfo(), // returnType
  "_3_BitmapButton_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  BitmapButton_DmiProxy::_BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_bitmap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bitmap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_bitmap,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "BitmapButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapButton::clazzInfo(), // returnType
  "_4_BitmapButton_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  BitmapButton_DmiProxy::_BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_bitmap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "bitmap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args[] = 
{
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_bitmap,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "BitmapButton_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapButton::clazzInfo(), // returnType
  "_5_BitmapButton_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapButton_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  BitmapButton_DmiProxy::_BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* BitmapButton_methods[] = 
{
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &BitmapButton_DmiProxy_methods__BitmapButton_in_acdk_wx_Window_I_in_acdk_wx_Bitmap_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* BitmapButton_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "BitmapButton_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _BitmapButton_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     BitmapButton_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_BitmapButton_DmiProxy(BitmapButton_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class BitmapDataObject_DmiProxy
: extends BitmapDataObject
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(BitmapDataObject)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  BitmapDataObject::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, BitmapDataObject)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  BitmapDataObject_DmiProxy(IN(::acdk::wx::RBitmap) bitmap)
  : BitmapDataObject(bitmap)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  BitmapDataObject_DmiProxy()
  : BitmapDataObject()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::wx::RDataFormatArray getAllFormats(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[1]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::getAllFormats(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getAllFormats", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RDataFormatArray)(::acdk::lang::RObject)__acdk_retval;
  }
  bool getDataHere(IN(::acdk::wx::RDataFormat) format, OUT(RbyteArray) buf)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::getDataHere(format, buf);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    __acdk_args[1] = ::acdk::lang::outOf(buf);
    _dmiProxyGetTarget()->standardDispatch("getDataHere", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getDataSize(IN(::acdk::wx::RDataFormat) format)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::getDataSize(format);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    _dmiProxyGetTarget()->standardDispatch("getDataSize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getFormatCount(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::getFormatCount(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getFormatCount", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::wx::RDataFormat getPreferredFormat(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::getPreferredFormat(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getPreferredFormat", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RDataFormat)(::acdk::lang::RObject)__acdk_retval;
  }
  bool setData(IN(::acdk::wx::RDataFormat) format, IN(RbyteArray) data)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[11]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::setData(format, data);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    __acdk_args[1] = ::acdk::lang::inOf(data);
    _dmiProxyGetTarget()->standardDispatch("setData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BitmapDataObject)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapDataObject_in_acdk_wx_Bitmap_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapDataObject_DmiProxy((::acdk::wx::RBitmap)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BitmapDataObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BitmapDataObject_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo BitmapDataObject_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  BitmapDataObject::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _BitmapDataObject_DmiProxy_interfaces[] =
{
  &BitmapDataObject_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo BitmapDataObject_DmiProxy_methods__BitmapDataObject_in_acdk_wx_Bitmap_arg_bitmap =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "bitmap",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Bitmap::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapDataObject_methods__BitmapDataObject_in_acdk_wx_Bitmap_args[] = 
{
  &BitmapDataObject_DmiProxy_methods__BitmapDataObject_in_acdk_wx_Bitmap_arg_bitmap,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapDataObject_DmiProxy_methods__BitmapDataObject_in_acdk_wx_Bitmap = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "BitmapDataObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapDataObject::clazzInfo(), // returnType
  "_0_BitmapDataObject_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapDataObject_methods__BitmapDataObject_in_acdk_wx_Bitmap_args,
  0, // argumentCount
  0, // excpetions,
  BitmapDataObject_DmiProxy::_BitmapDataObject_in_acdk_wx_Bitmap_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* BitmapDataObject_methods__BitmapDataObject_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo BitmapDataObject_DmiProxy_methods__BitmapDataObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "BitmapDataObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BitmapDataObject::clazzInfo(), // returnType
  "_1_BitmapDataObject_DmiProxy", // altname
  -1, // altnamehashCode
  BitmapDataObject_methods__BitmapDataObject_args,
  0, // argumentCount
  0, // excpetions,
  BitmapDataObject_DmiProxy::_BitmapDataObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* BitmapDataObject_methods[] = 
{
  &BitmapDataObject_DmiProxy_methods__BitmapDataObject_in_acdk_wx_Bitmap,
  &BitmapDataObject_DmiProxy_methods__BitmapDataObject,
  0
};

::acdk::lang::dmi::ClazzInfo* BitmapDataObject_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "BitmapDataObject_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _BitmapDataObject_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     BitmapDataObject_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_BitmapDataObject_DmiProxy(BitmapDataObject_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class BoxSizer_DmiProxy
: extends BoxSizer
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(BoxSizer)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  BoxSizer::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, BoxSizer)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  BoxSizer_DmiProxy(int orient)
  : BoxSizer(orient)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void add(IN(::acdk::wx::RWindow) window, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[1]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::add(window, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(window);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("add", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void add(IN(::acdk::wx::RSizer) sizer, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[6]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::add(sizer, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(sizer);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("add", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void add(int width, int height, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[11]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::add(width, height, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(width);
    __acdk_args[1] = ::acdk::lang::inOf(height);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("add", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::wx::RSize calcMin()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[16]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::calcMin();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("calcMin", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RSize)(::acdk::lang::RObject)__acdk_retval;
  }
  void clear(bool delete_windows)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[17]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::clear(delete_windows);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(delete_windows);
    _dmiProxyGetTarget()->standardDispatch("clear", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void deleteWindows()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[19]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::deleteWindows();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("deleteWindows", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool detach(IN(::acdk::wx::RWindow) window)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[20]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::detach(window);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(window);
    _dmiProxyGetTarget()->standardDispatch("detach", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void insert(int before, IN(::acdk::wx::RWindow) window, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[28]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::insert(before, window, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(before);
    __acdk_args[1] = ::acdk::lang::inOf(window);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("insert", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void insert(int before, IN(::acdk::wx::RSizer) sizer, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[33]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::insert(before, sizer, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(before);
    __acdk_args[1] = ::acdk::lang::inOf(sizer);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("insert", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void insert(int before, int width, int height, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[38]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::insert(before, width, height, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(7);
    __acdk_args[0] = ::acdk::lang::inOf(before);
    __acdk_args[1] = ::acdk::lang::inOf(width);
    __acdk_args[2] = ::acdk::lang::inOf(height);
    __acdk_args[3] = ::acdk::lang::inOf(option);
    __acdk_args[4] = ::acdk::lang::inOf(flag);
    __acdk_args[5] = ::acdk::lang::inOf(border);
    __acdk_args[6] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("insert", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void layout()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[45]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::layout();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("layout", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void prepend(IN(::acdk::wx::RWindow) window, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[46]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::prepend(window, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(window);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("prepend", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void prepend(IN(::acdk::wx::RSizer) sizer, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[51]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::prepend(sizer, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(sizer);
    __acdk_args[1] = ::acdk::lang::inOf(option);
    __acdk_args[2] = ::acdk::lang::inOf(flag);
    __acdk_args[3] = ::acdk::lang::inOf(border);
    __acdk_args[4] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("prepend", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void prepend(int width, int height, int option, int flag, int border, IN(::acdk::wx::RWxObject) userData)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[56]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::prepend(width, height, option, flag, border, userData);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(6);
    __acdk_args[0] = ::acdk::lang::inOf(width);
    __acdk_args[1] = ::acdk::lang::inOf(height);
    __acdk_args[2] = ::acdk::lang::inOf(option);
    __acdk_args[3] = ::acdk::lang::inOf(flag);
    __acdk_args[4] = ::acdk::lang::inOf(border);
    __acdk_args[5] = ::acdk::lang::inOf(userData);
    _dmiProxyGetTarget()->standardDispatch("prepend", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void recalcSizes()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[61]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::recalcSizes();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("recalcSizes", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool remove(IN(::acdk::wx::RSizer) sizer)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[62]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::remove(sizer);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(sizer);
    _dmiProxyGetTarget()->standardDispatch("remove", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool remove(int pos)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Sizer)::clazzInfo()->methods[63]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::remove(pos);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    _dmiProxyGetTarget()->standardDispatch("remove", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, BoxSizer)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _BoxSizer_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new BoxSizer_DmiProxy(args[0].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo BoxSizer_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  BoxSizer::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _BoxSizer_DmiProxy_interfaces[] =
{
  &BoxSizer_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo BoxSizer_DmiProxy_methods__BoxSizer_I_arg_orient =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "orient",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* BoxSizer_methods__BoxSizer_I_args[] = 
{
  &BoxSizer_DmiProxy_methods__BoxSizer_I_arg_orient,
  0
};

::acdk::lang::dmi::ClazzMethodInfo BoxSizer_DmiProxy_methods__BoxSizer_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "BoxSizer_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  BoxSizer::clazzInfo(), // returnType
  "_0_BoxSizer_DmiProxy", // altname
  -1, // altnamehashCode
  BoxSizer_methods__BoxSizer_I_args,
  0, // argumentCount
  0, // excpetions,
  BoxSizer_DmiProxy::_BoxSizer_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* BoxSizer_methods[] = 
{
  &BoxSizer_DmiProxy_methods__BoxSizer_I,
  0
};

::acdk::lang::dmi::ClazzInfo* BoxSizer_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "BoxSizer_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _BoxSizer_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     BoxSizer_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_BoxSizer_DmiProxy(BoxSizer_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Button_DmiProxy
: extends Button
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Button)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Button::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Button)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Button_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator)
  : Button(parent, id, label, pos, size, style, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Button_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label)
  : Button(parent, id, label)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Button_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos)
  : Button(parent, id, label, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Button_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Button(parent, id, label, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Button_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Button(parent, id, label, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Button)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Button_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Button_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Button_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Button_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Button_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Button_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Button_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Button::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Button_DmiProxy_interfaces[] =
{
  &Button_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args[] = 
{
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_label,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Button_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Button::clazzInfo(), // returnType
  "_0_Button_DmiProxy", // altname
  -1, // altnamehashCode
  Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  Button_DmiProxy::_Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_arg_label,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Button_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Button::clazzInfo(), // returnType
  "_1_Button_DmiProxy", // altname
  -1, // altnamehashCode
  Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Button_DmiProxy::_Button_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_label,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Button_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Button::clazzInfo(), // returnType
  "_2_Button_DmiProxy", // altname
  -1, // altnamehashCode
  Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Button_DmiProxy::_Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_label,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Button_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Button::clazzInfo(), // returnType
  "_3_Button_DmiProxy", // altname
  -1, // altnamehashCode
  Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Button_DmiProxy::_Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Button_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Button::clazzInfo(), // returnType
  "_4_Button_DmiProxy", // altname
  -1, // altnamehashCode
  Button_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Button_DmiProxy::_Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Button_methods[] = 
{
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &Button_DmiProxy_methods__Button_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Button_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Button_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Button_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Button_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Button_DmiProxy(Button_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class CheckBox_DmiProxy
: extends CheckBox
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(CheckBox)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  CheckBox::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, CheckBox)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  CheckBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label)
  : CheckBox(parent, id, label)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  CheckBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos)
  : CheckBox(parent, id, label, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  CheckBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : CheckBox(parent, id, label, pos, size, style, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  CheckBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : CheckBox(parent, id, label, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  CheckBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : CheckBox(parent, id, label, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  CheckBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) label, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator)
  : CheckBox(parent, id, label, pos, size, style, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, CheckBox)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new CheckBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new CheckBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new CheckBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar(), (::acdk::lang::RString)args[7].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new CheckBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new CheckBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new CheckBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo CheckBox_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  CheckBox::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _CheckBox_DmiProxy_interfaces[] =
{
  &CheckBox_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_label,
  0
};

::acdk::lang::dmi::ClazzMethodInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "CheckBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  CheckBox::clazzInfo(), // returnType
  "_2_CheckBox_DmiProxy", // altname
  -1, // altnamehashCode
  CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  CheckBox_DmiProxy::_CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_label,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "CheckBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  CheckBox::clazzInfo(), // returnType
  "_3_CheckBox_DmiProxy", // altname
  -1, // altnamehashCode
  CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  CheckBox_DmiProxy::_CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_label,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "CheckBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  CheckBox::clazzInfo(), // returnType
  "_1_CheckBox_DmiProxy", // altname
  -1, // altnamehashCode
  CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  CheckBox_DmiProxy::_CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_label,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "CheckBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  CheckBox::clazzInfo(), // returnType
  "_4_CheckBox_DmiProxy", // altname
  -1, // altnamehashCode
  CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  CheckBox_DmiProxy::_CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_label,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "CheckBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  CheckBox::clazzInfo(), // returnType
  "_5_CheckBox_DmiProxy", // altname
  -1, // altnamehashCode
  CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  CheckBox_DmiProxy::_CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_label =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "label",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args[] = 
{
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_label,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "CheckBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  CheckBox::clazzInfo(), // returnType
  "_6_CheckBox_DmiProxy", // altname
  -1, // altnamehashCode
  CheckBox_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  CheckBox_DmiProxy::_CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* CheckBox_methods[] = 
{
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &CheckBox_DmiProxy_methods__CheckBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* CheckBox_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "CheckBox_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _CheckBox_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     CheckBox_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_CheckBox_DmiProxy(CheckBox_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Choice_DmiProxy
: extends Choice
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Choice)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Choice::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Choice)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Choice_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : Choice(parent, id, pos, size, style, choices, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Choice_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : Choice(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Choice_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : Choice(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Choice_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Choice(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Choice_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Choice(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Choice_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices)
  : Choice(parent, id, pos, size, style, choices)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Choice_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator)
  : Choice(parent, id, pos, size, style, choices, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Choice)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Choice_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::lang::RStringArray)args[5].getObjectVar(), (::acdk::wx::RValidator)args[6].getObjectVar(), (::acdk::lang::RString)args[7].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Choice_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Choice_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Choice_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Choice_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Choice_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Choice_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::lang::RStringArray)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Choice_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::lang::RStringArray)args[5].getObjectVar(), (::acdk::wx::RValidator)args[6].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Choice_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Choice::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Choice_DmiProxy_interfaces[] =
{
  &Choice_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Choice_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Choice::clazzInfo(), // returnType
  "_0_Choice_DmiProxy", // altname
  -1, // altnamehashCode
  Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Choice_DmiProxy::_Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Choice_methods__Choice_in_acdk_wx_Window_I_args[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_arg_parent,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Choice_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Choice::clazzInfo(), // returnType
  "_1_Choice_DmiProxy", // altname
  -1, // altnamehashCode
  Choice_methods__Choice_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  Choice_DmiProxy::_Choice_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Choice_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Choice::clazzInfo(), // returnType
  "_2_Choice_DmiProxy", // altname
  -1, // altnamehashCode
  Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Choice_DmiProxy::_Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Choice_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Choice::clazzInfo(), // returnType
  "_3_Choice_DmiProxy", // altname
  -1, // altnamehashCode
  Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Choice_DmiProxy::_Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Choice_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Choice::clazzInfo(), // returnType
  "_4_Choice_DmiProxy", // altname
  -1, // altnamehashCode
  Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Choice_DmiProxy::_Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Choice_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Choice::clazzInfo(), // returnType
  "_5_Choice_DmiProxy", // altname
  -1, // altnamehashCode
  Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args,
  0, // argumentCount
  0, // excpetions,
  Choice_DmiProxy::_Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Choice_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Choice::clazzInfo(), // returnType
  "_6_Choice_DmiProxy", // altname
  -1, // altnamehashCode
  Choice_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  Choice_DmiProxy::_Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Choice_methods[] = 
{
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray,
  &Choice_DmiProxy_methods__Choice_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* Choice_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Choice_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Choice_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Choice_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Choice_DmiProxy(Choice_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Clipboard_DmiProxy
: extends Clipboard
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Clipboard)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Clipboard::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Clipboard)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Clipboard_DmiProxy()
  : Clipboard()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  bool addData(IN(::acdk::wx::RDataObject) data)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[2]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::addData(data);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(data);
    _dmiProxyGetTarget()->standardDispatch("addData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void clear()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[3]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clear();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clear", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void close()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[4]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::close();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("close", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool flush()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::flush();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("flush", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool getData(INOUT(::acdk::wx::RDataObject) data)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::getData(data);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inoutOf(data);
    _dmiProxyGetTarget()->standardDispatch("getData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool isOpened()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::isOpened();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("isOpened", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool isSupported(IN(::acdk::wx::RDataFormat) format)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::isSupported(format);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    _dmiProxyGetTarget()->standardDispatch("isSupported", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool open()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::open();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("open", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setData(IN(::acdk::wx::RDataObject) data)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[10]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::setData(data);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(data);
    _dmiProxyGetTarget()->standardDispatch("setData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void usePrimarySelection(bool primary)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clazzInfo()->methods[11]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::usePrimarySelection(primary);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(primary);
    _dmiProxyGetTarget()->standardDispatch("usePrimarySelection", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Clipboard)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Clipboard_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Clipboard_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Clipboard_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Clipboard::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Clipboard_DmiProxy_interfaces[] =
{
  &Clipboard_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Clipboard_methods__Clipboard_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Clipboard_DmiProxy_methods__Clipboard = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Clipboard_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Clipboard::clazzInfo(), // returnType
  "_0_Clipboard_DmiProxy", // altname
  -1, // altnamehashCode
  Clipboard_methods__Clipboard_args,
  0, // argumentCount
  0, // excpetions,
  Clipboard_DmiProxy::_Clipboard_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Clipboard_methods[] = 
{
  &Clipboard_DmiProxy_methods__Clipboard,
  0
};

::acdk::lang::dmi::ClazzInfo* Clipboard_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Clipboard_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Clipboard_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Clipboard_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Clipboard_DmiProxy(Clipboard_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Colour_DmiProxy
: extends Colour
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Colour)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Colour::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Colour)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Colour_DmiProxy()
  : Colour()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Colour_DmiProxy(byte red, byte green, byte blue)
  : Colour(red, green, blue)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Colour_DmiProxy(int colRGB)
  : Colour(colRGB)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Colour_DmiProxy(IN(::acdk::lang::RString) colourName)
  : Colour(colourName)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Colour)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Colour)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Colour)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Colour)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Colour)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Colour)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Colour)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Colour_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Colour_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Colour_B_B_B_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Colour_DmiProxy(args[0].getByteVar(), args[1].getByteVar(), args[2].getByteVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Colour_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Colour_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Colour_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Colour_DmiProxy((::acdk::lang::RString)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Colour_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Colour::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Colour_DmiProxy_interfaces[] =
{
  &Colour_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Colour_methods__Colour_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Colour_DmiProxy_methods__Colour = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Colour_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Colour::clazzInfo(), // returnType
  "_0_Colour_DmiProxy", // altname
  -1, // altnamehashCode
  Colour_methods__Colour_args,
  0, // argumentCount
  0, // excpetions,
  Colour_DmiProxy::_Colour_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Colour_DmiProxy_methods__Colour_B_B_B_arg_red =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "red",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Colour_DmiProxy_methods__Colour_B_B_B_arg_green =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "green",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Colour_DmiProxy_methods__Colour_B_B_B_arg_blue =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "blue",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getByteClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Colour_methods__Colour_B_B_B_args[] = 
{
  &Colour_DmiProxy_methods__Colour_B_B_B_arg_red,
  &Colour_DmiProxy_methods__Colour_B_B_B_arg_green,
  &Colour_DmiProxy_methods__Colour_B_B_B_arg_blue,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Colour_DmiProxy_methods__Colour_B_B_B = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Colour_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Colour::clazzInfo(), // returnType
  "_1_Colour_DmiProxy", // altname
  -1, // altnamehashCode
  Colour_methods__Colour_B_B_B_args,
  0, // argumentCount
  0, // excpetions,
  Colour_DmiProxy::_Colour_B_B_B_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Colour_DmiProxy_methods__Colour_I_arg_colRGB =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "colRGB",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Colour_methods__Colour_I_args[] = 
{
  &Colour_DmiProxy_methods__Colour_I_arg_colRGB,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Colour_DmiProxy_methods__Colour_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Colour_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Colour::clazzInfo(), // returnType
  "_2_Colour_DmiProxy", // altname
  -1, // altnamehashCode
  Colour_methods__Colour_I_args,
  0, // argumentCount
  0, // excpetions,
  Colour_DmiProxy::_Colour_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Colour_DmiProxy_methods__Colour_in_acdk_lang_String_arg_colourName =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "colourName",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Colour_methods__Colour_in_acdk_lang_String_args[] = 
{
  &Colour_DmiProxy_methods__Colour_in_acdk_lang_String_arg_colourName,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Colour_DmiProxy_methods__Colour_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Colour_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Colour::clazzInfo(), // returnType
  "_3_Colour_DmiProxy", // altname
  -1, // altnamehashCode
  Colour_methods__Colour_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Colour_DmiProxy::_Colour_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Colour_methods[] = 
{
  &Colour_DmiProxy_methods__Colour,
  &Colour_DmiProxy_methods__Colour_B_B_B,
  &Colour_DmiProxy_methods__Colour_I,
  &Colour_DmiProxy_methods__Colour_in_acdk_lang_String,
  0
};

::acdk::lang::dmi::ClazzInfo* Colour_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Colour_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Colour_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Colour_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Colour_DmiProxy(Colour_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ColourData_DmiProxy
: extends ColourData
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ColourData)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ColourData::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ColourData)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ColourData_DmiProxy()
  : ColourData()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourData)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourData)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourData)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourData)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourData)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourData)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourData)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ColourData_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ColourData_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ColourData_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ColourData::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ColourData_DmiProxy_interfaces[] =
{
  &ColourData_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* ColourData_methods__ColourData_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ColourData_DmiProxy_methods__ColourData = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ColourData_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ColourData::clazzInfo(), // returnType
  "_0_ColourData_DmiProxy", // altname
  -1, // altnamehashCode
  ColourData_methods__ColourData_args,
  0, // argumentCount
  0, // excpetions,
  ColourData_DmiProxy::_ColourData_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ColourData_methods[] = 
{
  &ColourData_DmiProxy_methods__ColourData,
  0
};

::acdk::lang::dmi::ClazzInfo* ColourData_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ColourData_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ColourData_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ColourData_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ColourData_DmiProxy(ColourData_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ColourDialog_DmiProxy
: extends ColourDialog
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ColourDialog)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ColourDialog::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ColourDialog)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ColourDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::wx::RColourData) data)
  : ColourDialog(parent, data)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ColourDialog_DmiProxy(IN(::acdk::wx::RWindow) parent)
  : ColourDialog(parent)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void endModal(int retCode)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::endModal(retCode);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(retCode);
    _dmiProxyGetTarget()->standardDispatch("endModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool isModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::isModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("isModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int showModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::showModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("showModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ColourDialog)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ColourDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::wx::RColourData)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ColourDialog_in_acdk_wx_Window_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ColourDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ColourDialog_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ColourDialog::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ColourDialog_DmiProxy_interfaces[] =
{
  &ColourDialog_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_arg_data =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "data",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::ColourData::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ColourDialog_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_args[] = 
{
  &ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_arg_parent,
  &ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_arg_data,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ColourDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ColourDialog::clazzInfo(), // returnType
  "_0_ColourDialog_DmiProxy", // altname
  -1, // altnamehashCode
  ColourDialog_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_args,
  0, // argumentCount
  0, // excpetions,
  ColourDialog_DmiProxy::_ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ColourDialog_methods__ColourDialog_in_acdk_wx_Window_args[] = 
{
  &ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_arg_parent,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ColourDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ColourDialog::clazzInfo(), // returnType
  "_1_ColourDialog_DmiProxy", // altname
  -1, // altnamehashCode
  ColourDialog_methods__ColourDialog_in_acdk_wx_Window_args,
  0, // argumentCount
  0, // excpetions,
  ColourDialog_DmiProxy::_ColourDialog_in_acdk_wx_Window_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ColourDialog_methods[] = 
{
  &ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window_in_acdk_wx_ColourData,
  &ColourDialog_DmiProxy_methods__ColourDialog_in_acdk_wx_Window,
  0
};

::acdk::lang::dmi::ClazzInfo* ColourDialog_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ColourDialog_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ColourDialog_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ColourDialog_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ColourDialog_DmiProxy(ColourDialog_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ComboBox_DmiProxy
: extends ComboBox
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ComboBox)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ComboBox::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ComboBox)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : ComboBox(parent, id, value, pos, size, style, choices, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : ComboBox(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value)
  : ComboBox(parent, id, value)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos)
  : ComboBox(parent, id, value, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : ComboBox(parent, id, value, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : ComboBox(parent, id, value, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices)
  : ComboBox(parent, id, value, pos, size, style, choices)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ComboBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) value, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator)
  : ComboBox(parent, id, value, pos, size, style, choices, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ComboBox)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RStringArray)args[6].getObjectVar(), (::acdk::wx::RValidator)args[7].getObjectVar(), (::acdk::lang::RString)args[8].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RStringArray)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ComboBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RStringArray)args[6].getObjectVar(), (::acdk::wx::RValidator)args[7].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ComboBox_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ComboBox::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ComboBox_DmiProxy_interfaces[] =
{
  &ComboBox_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_value,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_0_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_1_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_arg_value,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_2_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_value,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_3_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_value,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_4_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_value,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_5_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_value,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_6_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_value =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "value",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_value,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ComboBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ComboBox::clazzInfo(), // returnType
  "_7_ComboBox_DmiProxy", // altname
  -1, // altnamehashCode
  ComboBox_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  ComboBox_DmiProxy::_ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ComboBox_methods[] = 
{
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray,
  &ComboBox_DmiProxy_methods__ComboBox_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* ComboBox_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ComboBox_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ComboBox_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ComboBox_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ComboBox_DmiProxy(ComboBox_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Control_DmiProxy
: extends Control
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Control)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Control::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Control)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Control_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : Control(parent, id, pos, size, style, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Control_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : Control(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Control_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : Control(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Control_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Control(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Control_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Control(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Control_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::wx::RValidator) validator)
  : Control(parent, id, pos, size, style, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Control_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::wx::RValidator)args[5].getObjectVar(), (::acdk::lang::RString)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Control_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Control_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Control_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Control_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Control_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Control_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Control_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::wx::RValidator)args[5].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Control_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Control::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Control_DmiProxy_interfaces[] =
{
  &Control_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Control_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Control::clazzInfo(), // returnType
  "_0_Control_DmiProxy", // altname
  -1, // altnamehashCode
  Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Control_DmiProxy::_Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Control_methods__Control_in_acdk_wx_Window_I_args[] = 
{
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_arg_parent,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Control_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Control::clazzInfo(), // returnType
  "_1_Control_DmiProxy", // altname
  -1, // altnamehashCode
  Control_methods__Control_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  Control_DmiProxy::_Control_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Control_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Control::clazzInfo(), // returnType
  "_2_Control_DmiProxy", // altname
  -1, // altnamehashCode
  Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Control_DmiProxy::_Control_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Control_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Control::clazzInfo(), // returnType
  "_3_Control_DmiProxy", // altname
  -1, // altnamehashCode
  Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Control_DmiProxy::_Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Control_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Control::clazzInfo(), // returnType
  "_4_Control_DmiProxy", // altname
  -1, // altnamehashCode
  Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Control_DmiProxy::_Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args[] = 
{
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_parent,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_id,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_pos,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_size,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_style,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Control_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Control::clazzInfo(), // returnType
  "_5_Control_DmiProxy", // altname
  -1, // altnamehashCode
  Control_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  Control_DmiProxy::_Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Control_methods[] = 
{
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator_in_acdk_lang_String,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &Control_DmiProxy_methods__Control_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* Control_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Control_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Control_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Control_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Control_DmiProxy(Control_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Cursor_DmiProxy
: extends Cursor
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Cursor)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Cursor::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Cursor)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Cursor_DmiProxy()
  : Cursor()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Cursor_DmiProxy(int cursor_type)
  : Cursor(cursor_type)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Cursor)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Cursor)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Cursor)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Cursor)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Cursor)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Cursor)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Cursor)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Cursor_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Cursor_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Cursor_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Cursor_DmiProxy(args[0].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Cursor_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Cursor::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Cursor_DmiProxy_interfaces[] =
{
  &Cursor_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Cursor_methods__Cursor_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Cursor_DmiProxy_methods__Cursor = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Cursor_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Cursor::clazzInfo(), // returnType
  "_0_Cursor_DmiProxy", // altname
  -1, // altnamehashCode
  Cursor_methods__Cursor_args,
  0, // argumentCount
  0, // excpetions,
  Cursor_DmiProxy::_Cursor_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Cursor_DmiProxy_methods__Cursor_I_arg_cursor_type =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "cursor_type",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Cursor_methods__Cursor_I_args[] = 
{
  &Cursor_DmiProxy_methods__Cursor_I_arg_cursor_type,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Cursor_DmiProxy_methods__Cursor_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Cursor_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Cursor::clazzInfo(), // returnType
  "_1_Cursor_DmiProxy", // altname
  -1, // altnamehashCode
  Cursor_methods__Cursor_I_args,
  0, // argumentCount
  0, // excpetions,
  Cursor_DmiProxy::_Cursor_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Cursor_methods[] = 
{
  &Cursor_DmiProxy_methods__Cursor,
  &Cursor_DmiProxy_methods__Cursor_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Cursor_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Cursor_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Cursor_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Cursor_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Cursor_DmiProxy(Cursor_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class DataFormat_DmiProxy
: extends DataFormat
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DataFormat)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DataFormat::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, DataFormat)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DataFormat_DmiProxy(int format)
  : DataFormat(format)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DataFormat_DmiProxy()
  : DataFormat()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DataFormat_DmiProxy(IN(::acdk::lang::RString) format)
  : DataFormat(format)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataFormat)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataFormat)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataFormat)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataFormat)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataFormat)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataFormat)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataFormat)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DataFormat_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DataFormat_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DataFormat_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DataFormat_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DataFormat_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DataFormat_DmiProxy((::acdk::lang::RString)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DataFormat_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DataFormat::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DataFormat_DmiProxy_interfaces[] =
{
  &DataFormat_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo DataFormat_DmiProxy_methods__DataFormat_I_arg_format =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "format",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DataFormat_methods__DataFormat_I_args[] = 
{
  &DataFormat_DmiProxy_methods__DataFormat_I_arg_format,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DataFormat_DmiProxy_methods__DataFormat_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DataFormat_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DataFormat::clazzInfo(), // returnType
  "_0_DataFormat_DmiProxy", // altname
  -1, // altnamehashCode
  DataFormat_methods__DataFormat_I_args,
  0, // argumentCount
  0, // excpetions,
  DataFormat_DmiProxy::_DataFormat_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DataFormat_methods__DataFormat_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DataFormat_DmiProxy_methods__DataFormat = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DataFormat_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DataFormat::clazzInfo(), // returnType
  "_1_DataFormat_DmiProxy", // altname
  -1, // altnamehashCode
  DataFormat_methods__DataFormat_args,
  0, // argumentCount
  0, // excpetions,
  DataFormat_DmiProxy::_DataFormat_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DataFormat_DmiProxy_methods__DataFormat_in_acdk_lang_String_arg_format =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "format",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DataFormat_methods__DataFormat_in_acdk_lang_String_args[] = 
{
  &DataFormat_DmiProxy_methods__DataFormat_in_acdk_lang_String_arg_format,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DataFormat_DmiProxy_methods__DataFormat_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DataFormat_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DataFormat::clazzInfo(), // returnType
  "_2_DataFormat_DmiProxy", // altname
  -1, // altnamehashCode
  DataFormat_methods__DataFormat_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  DataFormat_DmiProxy::_DataFormat_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DataFormat_methods[] = 
{
  &DataFormat_DmiProxy_methods__DataFormat_I,
  &DataFormat_DmiProxy_methods__DataFormat,
  &DataFormat_DmiProxy_methods__DataFormat_in_acdk_lang_String,
  0
};

::acdk::lang::dmi::ClazzInfo* DataFormat_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DataFormat_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DataFormat_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DataFormat_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DataFormat_DmiProxy(DataFormat_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class DataObjectComposite_DmiProxy
: extends DataObjectComposite
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DataObjectComposite)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DataObjectComposite::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, DataObjectComposite)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DataObjectComposite_DmiProxy()
  : DataObjectComposite()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::wx::RDataFormatArray getAllFormats(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[1]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::getAllFormats(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getAllFormats", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RDataFormatArray)(::acdk::lang::RObject)__acdk_retval;
  }
  bool getDataHere(IN(::acdk::wx::RDataFormat) format, OUT(RbyteArray) buf)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::getDataHere(format, buf);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    __acdk_args[1] = ::acdk::lang::outOf(buf);
    _dmiProxyGetTarget()->standardDispatch("getDataHere", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getDataSize(IN(::acdk::wx::RDataFormat) format)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::getDataSize(format);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    _dmiProxyGetTarget()->standardDispatch("getDataSize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getFormatCount(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::getFormatCount(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getFormatCount", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::wx::RDataFormat getPreferredFormat(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::getPreferredFormat(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getPreferredFormat", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RDataFormat)(::acdk::lang::RObject)__acdk_retval;
  }
  bool setData(IN(::acdk::wx::RDataFormat) format, IN(RbyteArray) data)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[11]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::setData(format, data);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    __acdk_args[1] = ::acdk::lang::inOf(data);
    _dmiProxyGetTarget()->standardDispatch("setData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObjectComposite)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DataObjectComposite_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DataObjectComposite_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DataObjectComposite_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DataObjectComposite::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DataObjectComposite_DmiProxy_interfaces[] =
{
  &DataObjectComposite_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* DataObjectComposite_methods__DataObjectComposite_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DataObjectComposite_DmiProxy_methods__DataObjectComposite = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DataObjectComposite_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DataObjectComposite::clazzInfo(), // returnType
  "_0_DataObjectComposite_DmiProxy", // altname
  -1, // altnamehashCode
  DataObjectComposite_methods__DataObjectComposite_args,
  0, // argumentCount
  0, // excpetions,
  DataObjectComposite_DmiProxy::_DataObjectComposite_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DataObjectComposite_methods[] = 
{
  &DataObjectComposite_DmiProxy_methods__DataObjectComposite,
  0
};

::acdk::lang::dmi::ClazzInfo* DataObjectComposite_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DataObjectComposite_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DataObjectComposite_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DataObjectComposite_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DataObjectComposite_DmiProxy(DataObjectComposite_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Dialog_DmiProxy
: extends Dialog
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Dialog)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Dialog::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Dialog)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Dialog_DmiProxy()
  : Dialog()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Dialog_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : Dialog(parent, id, title, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Dialog_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title)
  : Dialog(parent, id, title)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Dialog_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos)
  : Dialog(parent, id, title, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Dialog_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Dialog(parent, id, title, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Dialog_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Dialog(parent, id, title, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void endModal(int retCode)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::endModal(retCode);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(retCode);
    _dmiProxyGetTarget()->standardDispatch("endModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool isModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::isModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("isModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int showModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::showModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("showModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Dialog_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Dialog_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Dialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RString)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Dialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Dialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Dialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Dialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Dialog_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Dialog::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Dialog_DmiProxy_interfaces[] =
{
  &Dialog_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Dialog_methods__Dialog_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Dialog_DmiProxy_methods__Dialog = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Dialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Dialog::clazzInfo(), // returnType
  "_0_Dialog_DmiProxy", // altname
  -1, // altnamehashCode
  Dialog_methods__Dialog_args,
  0, // argumentCount
  0, // excpetions,
  Dialog_DmiProxy::_Dialog_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Dialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Dialog::clazzInfo(), // returnType
  "_1_Dialog_DmiProxy", // altname
  -1, // altnamehashCode
  Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Dialog_DmiProxy::_Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Dialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Dialog::clazzInfo(), // returnType
  "_2_Dialog_DmiProxy", // altname
  -1, // altnamehashCode
  Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Dialog_DmiProxy::_Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Dialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Dialog::clazzInfo(), // returnType
  "_3_Dialog_DmiProxy", // altname
  -1, // altnamehashCode
  Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Dialog_DmiProxy::_Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Dialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Dialog::clazzInfo(), // returnType
  "_4_Dialog_DmiProxy", // altname
  -1, // altnamehashCode
  Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Dialog_DmiProxy::_Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Dialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Dialog::clazzInfo(), // returnType
  "_5_Dialog_DmiProxy", // altname
  -1, // altnamehashCode
  Dialog_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Dialog_DmiProxy::_Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Dialog_methods[] = 
{
  &Dialog_DmiProxy_methods__Dialog,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &Dialog_DmiProxy_methods__Dialog_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Dialog_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Dialog_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Dialog_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Dialog_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Dialog_DmiProxy(Dialog_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class DirDialog_DmiProxy
: extends DirDialog
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DirDialog)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DirDialog::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, DirDialog)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DirDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultPath, int style, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : DirDialog(parent, message, defaultPath, style, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DirDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message)
  : DirDialog(parent, message)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DirDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultPath)
  : DirDialog(parent, message, defaultPath)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DirDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultPath, int style)
  : DirDialog(parent, message, defaultPath, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DirDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultPath, int style, IN(::acdk::wx::RPoint) pos)
  : DirDialog(parent, message, defaultPath, style, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void endModal(int retCode)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::endModal(retCode);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(retCode);
    _dmiProxyGetTarget()->standardDispatch("endModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool isModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::isModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("isModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int showModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::showModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("showModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DirDialog)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DirDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar(), args[3].getIntVar(), (::acdk::wx::RPoint)args[4].getObjectVar(), (::acdk::wx::RSize)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DirDialog_in_acdk_wx_Window_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DirDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DirDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DirDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DirDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar(), args[3].getIntVar(), (::acdk::wx::RPoint)args[4].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DirDialog_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DirDialog::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DirDialog_DmiProxy_interfaces[] =
{
  &DirDialog_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_defaultPath =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultPath",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_message,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_defaultPath,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_style,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DirDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DirDialog::clazzInfo(), // returnType
  "_0_DirDialog_DmiProxy", // altname
  -1, // altnamehashCode
  DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  DirDialog_DmiProxy::_DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_args[] = 
{
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_parent,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_message,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DirDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DirDialog::clazzInfo(), // returnType
  "_1_DirDialog_DmiProxy", // altname
  -1, // altnamehashCode
  DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  DirDialog_DmiProxy::_DirDialog_in_acdk_wx_Window_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_defaultPath =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultPath",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_args[] = 
{
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_parent,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_message,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_defaultPath,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DirDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DirDialog::clazzInfo(), // returnType
  "_2_DirDialog_DmiProxy", // altname
  -1, // altnamehashCode
  DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  DirDialog_DmiProxy::_DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_defaultPath =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultPath",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_args[] = 
{
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_parent,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_message,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_defaultPath,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DirDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DirDialog::clazzInfo(), // returnType
  "_3_DirDialog_DmiProxy", // altname
  -1, // altnamehashCode
  DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_args,
  0, // argumentCount
  0, // excpetions,
  DirDialog_DmiProxy::_DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_defaultPath =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultPath",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_args[] = 
{
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_parent,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_message,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_defaultPath,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_style,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DirDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DirDialog::clazzInfo(), // returnType
  "_4_DirDialog_DmiProxy", // altname
  -1, // altnamehashCode
  DirDialog_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  DirDialog_DmiProxy::_DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DirDialog_methods[] = 
{
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I,
  &DirDialog_DmiProxy_methods__DirDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point,
  0
};

::acdk::lang::dmi::ClazzInfo* DirDialog_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DirDialog_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DirDialog_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DirDialog_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DirDialog_DmiProxy(DirDialog_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class DropSource_DmiProxy
: extends DropSource
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DropSource)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DropSource::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, DropSource)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DropSource_DmiProxy(IN(::acdk::wx::RWindow) win)
  : DropSource(win)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DropSource_DmiProxy()
  : DropSource()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DropSource_DmiProxy(IN(::acdk::wx::RDataObject) data, IN(::acdk::wx::RWindow) win)
  : DropSource(data, win)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DropSource_DmiProxy(IN(::acdk::wx::RDataObject) data)
  : DropSource(data)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DragResult doDragDrop(int flags)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::doDragDrop(flags);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(flags);
    _dmiProxyGetTarget()->standardDispatch("doDragDrop", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (DragResult)(int)__acdk_retval;
  }
  bool giveFeedback(DragResult effect)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::giveFeedback(effect);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(effect);
    _dmiProxyGetTarget()->standardDispatch("giveFeedback", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropSource)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DropSource_in_acdk_wx_Window_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DropSource_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DropSource_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DropSource_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DropSource_DmiProxy((::acdk::wx::RDataObject)args[0].getObjectVar(), (::acdk::wx::RWindow)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DropSource_in_acdk_wx_DataObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DropSource_DmiProxy((::acdk::wx::RDataObject)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DropSource_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DropSource::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DropSource_DmiProxy_interfaces[] =
{
  &DropSource_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo DropSource_DmiProxy_methods__DropSource_in_acdk_wx_Window_arg_win =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "win",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DropSource_methods__DropSource_in_acdk_wx_Window_args[] = 
{
  &DropSource_DmiProxy_methods__DropSource_in_acdk_wx_Window_arg_win,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DropSource_DmiProxy_methods__DropSource_in_acdk_wx_Window = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DropSource_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DropSource::clazzInfo(), // returnType
  "_0_DropSource_DmiProxy", // altname
  -1, // altnamehashCode
  DropSource_methods__DropSource_in_acdk_wx_Window_args,
  0, // argumentCount
  0, // excpetions,
  DropSource_DmiProxy::_DropSource_in_acdk_wx_Window_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DropSource_methods__DropSource_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DropSource_DmiProxy_methods__DropSource = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DropSource_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DropSource::clazzInfo(), // returnType
  "_1_DropSource_DmiProxy", // altname
  -1, // altnamehashCode
  DropSource_methods__DropSource_args,
  0, // argumentCount
  0, // excpetions,
  DropSource_DmiProxy::_DropSource_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_arg_data =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "data",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::DataObject::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_arg_win =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "win",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DropSource_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_args[] = 
{
  &DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_arg_data,
  &DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_arg_win,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DropSource_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DropSource::clazzInfo(), // returnType
  "_2_DropSource_DmiProxy", // altname
  -1, // altnamehashCode
  DropSource_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_args,
  0, // argumentCount
  0, // excpetions,
  DropSource_DmiProxy::_DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_arg_data =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "data",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::DataObject::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DropSource_methods__DropSource_in_acdk_wx_DataObject_args[] = 
{
  &DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_arg_data,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DropSource_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DropSource::clazzInfo(), // returnType
  "_3_DropSource_DmiProxy", // altname
  -1, // altnamehashCode
  DropSource_methods__DropSource_in_acdk_wx_DataObject_args,
  0, // argumentCount
  0, // excpetions,
  DropSource_DmiProxy::_DropSource_in_acdk_wx_DataObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DropSource_methods[] = 
{
  &DropSource_DmiProxy_methods__DropSource_in_acdk_wx_Window,
  &DropSource_DmiProxy_methods__DropSource,
  &DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject_in_acdk_wx_Window,
  &DropSource_DmiProxy_methods__DropSource_in_acdk_wx_DataObject,
  0
};

::acdk::lang::dmi::ClazzInfo* DropSource_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DropSource_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DropSource_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DropSource_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DropSource_DmiProxy(DropSource_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class DropTarget_DmiProxy
: extends DropTarget
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(DropTarget)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  DropTarget::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, DropTarget)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  DropTarget_DmiProxy(IN(::acdk::wx::RDataObject) dataObject)
  : DropTarget(dataObject)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  DropTarget_DmiProxy()
  : DropTarget()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  bool getData()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::getData();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  DragResult onData(int x, int y, DragResult def)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::onData(x, y, def);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    __acdk_args[2] = ::acdk::lang::inOf(def);
    _dmiProxyGetTarget()->standardDispatch("onData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (DragResult)(int)__acdk_retval;
  }
  DragResult onDragOver(int x, int y, DragResult def)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::onDragOver(x, y, def);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    __acdk_args[2] = ::acdk::lang::inOf(def);
    _dmiProxyGetTarget()->standardDispatch("onDragOver", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (DragResult)(int)__acdk_retval;
  }
  bool onDrop(int x, int y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::onDrop(x, y);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("onDrop", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  DragResult onEnter(int x, int y, DragResult def)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::onEnter(x, y, def);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    __acdk_args[2] = ::acdk::lang::inOf(def);
    _dmiProxyGetTarget()->standardDispatch("onEnter", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (DragResult)(int)__acdk_retval;
  }
  void onLeave()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::clazzInfo()->methods[8]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::onLeave();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("onLeave", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DropTarget)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DropTarget_in_acdk_wx_DataObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DropTarget_DmiProxy((::acdk::wx::RDataObject)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _DropTarget_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new DropTarget_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo DropTarget_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  DropTarget::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _DropTarget_DmiProxy_interfaces[] =
{
  &DropTarget_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo DropTarget_DmiProxy_methods__DropTarget_in_acdk_wx_DataObject_arg_dataObject =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "dataObject",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::DataObject::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* DropTarget_methods__DropTarget_in_acdk_wx_DataObject_args[] = 
{
  &DropTarget_DmiProxy_methods__DropTarget_in_acdk_wx_DataObject_arg_dataObject,
  0
};

::acdk::lang::dmi::ClazzMethodInfo DropTarget_DmiProxy_methods__DropTarget_in_acdk_wx_DataObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "DropTarget_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DropTarget::clazzInfo(), // returnType
  "_0_DropTarget_DmiProxy", // altname
  -1, // altnamehashCode
  DropTarget_methods__DropTarget_in_acdk_wx_DataObject_args,
  0, // argumentCount
  0, // excpetions,
  DropTarget_DmiProxy::_DropTarget_in_acdk_wx_DataObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* DropTarget_methods__DropTarget_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo DropTarget_DmiProxy_methods__DropTarget = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "DropTarget_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  DropTarget::clazzInfo(), // returnType
  "_1_DropTarget_DmiProxy", // altname
  -1, // altnamehashCode
  DropTarget_methods__DropTarget_args,
  0, // argumentCount
  0, // excpetions,
  DropTarget_DmiProxy::_DropTarget_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* DropTarget_methods[] = 
{
  &DropTarget_DmiProxy_methods__DropTarget_in_acdk_wx_DataObject,
  &DropTarget_DmiProxy_methods__DropTarget,
  0
};

::acdk::lang::dmi::ClazzInfo* DropTarget_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "DropTarget_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _DropTarget_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     DropTarget_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_DropTarget_DmiProxy(DropTarget_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx

