// Generated by ACDK Metacompiler, 
// Copyrighted by Roger Rene Kommer, artefaktur
// 
// Dont edit this file manually
// 
#include <acdk.h>


#include "../wx.h"
#include "../App.h"
#include "../ArtProvider.h"
#include "../Bitmap.h"
#include "../BitmapButton.h"
#include "../BitmapDataObject.h"
#include "../BoxSizer.h"
#include "../Button.h"
#include "../Caret.h"
#include "../CheckBox.h"
#include "../Choice.h"
#include "../ClientData.h"
#include "../ClientDC.h"
#include "../Clipboard.h"
#include "../Colour.h"
#include "../ColourData.h"
#include "../ColourDialog.h"
#include "../ComboBox.h"
#include "../Config.h"
#include "../Control.h"
#include "../ControlWithItems.h"
#include "../Cursor.h"
#include "../DataFormat.h"
#include "../DataObject.h"
#include "../DataObjectComposite.h"
#include "../DataObjectSimple.h"
#include "../DC.h"
#include "../Dialog.h"
#include "../DirDialog.h"
#include "../DropSource.h"
#include "../DropTarget.h"
#include "../Event.h"
#include "../FileDataObject.h"
#include "../FileDialog.h"
#include "../FileDropTarget.h"
#include "../Font.h"
#include "../FontData.h"
#include "../FontDialog.h"
#include "../Frame.h"
#include "../Gauge.h"
#include "../GDIImage.h"
#include "../GDIObject.h"
#include "../HtmlWindow.h"
#include "../Icon.h"
#include "../LayoutConstraints.h"
#include "../ListBox.h"
#include "../MDIChildFrame.h"
#include "../MDIClientWindow.h"
#include "../MDIParentFrame.h"
#include "../MemoryDC.h"
#include "../Menu.h"
#include "../MenuBar.h"
#include "../MenuItem.h"
#include "../Notebook.h"
#include "../PaintDC.h"
#include "../Panel.h"
#include "../Pen.h"
#include "../PostScriptDC.h"
#include "../ProgressDialog.h"
#include "../RadioBox.h"
#include "../RadioButton.h"
#include "../Region.h"
#include "../ScreenDC.h"
#include "../ScrolledWindow.h"
#include "../SingleChoiceDialog.h"
#include "../Sizer.h"
#include "../Slider.h"
#include "../SpinButton.h"
#include "../SpinCtrl.h"
#include "../SplitterWindow.h"
#include "../StaticBitmap.h"
#include "../StaticBox.h"
#include "../StaticText.h"
#include "../StatusBar.h"
#include "../Structs.h"
#include "../TextCtrl.h"
#include "../TextCtrlCharWriter.h"
#include "../TextDataObject.h"
#include "../TextDropTarget.h"
#include "../TextEntryDialog.h"
#include "../Timer.h"
#include "../ToggleButton.h"
#include "../ToolBar.h"
#include "../ToolTip.h"
#include "../TreeCtrl.h"
#include "../Validator.h"
#include "../Window.h"
#include "../WindowDC.h"
#include "../WindowStyle.h"
#include "../Wizard.h"
#include "../WizardPage.h"
#include "../wx.h"
#include "../WxObject.h"
#include "../XmlResource.h"
#include <acdk/lang/dmi/ClazzInfoInternals.h>

namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class NotifyEvent_DmiProxy
: extends NotifyEvent
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(NotifyEvent)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  NotifyEvent::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, NotifyEvent)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  NotifyEvent_DmiProxy(int commandType, int id)
  : NotifyEvent(commandType, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  NotifyEvent_DmiProxy()
  : NotifyEvent()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  NotifyEvent_DmiProxy(int commandType)
  : NotifyEvent(commandType)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, NotifyEvent)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotifyEvent_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotifyEvent_DmiProxy(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotifyEvent_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotifyEvent_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _NotifyEvent_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new NotifyEvent_DmiProxy(args[0].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo NotifyEvent_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  NotifyEvent::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _NotifyEvent_DmiProxy_interfaces[] =
{
  &NotifyEvent_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo NotifyEvent_DmiProxy_methods__NotifyEvent_I_I_arg_commandType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "commandType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo NotifyEvent_DmiProxy_methods__NotifyEvent_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotifyEvent_methods__NotifyEvent_I_I_args[] = 
{
  &NotifyEvent_DmiProxy_methods__NotifyEvent_I_I_arg_commandType,
  &NotifyEvent_DmiProxy_methods__NotifyEvent_I_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotifyEvent_DmiProxy_methods__NotifyEvent_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "NotifyEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotifyEvent::clazzInfo(), // returnType
  "_0_NotifyEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotifyEvent_methods__NotifyEvent_I_I_args,
  0, // argumentCount
  0, // excpetions,
  NotifyEvent_DmiProxy::_NotifyEvent_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotifyEvent_methods__NotifyEvent_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotifyEvent_DmiProxy_methods__NotifyEvent = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "NotifyEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotifyEvent::clazzInfo(), // returnType
  "_1_NotifyEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotifyEvent_methods__NotifyEvent_args,
  0, // argumentCount
  0, // excpetions,
  NotifyEvent_DmiProxy::_NotifyEvent_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo NotifyEvent_DmiProxy_methods__NotifyEvent_I_arg_commandType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "commandType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* NotifyEvent_methods__NotifyEvent_I_args[] = 
{
  &NotifyEvent_DmiProxy_methods__NotifyEvent_I_arg_commandType,
  0
};

::acdk::lang::dmi::ClazzMethodInfo NotifyEvent_DmiProxy_methods__NotifyEvent_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "NotifyEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  NotifyEvent::clazzInfo(), // returnType
  "_2_NotifyEvent_DmiProxy", // altname
  -1, // altnamehashCode
  NotifyEvent_methods__NotifyEvent_I_args,
  0, // argumentCount
  0, // excpetions,
  NotifyEvent_DmiProxy::_NotifyEvent_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* NotifyEvent_methods[] = 
{
  &NotifyEvent_DmiProxy_methods__NotifyEvent_I_I,
  &NotifyEvent_DmiProxy_methods__NotifyEvent,
  &NotifyEvent_DmiProxy_methods__NotifyEvent_I,
  0
};

::acdk::lang::dmi::ClazzInfo* NotifyEvent_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "NotifyEvent_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _NotifyEvent_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     NotifyEvent_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_NotifyEvent_DmiProxy(NotifyEvent_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ScrollEvent_DmiProxy
: extends ScrollEvent
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ScrollEvent)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ScrollEvent::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ScrollEvent)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ScrollEvent_DmiProxy(int commandType, int id, int pos, int orient)
  : ScrollEvent(commandType, id, pos, orient)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrollEvent_DmiProxy()
  : ScrollEvent()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrollEvent_DmiProxy(int commandType)
  : ScrollEvent(commandType)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrollEvent_DmiProxy(int commandType, int id)
  : ScrollEvent(commandType, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ScrollEvent_DmiProxy(int commandType, int id, int pos)
  : ScrollEvent(commandType, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrollEvent)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrollEvent_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrollEvent_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrollEvent_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrollEvent_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrollEvent_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrollEvent_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrollEvent_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrollEvent_DmiProxy(args[0].getIntVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ScrollEvent_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ScrollEvent_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ScrollEvent_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ScrollEvent::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ScrollEvent_DmiProxy_interfaces[] =
{
  &ScrollEvent_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_commandType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "commandType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_orient =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "orient",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrollEvent_methods__ScrollEvent_I_I_I_I_args[] = 
{
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_commandType,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_id,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_pos,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I_arg_orient,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ScrollEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrollEvent::clazzInfo(), // returnType
  "_0_ScrollEvent_DmiProxy", // altname
  -1, // altnamehashCode
  ScrollEvent_methods__ScrollEvent_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  ScrollEvent_DmiProxy::_ScrollEvent_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrollEvent_methods__ScrollEvent_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrollEvent_DmiProxy_methods__ScrollEvent = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrollEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrollEvent::clazzInfo(), // returnType
  "_1_ScrollEvent_DmiProxy", // altname
  -1, // altnamehashCode
  ScrollEvent_methods__ScrollEvent_args,
  0, // argumentCount
  0, // excpetions,
  ScrollEvent_DmiProxy::_ScrollEvent_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_arg_commandType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "commandType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrollEvent_methods__ScrollEvent_I_args[] = 
{
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_arg_commandType,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrollEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrollEvent::clazzInfo(), // returnType
  "_2_ScrollEvent_DmiProxy", // altname
  -1, // altnamehashCode
  ScrollEvent_methods__ScrollEvent_I_args,
  0, // argumentCount
  0, // excpetions,
  ScrollEvent_DmiProxy::_ScrollEvent_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_arg_commandType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "commandType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrollEvent_methods__ScrollEvent_I_I_args[] = 
{
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_arg_commandType,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrollEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrollEvent::clazzInfo(), // returnType
  "_3_ScrollEvent_DmiProxy", // altname
  -1, // altnamehashCode
  ScrollEvent_methods__ScrollEvent_I_I_args,
  0, // argumentCount
  0, // excpetions,
  ScrollEvent_DmiProxy::_ScrollEvent_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_arg_commandType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "commandType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ScrollEvent_methods__ScrollEvent_I_I_I_args[] = 
{
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_arg_commandType,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_arg_id,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ScrollEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ScrollEvent::clazzInfo(), // returnType
  "_4_ScrollEvent_DmiProxy", // altname
  -1, // altnamehashCode
  ScrollEvent_methods__ScrollEvent_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  ScrollEvent_DmiProxy::_ScrollEvent_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ScrollEvent_methods[] = 
{
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I_I,
  &ScrollEvent_DmiProxy_methods__ScrollEvent,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I,
  &ScrollEvent_DmiProxy_methods__ScrollEvent_I_I_I,
  0
};

::acdk::lang::dmi::ClazzInfo* ScrollEvent_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ScrollEvent_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ScrollEvent_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ScrollEvent_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ScrollEvent_DmiProxy(ScrollEvent_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class MouseEvent_DmiProxy
: extends MouseEvent
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MouseEvent)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MouseEvent::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, MouseEvent)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MouseEvent_DmiProxy(int commandType)
  : MouseEvent(commandType)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MouseEvent_DmiProxy()
  : MouseEvent()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MouseEvent)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MouseEvent_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MouseEvent_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MouseEvent_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MouseEvent_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MouseEvent_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MouseEvent::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MouseEvent_DmiProxy_interfaces[] =
{
  &MouseEvent_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo MouseEvent_DmiProxy_methods__MouseEvent_I_arg_commandType =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "commandType",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MouseEvent_methods__MouseEvent_I_args[] = 
{
  &MouseEvent_DmiProxy_methods__MouseEvent_I_arg_commandType,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MouseEvent_DmiProxy_methods__MouseEvent_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MouseEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MouseEvent::clazzInfo(), // returnType
  "_0_MouseEvent_DmiProxy", // altname
  -1, // altnamehashCode
  MouseEvent_methods__MouseEvent_I_args,
  0, // argumentCount
  0, // excpetions,
  MouseEvent_DmiProxy::_MouseEvent_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* MouseEvent_methods__MouseEvent_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MouseEvent_DmiProxy_methods__MouseEvent = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MouseEvent_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MouseEvent::clazzInfo(), // returnType
  "_1_MouseEvent_DmiProxy", // altname
  -1, // altnamehashCode
  MouseEvent_methods__MouseEvent_args,
  0, // argumentCount
  0, // excpetions,
  MouseEvent_DmiProxy::_MouseEvent_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MouseEvent_methods[] = 
{
  &MouseEvent_DmiProxy_methods__MouseEvent_I,
  &MouseEvent_DmiProxy_methods__MouseEvent,
  0
};

::acdk::lang::dmi::ClazzInfo* MouseEvent_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MouseEvent_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MouseEvent_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MouseEvent_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MouseEvent_DmiProxy(MouseEvent_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class FileDataObject_DmiProxy
: extends FileDataObject
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(FileDataObject)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  FileDataObject::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, FileDataObject)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  FileDataObject_DmiProxy()
  : FileDataObject()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::wx::RDataFormatArray getAllFormats(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[1]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::getAllFormats(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getAllFormats", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RDataFormatArray)(::acdk::lang::RObject)__acdk_retval;
  }
  bool getDataHere(IN(::acdk::wx::RDataFormat) format, OUT(RbyteArray) buf)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::getDataHere(format, buf);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    __acdk_args[1] = ::acdk::lang::outOf(buf);
    _dmiProxyGetTarget()->standardDispatch("getDataHere", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getDataSize(IN(::acdk::wx::RDataFormat) format)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::getDataSize(format);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    _dmiProxyGetTarget()->standardDispatch("getDataSize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int getFormatCount(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::getFormatCount(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getFormatCount", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::wx::RDataFormat getPreferredFormat(DataObjectDirection dir)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::getPreferredFormat(dir);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(dir);
    _dmiProxyGetTarget()->standardDispatch("getPreferredFormat", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RDataFormat)(::acdk::lang::RObject)__acdk_retval;
  }
  bool setData(IN(::acdk::wx::RDataFormat) format, IN(RbyteArray) data)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DataObject)::clazzInfo()->methods[11]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::setData(format, data);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(format);
    __acdk_args[1] = ::acdk::lang::inOf(data);
    _dmiProxyGetTarget()->standardDispatch("setData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDataObject)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDataObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDataObject_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo FileDataObject_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  FileDataObject::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FileDataObject_DmiProxy_interfaces[] =
{
  &FileDataObject_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDataObject_methods__FileDataObject_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDataObject_DmiProxy_methods__FileDataObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "FileDataObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDataObject::clazzInfo(), // returnType
  "_0_FileDataObject_DmiProxy", // altname
  -1, // altnamehashCode
  FileDataObject_methods__FileDataObject_args,
  0, // argumentCount
  0, // excpetions,
  FileDataObject_DmiProxy::_FileDataObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* FileDataObject_methods[] = 
{
  &FileDataObject_DmiProxy_methods__FileDataObject,
  0
};

::acdk::lang::dmi::ClazzInfo* FileDataObject_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "FileDataObject_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _FileDataObject_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     FileDataObject_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_FileDataObject_DmiProxy(FileDataObject_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class FileDialog_DmiProxy
: extends FileDialog
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(FileDialog)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  FileDialog::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, FileDialog)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  FileDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultDir, IN(::acdk::lang::RString) defaultFile, IN(::acdk::lang::RString) wildCard, int style, IN(::acdk::wx::RPoint) pos)
  : FileDialog(parent, message, defaultDir, defaultFile, wildCard, style, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  FileDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message)
  : FileDialog(parent, message)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  FileDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultDir)
  : FileDialog(parent, message, defaultDir)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  FileDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultDir, IN(::acdk::lang::RString) defaultFile)
  : FileDialog(parent, message, defaultDir, defaultFile)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  FileDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultDir, IN(::acdk::lang::RString) defaultFile, IN(::acdk::lang::RString) wildCard)
  : FileDialog(parent, message, defaultDir, defaultFile, wildCard)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  FileDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::lang::RString) message, IN(::acdk::lang::RString) defaultDir, IN(::acdk::lang::RString) defaultFile, IN(::acdk::lang::RString) wildCard, int style)
  : FileDialog(parent, message, defaultDir, defaultFile, wildCard, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  int showModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::clazzInfo()->methods[23]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::showModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("showModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void endModal(int retCode)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::endModal(retCode);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(retCode);
    _dmiProxyGetTarget()->standardDispatch("endModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool isModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::isModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("isModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDialog)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::lang::RString)args[3].getObjectVar(), (::acdk::lang::RString)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RPoint)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDialog_in_acdk_wx_Window_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::lang::RString)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::lang::RString)args[3].getObjectVar(), (::acdk::lang::RString)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::lang::RString)args[1].getObjectVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::lang::RString)args[3].getObjectVar(), (::acdk::lang::RString)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo FileDialog_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  FileDialog::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FileDialog_DmiProxy_interfaces[] =
{
  &FileDialog_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_defaultDir =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultDir",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_defaultFile =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultFile",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_wildCard =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "wildCard",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_args[] = 
{
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_parent,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_message,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_defaultDir,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_defaultFile,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_wildCard,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_style,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "FileDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDialog::clazzInfo(), // returnType
  "_0_FileDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  FileDialog_DmiProxy::_FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_args[] = 
{
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_parent,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_arg_message,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "FileDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDialog::clazzInfo(), // returnType
  "_1_FileDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  FileDialog_DmiProxy::_FileDialog_in_acdk_wx_Window_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_defaultDir =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultDir",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_args[] = 
{
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_parent,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_message,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_arg_defaultDir,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "FileDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDialog::clazzInfo(), // returnType
  "_2_FileDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  FileDialog_DmiProxy::_FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultDir =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultDir",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultFile =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultFile",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_args[] = 
{
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_parent,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_message,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultDir,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultFile,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "FileDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDialog::clazzInfo(), // returnType
  "_3_FileDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  FileDialog_DmiProxy::_FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultDir =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultDir",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultFile =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultFile",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_wildCard =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "wildCard",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_args[] = 
{
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_parent,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_message,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultDir,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_defaultFile,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_arg_wildCard,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "FileDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDialog::clazzInfo(), // returnType
  "_4_FileDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  FileDialog_DmiProxy::_FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_message =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "message",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_defaultDir =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultDir",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_defaultFile =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "defaultFile",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_wildCard =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "wildCard",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_args[] = 
{
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_parent,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_message,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_defaultDir,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_defaultFile,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_wildCard,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "FileDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDialog::clazzInfo(), // returnType
  "_5_FileDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FileDialog_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_args,
  0, // argumentCount
  0, // excpetions,
  FileDialog_DmiProxy::_FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* FileDialog_methods[] = 
{
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I_in_acdk_wx_Point,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String,
  &FileDialog_DmiProxy_methods__FileDialog_in_acdk_wx_Window_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_in_acdk_lang_String_I,
  0
};

::acdk::lang::dmi::ClazzInfo* FileDialog_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "FileDialog_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _FileDialog_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     FileDialog_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_FileDialog_DmiProxy(FileDialog_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class FileDropTarget_DmiProxy
: extends FileDropTarget
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(FileDropTarget)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  FileDropTarget::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, FileDropTarget)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  FileDropTarget_DmiProxy()
  : FileDropTarget()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  bool getData()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clazzInfo()->methods[2]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::getData();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  DragResult onData(int x, int y, DragResult def)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::onData(x, y, def);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    __acdk_args[2] = ::acdk::lang::inOf(def);
    _dmiProxyGetTarget()->standardDispatch("onData", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (DragResult)(int)__acdk_retval;
  }
  DragResult onDragOver(int x, int y, DragResult def)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::onDragOver(x, y, def);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    __acdk_args[2] = ::acdk::lang::inOf(def);
    _dmiProxyGetTarget()->standardDispatch("onDragOver", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (DragResult)(int)__acdk_retval;
  }
  bool onDrop(int x, int y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::onDrop(x, y);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("onDrop", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool onDropFiles(int x, int y, IN(::acdk::lang::RStringArray) filenames)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::onDropFiles(x, y, filenames);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    __acdk_args[2] = ::acdk::lang::inOf(filenames);
    _dmiProxyGetTarget()->standardDispatch("onDropFiles", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  DragResult onEnter(int x, int y, DragResult def)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::onEnter(x, y, def);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    __acdk_args[2] = ::acdk::lang::inOf(def);
    _dmiProxyGetTarget()->standardDispatch("onEnter", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (DragResult)(int)__acdk_retval;
  }
  void onLeave()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clazzInfo()->methods[8]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::onLeave();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("onLeave", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FileDropTarget)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FileDropTarget_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FileDropTarget_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo FileDropTarget_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  FileDropTarget::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FileDropTarget_DmiProxy_interfaces[] =
{
  &FileDropTarget_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* FileDropTarget_methods__FileDropTarget_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo FileDropTarget_DmiProxy_methods__FileDropTarget = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "FileDropTarget_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FileDropTarget::clazzInfo(), // returnType
  "_0_FileDropTarget_DmiProxy", // altname
  -1, // altnamehashCode
  FileDropTarget_methods__FileDropTarget_args,
  0, // argumentCount
  0, // excpetions,
  FileDropTarget_DmiProxy::_FileDropTarget_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* FileDropTarget_methods[] = 
{
  &FileDropTarget_DmiProxy_methods__FileDropTarget,
  0
};

::acdk::lang::dmi::ClazzInfo* FileDropTarget_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "FileDropTarget_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _FileDropTarget_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     FileDropTarget_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_FileDropTarget_DmiProxy(FileDropTarget_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Font_DmiProxy
: extends Font
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Font)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Font::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Font)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Font_DmiProxy()
  : Font()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Font_DmiProxy(int size, int family, int style, int weight, bool underlined, IN(::acdk::lang::RString) face, FontEncoding encoding)
  : Font(size, family, style, weight, underlined, face, (FontEncoding)encoding)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Font_DmiProxy(int size, int family, int style, int weight)
  : Font(size, family, style, weight)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Font_DmiProxy(int size, int family, int style, int weight, bool underlined)
  : Font(size, family, style, weight, underlined)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Font_DmiProxy(int size, int family, int style, int weight, bool underlined, IN(::acdk::lang::RString) face)
  : Font(size, family, style, weight, underlined, face)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Font_DmiProxy(IN(::acdk::lang::RString) fontDesc)
  : Font(fontDesc)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  bool isFixedWidth()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::clazzInfo()->methods[20]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::isFixedWidth();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("isFixedWidth", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Font)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Font_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Font_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Font_I_I_I_I_Z_in_acdk_lang_String_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Font_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getBoolVar(), (::acdk::lang::RString)args[5].getObjectVar(), (FontEncoding)args[6].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Font_I_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Font_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Font_I_I_I_I_Z_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Font_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getBoolVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Font_I_I_I_I_Z_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Font_DmiProxy(args[0].getIntVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar(), args[4].getBoolVar(), (::acdk::lang::RString)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Font_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Font_DmiProxy((::acdk::lang::RString)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Font_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Font::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Font_DmiProxy_interfaces[] =
{
  &Font_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Font_methods__Font_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Font_DmiProxy_methods__Font = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Font_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Font::clazzInfo(), // returnType
  "_0_Font_DmiProxy", // altname
  -1, // altnamehashCode
  Font_methods__Font_args,
  0, // argumentCount
  0, // excpetions,
  Font_DmiProxy::_Font_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_family =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "family",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_weight =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "weight",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_underlined =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "underlined",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_face =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "face",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_encoding =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "encoding",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Font_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_args[] = 
{
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_size,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_family,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_style,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_weight,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_underlined,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_face,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_arg_encoding,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Font_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Font::clazzInfo(), // returnType
  "_1_Font_DmiProxy", // altname
  -1, // altnamehashCode
  Font_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I_args,
  0, // argumentCount
  0, // excpetions,
  Font_DmiProxy::_Font_I_I_I_I_Z_in_acdk_lang_String_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_arg_family =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "family",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_arg_weight =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "weight",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Font_methods__Font_I_I_I_I_args[] = 
{
  &Font_DmiProxy_methods__Font_I_I_I_I_arg_size,
  &Font_DmiProxy_methods__Font_I_I_I_I_arg_family,
  &Font_DmiProxy_methods__Font_I_I_I_I_arg_style,
  &Font_DmiProxy_methods__Font_I_I_I_I_arg_weight,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Font_DmiProxy_methods__Font_I_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Font_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Font::clazzInfo(), // returnType
  "_2_Font_DmiProxy", // altname
  -1, // altnamehashCode
  Font_methods__Font_I_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Font_DmiProxy::_Font_I_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_family =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "family",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_weight =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "weight",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_underlined =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "underlined",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Font_methods__Font_I_I_I_I_Z_args[] = 
{
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_size,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_family,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_style,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_weight,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_arg_underlined,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Font_DmiProxy_methods__Font_I_I_I_I_Z = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Font_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Font::clazzInfo(), // returnType
  "_3_Font_DmiProxy", // altname
  -1, // altnamehashCode
  Font_methods__Font_I_I_I_I_Z_args,
  0, // argumentCount
  0, // excpetions,
  Font_DmiProxy::_Font_I_I_I_I_Z_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_family =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "family",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_weight =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "weight",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_underlined =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "underlined",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getBoolClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_face =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "face",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Font_methods__Font_I_I_I_I_Z_in_acdk_lang_String_args[] = 
{
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_size,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_family,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_style,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_weight,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_underlined,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_arg_face,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Font_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Font::clazzInfo(), // returnType
  "_4_Font_DmiProxy", // altname
  -1, // altnamehashCode
  Font_methods__Font_I_I_I_I_Z_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Font_DmiProxy::_Font_I_I_I_I_Z_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Font_DmiProxy_methods__Font_in_acdk_lang_String_arg_fontDesc =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "fontDesc",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Font_methods__Font_in_acdk_lang_String_args[] = 
{
  &Font_DmiProxy_methods__Font_in_acdk_lang_String_arg_fontDesc,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Font_DmiProxy_methods__Font_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Font_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Font::clazzInfo(), // returnType
  "_5_Font_DmiProxy", // altname
  -1, // altnamehashCode
  Font_methods__Font_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Font_DmiProxy::_Font_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Font_methods[] = 
{
  &Font_DmiProxy_methods__Font,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String_I,
  &Font_DmiProxy_methods__Font_I_I_I_I,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z,
  &Font_DmiProxy_methods__Font_I_I_I_I_Z_in_acdk_lang_String,
  &Font_DmiProxy_methods__Font_in_acdk_lang_String,
  0
};

::acdk::lang::dmi::ClazzInfo* Font_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Font_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Font_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Font_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Font_DmiProxy(Font_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class FontData_DmiProxy
: extends FontData
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(FontData)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  FontData::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, FontData)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  FontData_DmiProxy()
  : FontData()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontData)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontData)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontData)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontData)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontData)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontData)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontData)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FontData_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FontData_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo FontData_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  FontData::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FontData_DmiProxy_interfaces[] =
{
  &FontData_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* FontData_methods__FontData_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo FontData_DmiProxy_methods__FontData = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "FontData_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FontData::clazzInfo(), // returnType
  "_0_FontData_DmiProxy", // altname
  -1, // altnamehashCode
  FontData_methods__FontData_args,
  0, // argumentCount
  0, // excpetions,
  FontData_DmiProxy::_FontData_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* FontData_methods[] = 
{
  &FontData_DmiProxy_methods__FontData,
  0
};

::acdk::lang::dmi::ClazzInfo* FontData_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "FontData_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _FontData_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     FontData_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_FontData_DmiProxy(FontData_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class FontDialog_DmiProxy
: extends FontDialog
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(FontDialog)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  FontDialog::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, FontDialog)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  FontDialog_DmiProxy(IN(::acdk::wx::RWindow) parent, IN(::acdk::wx::RFontData) fontData)
  : FontDialog(parent, fontData)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  FontDialog_DmiProxy(IN(::acdk::wx::RWindow) parent)
  : FontDialog(parent)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  FontDialog_DmiProxy()
  : FontDialog()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void endModal(int retCode)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::endModal(retCode);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(retCode);
    _dmiProxyGetTarget()->standardDispatch("endModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool isModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::isModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("isModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  int showModal()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Dialog)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::showModal();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("showModal", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, FontDialog)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FontDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), (::acdk::wx::RFontData)args[1].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FontDialog_in_acdk_wx_Window_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FontDialog_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _FontDialog_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new FontDialog_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo FontDialog_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  FontDialog::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _FontDialog_DmiProxy_interfaces[] =
{
  &FontDialog_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_arg_fontData =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "fontData",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::FontData::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FontDialog_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_args[] = 
{
  &FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_arg_parent,
  &FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_arg_fontData,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "FontDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FontDialog::clazzInfo(), // returnType
  "_0_FontDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FontDialog_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_args,
  0, // argumentCount
  0, // excpetions,
  FontDialog_DmiProxy::_FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* FontDialog_methods__FontDialog_in_acdk_wx_Window_args[] = 
{
  &FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_arg_parent,
  0
};

::acdk::lang::dmi::ClazzMethodInfo FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "FontDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FontDialog::clazzInfo(), // returnType
  "_1_FontDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FontDialog_methods__FontDialog_in_acdk_wx_Window_args,
  0, // argumentCount
  0, // excpetions,
  FontDialog_DmiProxy::_FontDialog_in_acdk_wx_Window_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* FontDialog_methods__FontDialog_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo FontDialog_DmiProxy_methods__FontDialog = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "FontDialog_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  FontDialog::clazzInfo(), // returnType
  "_2_FontDialog_DmiProxy", // altname
  -1, // altnamehashCode
  FontDialog_methods__FontDialog_args,
  0, // argumentCount
  0, // excpetions,
  FontDialog_DmiProxy::_FontDialog_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* FontDialog_methods[] = 
{
  &FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window_in_acdk_wx_FontData,
  &FontDialog_DmiProxy_methods__FontDialog_in_acdk_wx_Window,
  &FontDialog_DmiProxy_methods__FontDialog,
  0
};

::acdk::lang::dmi::ClazzInfo* FontDialog_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "FontDialog_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _FontDialog_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     FontDialog_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_FontDialog_DmiProxy(FontDialog_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Frame_DmiProxy
: extends Frame
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Frame)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Frame::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Frame)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Frame_DmiProxy(IN(::acdk::lang::RString) title)
  : Frame(title)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Frame_DmiProxy()
  : Frame()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Frame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : Frame(parent, id, title, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Frame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title)
  : Frame(parent, id, title)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Frame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos)
  : Frame(parent, id, title, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Frame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Frame(parent, id, title, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Frame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Frame(parent, id, title, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::wx::RStatusBar createStatusBar(int number, int style, int id, IN(::acdk::lang::RString) name)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::createStatusBar(number, style, id, name);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(4);
    __acdk_args[0] = ::acdk::lang::inOf(number);
    __acdk_args[1] = ::acdk::lang::inOf(style);
    __acdk_args[2] = ::acdk::lang::inOf(id);
    __acdk_args[3] = ::acdk::lang::inOf(name);
    _dmiProxyGetTarget()->standardDispatch("createStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RToolBar createToolBar(int style, int id)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[14]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::createToolBar(style, id);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(style);
    __acdk_args[1] = ::acdk::lang::inOf(id);
    _dmiProxyGetTarget()->standardDispatch("createToolBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RToolBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RStatusBar getStatusBar()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[16]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::getStatusBar();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RStatusBar onCreateStatusBar(int number, int id, IN(::acdk::lang::RString) name)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[18]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::onCreateStatusBar(number, id, name);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(number);
    __acdk_args[1] = ::acdk::lang::inOf(id);
    __acdk_args[2] = ::acdk::lang::inOf(name);
    _dmiProxyGetTarget()->standardDispatch("onCreateStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  void positionStatusBar()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[24]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::positionStatusBar();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("positionStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStatusText(IN(::acdk::lang::RString) text, int number)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[30]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::setStatusText(text, number);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(text);
    __acdk_args[1] = ::acdk::lang::inOf(number);
    _dmiProxyGetTarget()->standardDispatch("setStatusText", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStatusWidths(int n, IN(RintArray) widths_field)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[32]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::setStatusWidths(n, widths_field);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(n);
    __acdk_args[1] = ::acdk::lang::inOf(widths_field);
    _dmiProxyGetTarget()->standardDispatch("setStatusWidths", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Frame_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Frame_DmiProxy((::acdk::lang::RString)args[0].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Frame_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Frame_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Frame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RString)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Frame_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Frame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Frame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Frame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Frame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Frame_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Frame::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Frame_DmiProxy_interfaces[] =
{
  &Frame_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Frame_methods__Frame_in_acdk_lang_String_args[] = 
{
  &Frame_DmiProxy_methods__Frame_in_acdk_lang_String_arg_title,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Frame_DmiProxy_methods__Frame_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Frame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Frame::clazzInfo(), // returnType
  "_0_Frame_DmiProxy", // altname
  -1, // altnamehashCode
  Frame_methods__Frame_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Frame_DmiProxy::_Frame_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* Frame_methods__Frame_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Frame_DmiProxy_methods__Frame = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Frame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Frame::clazzInfo(), // returnType
  "_1_Frame_DmiProxy", // altname
  -1, // altnamehashCode
  Frame_methods__Frame_args,
  0, // argumentCount
  0, // excpetions,
  Frame_DmiProxy::_Frame_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Frame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Frame::clazzInfo(), // returnType
  "_2_Frame_DmiProxy", // altname
  -1, // altnamehashCode
  Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Frame_DmiProxy::_Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Frame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Frame::clazzInfo(), // returnType
  "_3_Frame_DmiProxy", // altname
  -1, // altnamehashCode
  Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Frame_DmiProxy::_Frame_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Frame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Frame::clazzInfo(), // returnType
  "_4_Frame_DmiProxy", // altname
  -1, // altnamehashCode
  Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Frame_DmiProxy::_Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Frame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Frame::clazzInfo(), // returnType
  "_5_Frame_DmiProxy", // altname
  -1, // altnamehashCode
  Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Frame_DmiProxy::_Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Frame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Frame::clazzInfo(), // returnType
  "_6_Frame_DmiProxy", // altname
  -1, // altnamehashCode
  Frame_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Frame_DmiProxy::_Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Frame_methods[] = 
{
  &Frame_DmiProxy_methods__Frame_in_acdk_lang_String,
  &Frame_DmiProxy_methods__Frame,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &Frame_DmiProxy_methods__Frame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Frame_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Frame_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Frame_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Frame_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Frame_DmiProxy(Frame_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Gauge_DmiProxy
: extends Gauge
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Gauge)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Gauge::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Gauge)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Gauge_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int range, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : Gauge(parent, id, range, pos, size, style, choices, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Gauge_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int range)
  : Gauge(parent, id, range)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Gauge_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int range, IN(::acdk::wx::RPoint) pos)
  : Gauge(parent, id, range, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Gauge_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int range, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : Gauge(parent, id, range, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Gauge_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int range, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : Gauge(parent, id, range, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Gauge_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int range, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices)
  : Gauge(parent, id, range, pos, size, style, choices)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Gauge_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, int range, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RStringArray) choices, IN(::acdk::wx::RValidator) validator)
  : Gauge(parent, id, range, pos, size, style, choices, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Gauge)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Gauge_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RStringArray)args[6].getObjectVar(), (::acdk::wx::RValidator)args[7].getObjectVar(), (::acdk::lang::RString)args[8].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Gauge_in_acdk_wx_Window_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Gauge_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Gauge_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Gauge_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Gauge_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Gauge_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RStringArray)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Gauge_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RStringArray)args[6].getObjectVar(), (::acdk::wx::RValidator)args[7].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Gauge_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Gauge::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Gauge_DmiProxy_interfaces[] =
{
  &Gauge_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_range =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "range",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_range,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Gauge_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Gauge::clazzInfo(), // returnType
  "_0_Gauge_DmiProxy", // altname
  -1, // altnamehashCode
  Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  Gauge_DmiProxy::_Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_arg_range =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "range",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Gauge_methods__Gauge_in_acdk_wx_Window_I_I_args[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_arg_parent,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_arg_id,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_arg_range,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Gauge_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Gauge::clazzInfo(), // returnType
  "_1_Gauge_DmiProxy", // altname
  -1, // altnamehashCode
  Gauge_methods__Gauge_in_acdk_wx_Window_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Gauge_DmiProxy::_Gauge_in_acdk_wx_Window_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_range =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "range",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_args[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_parent,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_id,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_range,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Gauge_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Gauge::clazzInfo(), // returnType
  "_2_Gauge_DmiProxy", // altname
  -1, // altnamehashCode
  Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  Gauge_DmiProxy::_Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_range =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "range",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_range,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Gauge_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Gauge::clazzInfo(), // returnType
  "_3_Gauge_DmiProxy", // altname
  -1, // altnamehashCode
  Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  Gauge_DmiProxy::_Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_range =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "range",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_range,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Gauge_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Gauge::clazzInfo(), // returnType
  "_4_Gauge_DmiProxy", // altname
  -1, // altnamehashCode
  Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  Gauge_DmiProxy::_Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_range =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "range",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_parent,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_id,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_range,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_pos,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_size,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_style,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_arg_choices,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Gauge_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Gauge::clazzInfo(), // returnType
  "_5_Gauge_DmiProxy", // altname
  -1, // altnamehashCode
  Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_args,
  0, // argumentCount
  0, // excpetions,
  Gauge_DmiProxy::_Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_range =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "range",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_parent,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_id,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_range,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_pos,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_size,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_style,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_choices,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Gauge_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Gauge::clazzInfo(), // returnType
  "_6_Gauge_DmiProxy", // altname
  -1, // altnamehashCode
  Gauge_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  Gauge_DmiProxy::_Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Gauge_methods[] = 
{
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator_in_acdk_lang_String,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray,
  &Gauge_DmiProxy_methods__Gauge_in_acdk_wx_Window_I_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_StringArray_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* Gauge_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Gauge_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Gauge_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Gauge_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Gauge_DmiProxy(Gauge_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class GDIObject_DmiProxy
: extends GDIObject
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(GDIObject)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  GDIObject::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, GDIObject)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  GDIObject_DmiProxy()
  : GDIObject()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GDIObject)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GDIObject)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GDIObject)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GDIObject)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GDIObject)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GDIObject)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, GDIObject)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _GDIObject_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new GDIObject_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo GDIObject_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  GDIObject::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _GDIObject_DmiProxy_interfaces[] =
{
  &GDIObject_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* GDIObject_methods__GDIObject_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo GDIObject_DmiProxy_methods__GDIObject = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "GDIObject_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  GDIObject::clazzInfo(), // returnType
  "_0_GDIObject_DmiProxy", // altname
  -1, // altnamehashCode
  GDIObject_methods__GDIObject_args,
  0, // argumentCount
  0, // excpetions,
  GDIObject_DmiProxy::_GDIObject_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* GDIObject_methods[] = 
{
  &GDIObject_DmiProxy_methods__GDIObject,
  0
};

::acdk::lang::dmi::ClazzInfo* GDIObject_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "GDIObject_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _GDIObject_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     GDIObject_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_GDIObject_DmiProxy(GDIObject_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class HtmlWindow_DmiProxy
: extends HtmlWindow
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(HtmlWindow)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  HtmlWindow::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, HtmlWindow)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  HtmlWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : HtmlWindow(parent, id, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  HtmlWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : HtmlWindow(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  HtmlWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : HtmlWindow(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  HtmlWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : HtmlWindow(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  HtmlWindow_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : HtmlWindow(parent, id, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  bool loadPage(IN(::acdk::lang::RString) location)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::clazzInfo()->methods[17]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::loadPage(location);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(location);
    _dmiProxyGetTarget()->standardDispatch("loadPage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void enableScrolling(bool x_scrolling, bool y_scrolling)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[10]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::enableScrolling(x_scrolling, y_scrolling);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x_scrolling);
    __acdk_args[1] = ::acdk::lang::inOf(y_scrolling);
    _dmiProxyGetTarget()->standardDispatch("enableScrolling", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void getScrollPixelsPerUnit(OUT(int) pixelsPerUnitX, OUT(int) pixelsPerUnitY)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[14]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::getScrollPixelsPerUnit(pixelsPerUnitX, pixelsPerUnitY);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::outOf(pixelsPerUnitX);
    __acdk_args[1] = ::acdk::lang::outOf(pixelsPerUnitY);
    _dmiProxyGetTarget()->standardDispatch("getScrollPixelsPerUnit", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::wx::RWindow getTargetWindow()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[16]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::getTargetWindow();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getTargetWindow", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RWindow)(::acdk::lang::RObject)__acdk_retval;
  }
  void getViewStart(OUT(int) x, OUT(int) y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[17]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::getViewStart(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::outOf(x);
    __acdk_args[1] = ::acdk::lang::outOf(y);
    _dmiProxyGetTarget()->standardDispatch("getViewStart", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void scroll(int x, int y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[18]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::scroll(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("scroll", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setScrollbars(int pixelsPerUnitX, int pixelsPerUnitY, int noUnitsX, int noUnitsY, int xPos, int yPos, bool noRefresh)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[22]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::setScrollbars(pixelsPerUnitX, pixelsPerUnitY, noUnitsX, noUnitsY, xPos, yPos, noRefresh);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(7);
    __acdk_args[0] = ::acdk::lang::inOf(pixelsPerUnitX);
    __acdk_args[1] = ::acdk::lang::inOf(pixelsPerUnitY);
    __acdk_args[2] = ::acdk::lang::inOf(noUnitsX);
    __acdk_args[3] = ::acdk::lang::inOf(noUnitsY);
    __acdk_args[4] = ::acdk::lang::inOf(xPos);
    __acdk_args[5] = ::acdk::lang::inOf(yPos);
    __acdk_args[6] = ::acdk::lang::inOf(noRefresh);
    _dmiProxyGetTarget()->standardDispatch("setScrollbars", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setTargetWindow(IN(::acdk::wx::RWindow) target)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ScrolledWindow)::clazzInfo()->methods[27]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::setTargetWindow(target);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(target);
    _dmiProxyGetTarget()->standardDispatch("setTargetWindow", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, HtmlWindow)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new HtmlWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar(), (::acdk::lang::RString)args[5].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _HtmlWindow_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new HtmlWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new HtmlWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new HtmlWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new HtmlWindow_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), args[4].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo HtmlWindow_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  HtmlWindow::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _HtmlWindow_DmiProxy_interfaces[] =
{
  &HtmlWindow_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "HtmlWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  HtmlWindow::clazzInfo(), // returnType
  "_0_HtmlWindow_DmiProxy", // altname
  -1, // altnamehashCode
  HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  HtmlWindow_DmiProxy::_HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_args[] = 
{
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_arg_parent,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "HtmlWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  HtmlWindow::clazzInfo(), // returnType
  "_1_HtmlWindow_DmiProxy", // altname
  -1, // altnamehashCode
  HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  HtmlWindow_DmiProxy::_HtmlWindow_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "HtmlWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  HtmlWindow::clazzInfo(), // returnType
  "_2_HtmlWindow_DmiProxy", // altname
  -1, // altnamehashCode
  HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  HtmlWindow_DmiProxy::_HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "HtmlWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  HtmlWindow::clazzInfo(), // returnType
  "_3_HtmlWindow_DmiProxy", // altname
  -1, // altnamehashCode
  HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  HtmlWindow_DmiProxy::_HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "HtmlWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  HtmlWindow::clazzInfo(), // returnType
  "_4_HtmlWindow_DmiProxy", // altname
  -1, // altnamehashCode
  HtmlWindow_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  HtmlWindow_DmiProxy::_HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* HtmlWindow_methods[] = 
{
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &HtmlWindow_DmiProxy_methods__HtmlWindow_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* HtmlWindow_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "HtmlWindow_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _HtmlWindow_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     HtmlWindow_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_HtmlWindow_DmiProxy(HtmlWindow_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Icon_DmiProxy
: extends Icon
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Icon)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Icon::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Icon)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Icon_DmiProxy()
  : Icon()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Icon_DmiProxy(IN(::acdk::lang::RString) name, int type, int desiredWidth, int desiredHeight)
  : Icon(name, type, desiredWidth, desiredHeight)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Icon_DmiProxy(IN(::acdk::lang::RString) name, int type)
  : Icon(name, type)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Icon_DmiProxy(IN(::acdk::lang::RString) name, int type, int desiredWidth)
  : Icon(name, type, desiredWidth)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Icon)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Icon)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Icon)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Icon)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Icon)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Icon)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Icon)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Icon_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Icon_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Icon_in_acdk_lang_String_I_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Icon_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar(), args[3].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Icon_in_acdk_lang_String_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Icon_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Icon_in_acdk_lang_String_I_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Icon_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), args[1].getIntVar(), args[2].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Icon_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Icon::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Icon_DmiProxy_interfaces[] =
{
  &Icon_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* Icon_methods__Icon_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Icon_DmiProxy_methods__Icon = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Icon_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Icon::clazzInfo(), // returnType
  "_0_Icon_DmiProxy", // altname
  -1, // altnamehashCode
  Icon_methods__Icon_args,
  0, // argumentCount
  0, // excpetions,
  Icon_DmiProxy::_Icon_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_type =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "type",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_desiredWidth =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "desiredWidth",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_desiredHeight =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "desiredHeight",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Icon_methods__Icon_in_acdk_lang_String_I_I_I_args[] = 
{
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_name,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_type,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_desiredWidth,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I_arg_desiredHeight,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Icon_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Icon::clazzInfo(), // returnType
  "_1_Icon_DmiProxy", // altname
  -1, // altnamehashCode
  Icon_methods__Icon_in_acdk_lang_String_I_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Icon_DmiProxy::_Icon_in_acdk_lang_String_I_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_arg_type =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "type",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Icon_methods__Icon_in_acdk_lang_String_I_args[] = 
{
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_arg_name,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_arg_type,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Icon_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Icon::clazzInfo(), // returnType
  "_2_Icon_DmiProxy", // altname
  -1, // altnamehashCode
  Icon_methods__Icon_in_acdk_lang_String_I_args,
  0, // argumentCount
  0, // excpetions,
  Icon_DmiProxy::_Icon_in_acdk_lang_String_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_arg_type =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "type",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_arg_desiredWidth =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "desiredWidth",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Icon_methods__Icon_in_acdk_lang_String_I_I_args[] = 
{
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_arg_name,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_arg_type,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_arg_desiredWidth,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Icon_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Icon::clazzInfo(), // returnType
  "_3_Icon_DmiProxy", // altname
  -1, // altnamehashCode
  Icon_methods__Icon_in_acdk_lang_String_I_I_args,
  0, // argumentCount
  0, // excpetions,
  Icon_DmiProxy::_Icon_in_acdk_lang_String_I_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Icon_methods[] = 
{
  &Icon_DmiProxy_methods__Icon,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I_I,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I,
  &Icon_DmiProxy_methods__Icon_in_acdk_lang_String_I_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Icon_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Icon_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Icon_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Icon_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Icon_DmiProxy(Icon_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class IndividualLayoutConstraint_DmiProxy
: extends IndividualLayoutConstraint
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(IndividualLayoutConstraint)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  IndividualLayoutConstraint::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, IndividualLayoutConstraint)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  IndividualLayoutConstraint_DmiProxy()
  : IndividualLayoutConstraint()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, IndividualLayoutConstraint)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, IndividualLayoutConstraint)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, IndividualLayoutConstraint)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, IndividualLayoutConstraint)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, IndividualLayoutConstraint)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, IndividualLayoutConstraint)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, IndividualLayoutConstraint)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _IndividualLayoutConstraint_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new IndividualLayoutConstraint_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo IndividualLayoutConstraint_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  IndividualLayoutConstraint::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _IndividualLayoutConstraint_DmiProxy_interfaces[] =
{
  &IndividualLayoutConstraint_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* IndividualLayoutConstraint_methods__IndividualLayoutConstraint_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo IndividualLayoutConstraint_DmiProxy_methods__IndividualLayoutConstraint = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "IndividualLayoutConstraint_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  IndividualLayoutConstraint::clazzInfo(), // returnType
  "_0_IndividualLayoutConstraint_DmiProxy", // altname
  -1, // altnamehashCode
  IndividualLayoutConstraint_methods__IndividualLayoutConstraint_args,
  0, // argumentCount
  0, // excpetions,
  IndividualLayoutConstraint_DmiProxy::_IndividualLayoutConstraint_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* IndividualLayoutConstraint_methods[] = 
{
  &IndividualLayoutConstraint_DmiProxy_methods__IndividualLayoutConstraint,
  0
};

::acdk::lang::dmi::ClazzInfo* IndividualLayoutConstraint_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "IndividualLayoutConstraint_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _IndividualLayoutConstraint_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     IndividualLayoutConstraint_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_IndividualLayoutConstraint_DmiProxy(IndividualLayoutConstraint_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class LayoutConstraints_DmiProxy
: extends LayoutConstraints
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(LayoutConstraints)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  LayoutConstraints::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, LayoutConstraints)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  LayoutConstraints_DmiProxy()
  : LayoutConstraints()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, LayoutConstraints)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, LayoutConstraints)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, LayoutConstraints)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, LayoutConstraints)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, LayoutConstraints)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, LayoutConstraints)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, LayoutConstraints)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _LayoutConstraints_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new LayoutConstraints_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo LayoutConstraints_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  LayoutConstraints::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _LayoutConstraints_DmiProxy_interfaces[] =
{
  &LayoutConstraints_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* LayoutConstraints_methods__LayoutConstraints_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo LayoutConstraints_DmiProxy_methods__LayoutConstraints = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "LayoutConstraints_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  LayoutConstraints::clazzInfo(), // returnType
  "_0_LayoutConstraints_DmiProxy", // altname
  -1, // altnamehashCode
  LayoutConstraints_methods__LayoutConstraints_args,
  0, // argumentCount
  0, // excpetions,
  LayoutConstraints_DmiProxy::_LayoutConstraints_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* LayoutConstraints_methods[] = 
{
  &LayoutConstraints_DmiProxy_methods__LayoutConstraints,
  0
};

::acdk::lang::dmi::ClazzInfo* LayoutConstraints_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "LayoutConstraints_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _LayoutConstraints_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     LayoutConstraints_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_LayoutConstraints_DmiProxy(LayoutConstraints_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class ListBox_DmiProxy
: extends ListBox
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(ListBox)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  ListBox::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, ListBox)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  ListBox_DmiProxy()
  : ListBox()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ListBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, IN(::acdk::lang::RStringArray) choices, int style, IN(::acdk::wx::RValidator) validator, IN(::acdk::lang::RString) name)
  : ListBox(parent, id, pos, size, choices, style, validator, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ListBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id)
  : ListBox(parent, id)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ListBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos)
  : ListBox(parent, id, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ListBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : ListBox(parent, id, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ListBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, IN(::acdk::lang::RStringArray) choices)
  : ListBox(parent, id, pos, size, choices)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ListBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, IN(::acdk::lang::RStringArray) choices, int style)
  : ListBox(parent, id, pos, size, choices, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ListBox_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, IN(::acdk::lang::RStringArray) choices, int style, IN(::acdk::wx::RValidator) validator)
  : ListBox(parent, id, pos, size, choices, style, validator)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void ensureVisible(int n)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::clazzInfo()->methods[17]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::ensureVisible(n);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(n);
    _dmiProxyGetTarget()->standardDispatch("ensureVisible", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getSelections(IN(RintArray) aSelections)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::clazzInfo()->methods[21]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::getSelections(aSelections);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(aSelections);
    _dmiProxyGetTarget()->standardDispatch("getSelections", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void select(int n)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::clazzInfo()->methods[30]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::select(n);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(n);
    _dmiProxyGetTarget()->standardDispatch("select", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool setStringSelection(IN(::acdk::lang::RString) s, bool select)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::clazzInfo()->methods[38]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::setStringSelection(s, select);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(s);
    __acdk_args[1] = ::acdk::lang::inOf(select);
    _dmiProxyGetTarget()->standardDispatch("setStringSelection", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void command(IN(::acdk::wx::RCommandEvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Control)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::command(event);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("command", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, ListBox)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), (::acdk::lang::RStringArray)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar(), (::acdk::lang::RString)args[7].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_in_acdk_wx_Window_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), (::acdk::lang::RStringArray)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), (::acdk::lang::RStringArray)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new ListBox_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::wx::RPoint)args[2].getObjectVar(), (::acdk::wx::RSize)args[3].getObjectVar(), (::acdk::lang::RStringArray)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::wx::RValidator)args[6].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo ListBox_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  ListBox::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _ListBox_DmiProxy_interfaces[] =
{
  &ListBox_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_0_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_args[] = 
{
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_parent,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_id,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_pos,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_size,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_choices,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_style,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_validator,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_1_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_in_acdk_wx_Window_I_args[] = 
{
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_arg_parent,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_arg_id,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_2_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_in_acdk_wx_Window_I_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_in_acdk_wx_Window_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_args[] = 
{
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_parent,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_id,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_3_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_4_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_args[] = 
{
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_parent,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_id,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_pos,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_size,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_arg_choices,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_5_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_args[] = 
{
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_parent,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_id,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_pos,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_size,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_choices,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_6_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_choices =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "choices",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::StringArray::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_validator =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "validator",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Validator::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_args[] = 
{
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_parent,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_id,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_pos,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_size,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_choices,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_style,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_arg_validator,
  0
};

::acdk::lang::dmi::ClazzMethodInfo ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "ListBox_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  ListBox::clazzInfo(), // returnType
  "_7_ListBox_DmiProxy", // altname
  -1, // altnamehashCode
  ListBox_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_args,
  0, // argumentCount
  0, // excpetions,
  ListBox_DmiProxy::_ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* ListBox_methods[] = 
{
  &ListBox_DmiProxy_methods__ListBox,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator_in_acdk_lang_String,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I,
  &ListBox_DmiProxy_methods__ListBox_in_acdk_wx_Window_I_in_acdk_wx_Point_in_acdk_wx_Size_in_acdk_lang_StringArray_I_in_acdk_wx_Validator,
  0
};

::acdk::lang::dmi::ClazzInfo* ListBox_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "ListBox_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _ListBox_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     ListBox_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_ListBox_DmiProxy(ListBox_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class MDIChildFrame_DmiProxy
: extends MDIChildFrame
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MDIChildFrame)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MDIChildFrame::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, MDIChildFrame)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MDIChildFrame_DmiProxy(IN(::acdk::wx::RMDIParentFrame) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : MDIChildFrame(parent, id, title, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIChildFrame_DmiProxy(IN(::acdk::wx::RMDIParentFrame) parent, int id, IN(::acdk::lang::RString) title)
  : MDIChildFrame(parent, id, title)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIChildFrame_DmiProxy(IN(::acdk::wx::RMDIParentFrame) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos)
  : MDIChildFrame(parent, id, title, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIChildFrame_DmiProxy(IN(::acdk::wx::RMDIParentFrame) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : MDIChildFrame(parent, id, title, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIChildFrame_DmiProxy(IN(::acdk::wx::RMDIParentFrame) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : MDIChildFrame(parent, id, title, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  ::acdk::wx::RStatusBar createStatusBar(int number, int style, int id, IN(::acdk::lang::RString) name)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::createStatusBar(number, style, id, name);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(4);
    __acdk_args[0] = ::acdk::lang::inOf(number);
    __acdk_args[1] = ::acdk::lang::inOf(style);
    __acdk_args[2] = ::acdk::lang::inOf(id);
    __acdk_args[3] = ::acdk::lang::inOf(name);
    _dmiProxyGetTarget()->standardDispatch("createStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RToolBar createToolBar(int style, int id)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[14]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::createToolBar(style, id);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(style);
    __acdk_args[1] = ::acdk::lang::inOf(id);
    _dmiProxyGetTarget()->standardDispatch("createToolBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RToolBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RStatusBar getStatusBar()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[16]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::getStatusBar();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RStatusBar onCreateStatusBar(int number, int id, IN(::acdk::lang::RString) name)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[18]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::onCreateStatusBar(number, id, name);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(number);
    __acdk_args[1] = ::acdk::lang::inOf(id);
    __acdk_args[2] = ::acdk::lang::inOf(name);
    _dmiProxyGetTarget()->standardDispatch("onCreateStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  void positionStatusBar()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[24]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::positionStatusBar();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("positionStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStatusText(IN(::acdk::lang::RString) text, int number)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[30]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::setStatusText(text, number);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(text);
    __acdk_args[1] = ::acdk::lang::inOf(number);
    _dmiProxyGetTarget()->standardDispatch("setStatusText", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStatusWidths(int n, IN(RintArray) widths_field)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[32]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::setStatusWidths(n, widths_field);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(n);
    __acdk_args[1] = ::acdk::lang::inOf(widths_field);
    _dmiProxyGetTarget()->standardDispatch("setStatusWidths", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIChildFrame)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIChildFrame_DmiProxy((::acdk::wx::RMDIParentFrame)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RString)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIChildFrame_DmiProxy((::acdk::wx::RMDIParentFrame)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIChildFrame_DmiProxy((::acdk::wx::RMDIParentFrame)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIChildFrame_DmiProxy((::acdk::wx::RMDIParentFrame)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIChildFrame_DmiProxy((::acdk::wx::RMDIParentFrame)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MDIChildFrame_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MDIChildFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MDIChildFrame_DmiProxy_interfaces[] =
{
  &MDIChildFrame_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::MDIParentFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MDIChildFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIChildFrame::clazzInfo(), // returnType
  "_0_MDIChildFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  MDIChildFrame_DmiProxy::_MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::MDIParentFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_args[] = 
{
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_arg_parent,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_arg_id,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_arg_title,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIChildFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIChildFrame::clazzInfo(), // returnType
  "_1_MDIChildFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  MDIChildFrame_DmiProxy::_MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::MDIParentFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIChildFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIChildFrame::clazzInfo(), // returnType
  "_2_MDIChildFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  MDIChildFrame_DmiProxy::_MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::MDIParentFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIChildFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIChildFrame::clazzInfo(), // returnType
  "_3_MDIChildFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  MDIChildFrame_DmiProxy::_MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::MDIParentFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIChildFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIChildFrame::clazzInfo(), // returnType
  "_4_MDIChildFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIChildFrame_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  MDIChildFrame_DmiProxy::_MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MDIChildFrame_methods[] = 
{
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &MDIChildFrame_DmiProxy_methods__MDIChildFrame_in_acdk_wx_MDIParentFrame_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* MDIChildFrame_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MDIChildFrame_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MDIChildFrame_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MDIChildFrame_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MDIChildFrame_DmiProxy(MDIChildFrame_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class MDIClientWindow_DmiProxy
: extends MDIClientWindow
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MDIClientWindow)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MDIClientWindow::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, MDIClientWindow)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MDIClientWindow_DmiProxy()
  : MDIClientWindow()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIClientWindow_DmiProxy(IN(::acdk::wx::RMDIParentFrame) parent, int style)
  : MDIClientWindow(parent, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIClientWindow)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIClientWindow_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIClientWindow_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIClientWindow_in_acdk_wx_MDIParentFrame_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIClientWindow_DmiProxy((::acdk::wx::RMDIParentFrame)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MDIClientWindow_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MDIClientWindow::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MDIClientWindow_DmiProxy_interfaces[] =
{
  &MDIClientWindow_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIClientWindow_methods__MDIClientWindow_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIClientWindow_DmiProxy_methods__MDIClientWindow = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MDIClientWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIClientWindow::clazzInfo(), // returnType
  "_0_MDIClientWindow_DmiProxy", // altname
  -1, // altnamehashCode
  MDIClientWindow_methods__MDIClientWindow_args,
  0, // argumentCount
  0, // excpetions,
  MDIClientWindow_DmiProxy::_MDIClientWindow_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIClientWindow_DmiProxy_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::MDIParentFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIClientWindow_DmiProxy_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIClientWindow_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I_args[] = 
{
  &MDIClientWindow_DmiProxy_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I_arg_parent,
  &MDIClientWindow_DmiProxy_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIClientWindow_DmiProxy_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MDIClientWindow_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIClientWindow::clazzInfo(), // returnType
  "_1_MDIClientWindow_DmiProxy", // altname
  -1, // altnamehashCode
  MDIClientWindow_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I_args,
  0, // argumentCount
  0, // excpetions,
  MDIClientWindow_DmiProxy::_MDIClientWindow_in_acdk_wx_MDIParentFrame_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MDIClientWindow_methods[] = 
{
  &MDIClientWindow_DmiProxy_methods__MDIClientWindow,
  &MDIClientWindow_DmiProxy_methods__MDIClientWindow_in_acdk_wx_MDIParentFrame_I,
  0
};

::acdk::lang::dmi::ClazzInfo* MDIClientWindow_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MDIClientWindow_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MDIClientWindow_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MDIClientWindow_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MDIClientWindow_DmiProxy(MDIClientWindow_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class MDIParentFrame_DmiProxy
: extends MDIParentFrame
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MDIParentFrame)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MDIParentFrame::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, MDIParentFrame)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MDIParentFrame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style, IN(::acdk::lang::RString) name)
  : MDIParentFrame(parent, id, title, pos, size, style, name)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIParentFrame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title)
  : MDIParentFrame(parent, id, title)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIParentFrame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos)
  : MDIParentFrame(parent, id, title, pos)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIParentFrame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size)
  : MDIParentFrame(parent, id, title, pos, size)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MDIParentFrame_DmiProxy(IN(::acdk::wx::RWindow) parent, int id, IN(::acdk::lang::RString) title, IN(::acdk::wx::RPoint) pos, IN(::acdk::wx::RSize) size, int style)
  : MDIParentFrame(parent, id, title, pos, size, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void activateNext()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::clazzInfo()->methods[6]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::activateNext();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("activateNext", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void activatePrevious()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::activatePrevious();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("activatePrevious", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void arrangeIcons()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::clazzInfo()->methods[8]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::arrangeIcons();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("arrangeIcons", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void cascade()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::clazzInfo()->methods[9]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::cascade();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("cascade", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void tile()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::clazzInfo()->methods[16]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::tile();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("tile", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::wx::RStatusBar createStatusBar(int number, int style, int id, IN(::acdk::lang::RString) name)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::createStatusBar(number, style, id, name);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(4);
    __acdk_args[0] = ::acdk::lang::inOf(number);
    __acdk_args[1] = ::acdk::lang::inOf(style);
    __acdk_args[2] = ::acdk::lang::inOf(id);
    __acdk_args[3] = ::acdk::lang::inOf(name);
    _dmiProxyGetTarget()->standardDispatch("createStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RToolBar createToolBar(int style, int id)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[14]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::createToolBar(style, id);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(style);
    __acdk_args[1] = ::acdk::lang::inOf(id);
    _dmiProxyGetTarget()->standardDispatch("createToolBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RToolBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RStatusBar getStatusBar()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[16]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::getStatusBar();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RStatusBar onCreateStatusBar(int number, int id, IN(::acdk::lang::RString) name)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[18]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::onCreateStatusBar(number, id, name);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(number);
    __acdk_args[1] = ::acdk::lang::inOf(id);
    __acdk_args[2] = ::acdk::lang::inOf(name);
    _dmiProxyGetTarget()->standardDispatch("onCreateStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RStatusBar)(::acdk::lang::RObject)__acdk_retval;
  }
  void positionStatusBar()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[24]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::positionStatusBar();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("positionStatusBar", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStatusText(IN(::acdk::lang::RString) text, int number)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[30]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::setStatusText(text, number);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(text);
    __acdk_args[1] = ::acdk::lang::inOf(number);
    _dmiProxyGetTarget()->standardDispatch("setStatusText", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setStatusWidths(int n, IN(RintArray) widths_field)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Frame)::clazzInfo()->methods[32]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::setStatusWidths(n, widths_field);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(n);
    __acdk_args[1] = ::acdk::lang::inOf(widths_field);
    _dmiProxyGetTarget()->standardDispatch("setStatusWidths", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MDIParentFrame)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIParentFrame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar(), (::acdk::lang::RString)args[6].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIParentFrame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIParentFrame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIParentFrame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MDIParentFrame_DmiProxy((::acdk::wx::RWindow)args[0].getObjectVar(), args[1].getIntVar(), (::acdk::lang::RString)args[2].getObjectVar(), (::acdk::wx::RPoint)args[3].getObjectVar(), (::acdk::wx::RSize)args[4].getObjectVar(), args[5].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MDIParentFrame_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MDIParentFrame::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MDIParentFrame_DmiProxy_interfaces[] =
{
  &MDIParentFrame_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args[] = 
{
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_parent,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_id,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_title,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_pos,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_size,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_style,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_arg_name,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MDIParentFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIParentFrame::clazzInfo(), // returnType
  "_0_MDIParentFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  MDIParentFrame_DmiProxy::_MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_args[] = 
{
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_parent,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_id,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_arg_title,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIParentFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIParentFrame::clazzInfo(), // returnType
  "_1_MDIParentFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_args,
  0, // argumentCount
  0, // excpetions,
  MDIParentFrame_DmiProxy::_MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args[] = 
{
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_parent,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_id,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_title,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_arg_pos,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIParentFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIParentFrame::clazzInfo(), // returnType
  "_2_MDIParentFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_args,
  0, // argumentCount
  0, // excpetions,
  MDIParentFrame_DmiProxy::_MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args[] = 
{
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_parent,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_id,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_title,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_pos,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_arg_size,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIParentFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIParentFrame::clazzInfo(), // returnType
  "_3_MDIParentFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_args,
  0, // argumentCount
  0, // excpetions,
  MDIParentFrame_DmiProxy::_MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "parent",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Window::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "id",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "title",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "pos",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Point::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "size",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::Size::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args[] = 
{
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_parent,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_id,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_title,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_pos,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_size,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "MDIParentFrame_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MDIParentFrame::clazzInfo(), // returnType
  "_4_MDIParentFrame_DmiProxy", // altname
  -1, // altnamehashCode
  MDIParentFrame_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_args,
  0, // argumentCount
  0, // excpetions,
  MDIParentFrame_DmiProxy::_MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MDIParentFrame_methods[] = 
{
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I_in_acdk_lang_String,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size,
  &MDIParentFrame_DmiProxy_methods__MDIParentFrame_in_acdk_wx_Window_I_in_acdk_lang_String_in_acdk_wx_Point_in_acdk_wx_Size_I,
  0
};

::acdk::lang::dmi::ClazzInfo* MDIParentFrame_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MDIParentFrame_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MDIParentFrame_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MDIParentFrame_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MDIParentFrame_DmiProxy(MDIParentFrame_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class MemoryDC_DmiProxy
: extends MemoryDC
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MemoryDC)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MemoryDC::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, MemoryDC)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MemoryDC_DmiProxy()
  : MemoryDC()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  MemoryDC_DmiProxy(IN(::acdk::wx::RDC) dc)
  : MemoryDC(dc)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void beginDrawing()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[1]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::beginDrawing();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("beginDrawing", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void clear()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[14]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::clear();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clear", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void destroyClippingRegion()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[17]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::destroyClippingRegion();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("destroyClippingRegion", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void drawLabel(IN(::acdk::lang::RString) text, IN(::acdk::wx::RBitmap) image, IN(::acdk::wx::RRect) rect, int alignment, int indexAccel)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[41]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::drawLabel(text, image, rect, alignment, indexAccel);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(5);
    __acdk_args[0] = ::acdk::lang::inOf(text);
    __acdk_args[1] = ::acdk::lang::inOf(image);
    __acdk_args[2] = ::acdk::lang::inOf(rect);
    __acdk_args[3] = ::acdk::lang::inOf(alignment);
    __acdk_args[4] = ::acdk::lang::inOf(indexAccel);
    _dmiProxyGetTarget()->standardDispatch("drawLabel", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void endDoc()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[68]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::endDoc();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("endDoc", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void endDrawing()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[69]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::endDrawing();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("endDrawing", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void endPage()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[70]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::endPage();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("endPage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void getLogicalScale(OUT(double) x, OUT(double) y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[89]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::getLogicalScale(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::outOf(x);
    __acdk_args[1] = ::acdk::lang::outOf(y);
    _dmiProxyGetTarget()->standardDispatch("getLogicalScale", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void getUserScale(OUT(double) x, OUT(double) y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[101]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::getUserScale(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::outOf(x);
    __acdk_args[1] = ::acdk::lang::outOf(y);
    _dmiProxyGetTarget()->standardDispatch("getUserScale", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setAxisOrientation(bool xLeftRight, bool yBottomUp)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[112]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setAxisOrientation(xLeftRight, yBottomUp);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(xLeftRight);
    __acdk_args[1] = ::acdk::lang::inOf(yBottomUp);
    _dmiProxyGetTarget()->standardDispatch("setAxisOrientation", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setBackground(IN(::acdk::wx::RBrush) brush)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[113]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setBackground(brush);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(brush);
    _dmiProxyGetTarget()->standardDispatch("setBackground", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setBackgroundMode(int mode)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[114]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setBackgroundMode(mode);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(mode);
    _dmiProxyGetTarget()->standardDispatch("setBackgroundMode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setBrush(IN(::acdk::wx::RBrush) brush)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[115]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setBrush(brush);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(brush);
    _dmiProxyGetTarget()->standardDispatch("setBrush", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setDeviceOrigin(int x, int y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[120]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setDeviceOrigin(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("setDeviceOrigin", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setFont(IN(::acdk::wx::RFont) font)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[121]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setFont(font);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(font);
    _dmiProxyGetTarget()->standardDispatch("setFont", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setLogicalFunction(int function)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[122]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setLogicalFunction(function);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(function);
    _dmiProxyGetTarget()->standardDispatch("setLogicalFunction", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setLogicalOrigin(int x, int y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[123]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setLogicalOrigin(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("setLogicalOrigin", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setLogicalScale(double x, double y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[124]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setLogicalScale(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("setLogicalScale", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setMapMode(int mode)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[125]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setMapMode(mode);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(mode);
    _dmiProxyGetTarget()->standardDispatch("setMapMode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setPen(IN(::acdk::wx::RPen) pen)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[126]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setPen(pen);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(pen);
    _dmiProxyGetTarget()->standardDispatch("setPen", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setUserScale(double x, double y)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[129]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::setUserScale(x, y);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(x);
    __acdk_args[1] = ::acdk::lang::inOf(y);
    _dmiProxyGetTarget()->standardDispatch("setUserScale", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool startDoc(IN(::acdk::lang::RString) message)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[130]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::startDoc(message);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(message);
    _dmiProxyGetTarget()->standardDispatch("startDoc", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void startPage()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, DC)::clazzInfo()->methods[131]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::startPage();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("startPage", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MemoryDC)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MemoryDC_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MemoryDC_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MemoryDC_in_acdk_wx_DC_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MemoryDC_DmiProxy((::acdk::wx::RDC)args[0].getObjectVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MemoryDC_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MemoryDC::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MemoryDC_DmiProxy_interfaces[] =
{
  &MemoryDC_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MemoryDC_methods__MemoryDC_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MemoryDC_DmiProxy_methods__MemoryDC = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MemoryDC_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MemoryDC::clazzInfo(), // returnType
  "_0_MemoryDC_DmiProxy", // altname
  -1, // altnamehashCode
  MemoryDC_methods__MemoryDC_args,
  0, // argumentCount
  0, // excpetions,
  MemoryDC_DmiProxy::_MemoryDC_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo MemoryDC_DmiProxy_methods__MemoryDC_in_acdk_wx_DC_arg_dc =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "dc",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::wx::DC::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo* MemoryDC_methods__MemoryDC_in_acdk_wx_DC_args[] = 
{
  &MemoryDC_DmiProxy_methods__MemoryDC_in_acdk_wx_DC_arg_dc,
  0
};

::acdk::lang::dmi::ClazzMethodInfo MemoryDC_DmiProxy_methods__MemoryDC_in_acdk_wx_DC = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MemoryDC_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MemoryDC::clazzInfo(), // returnType
  "_1_MemoryDC_DmiProxy", // altname
  -1, // altnamehashCode
  MemoryDC_methods__MemoryDC_in_acdk_wx_DC_args,
  0, // argumentCount
  0, // excpetions,
  MemoryDC_DmiProxy::_MemoryDC_in_acdk_wx_DC_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MemoryDC_methods[] = 
{
  &MemoryDC_DmiProxy_methods__MemoryDC,
  &MemoryDC_DmiProxy_methods__MemoryDC_in_acdk_wx_DC,
  0
};

::acdk::lang::dmi::ClazzInfo* MemoryDC_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MemoryDC_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MemoryDC_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MemoryDC_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MemoryDC_DmiProxy(MemoryDC_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class Menu_DmiProxy
: extends Menu
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(Menu)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  Menu::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, Menu)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  Menu_DmiProxy(int style)
  : Menu(style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Menu_DmiProxy()
  : Menu()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  Menu_DmiProxy(IN(::acdk::lang::RString) name, int style)
  : Menu(name, style)
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void attach(IN(::acdk::wx::RMenuBar) menubar)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clazzInfo()->methods[18]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::attach(menubar);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(menubar);
    _dmiProxyGetTarget()->standardDispatch("attach", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void detach()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clazzInfo()->methods[24]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::detach();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("detach", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int findItem(IN(::acdk::lang::RString) item)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clazzInfo()->methods[26]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::findItem(item);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(item);
    _dmiProxyGetTarget()->standardDispatch("findItem", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString getHelpString(int id)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clazzInfo()->methods[28]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::getHelpString(id);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(id);
    _dmiProxyGetTarget()->standardDispatch("getHelpString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  void insertBreak()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clazzInfo()->methods[42]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::insertBreak();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("insertBreak", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setHelpString(int id, IN(::acdk::lang::RString) helpString)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clazzInfo()->methods[65]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::setHelpString(id, helpString);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(id);
    __acdk_args[1] = ::acdk::lang::inOf(helpString);
    _dmiProxyGetTarget()->standardDispatch("setHelpString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void setTitle(IN(::acdk::lang::RString) title)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clazzInfo()->methods[69]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::setTitle(title);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(title);
    _dmiProxyGetTarget()->standardDispatch("setTitle", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Menu)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Menu_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Menu_DmiProxy(args[0].getIntVar());
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Menu_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Menu_DmiProxy();
    return methinf;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _Menu_in_acdk_lang_String_I_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new Menu_DmiProxy((::acdk::lang::RString)args[0].getObjectVar(), args[1].getIntVar());
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo Menu_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  Menu::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _Menu_DmiProxy_interfaces[] =
{
  &Menu_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo Menu_DmiProxy_methods__Menu_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiHasDefaultInit,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Menu_methods__Menu_I_args[] = 
{
  &Menu_DmiProxy_methods__Menu_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Menu_DmiProxy_methods__Menu_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Menu_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Menu::clazzInfo(), // returnType
  "_0_Menu_DmiProxy", // altname
  -1, // altnamehashCode
  Menu_methods__Menu_I_args,
  0, // argumentCount
  0, // excpetions,
  Menu_DmiProxy::_Menu_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo* Menu_methods__Menu_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo Menu_DmiProxy_methods__Menu = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor,
  0, //AttributesRes
  "Menu_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Menu::clazzInfo(), // returnType
  "_1_Menu_DmiProxy", // altname
  -1, // altnamehashCode
  Menu_methods__Menu_args,
  0, // argumentCount
  0, // excpetions,
  Menu_DmiProxy::_Menu_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodArgInfo Menu_DmiProxy_methods__Menu_in_acdk_lang_String_I_arg_name =
{
  ::acdk::lang::dmi::MiMethodArgInfo | ::acdk::lang::dmi::MiAiIn,
  0, //AttributesRes
  "name",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::String::clazzInfo()
};

::acdk::lang::dmi::ClazzMethodArgInfo Menu_DmiProxy_methods__Menu_in_acdk_lang_String_I_arg_style =
{
  ::acdk::lang::dmi::MiMethodArgInfo,
  0, //AttributesRes
  "style",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextSibling
  ::acdk::lang::dmi::ClazzInfo::getIntClazz()
};

::acdk::lang::dmi::ClazzMethodArgInfo* Menu_methods__Menu_in_acdk_lang_String_I_args[] = 
{
  &Menu_DmiProxy_methods__Menu_in_acdk_lang_String_I_arg_name,
  &Menu_DmiProxy_methods__Menu_in_acdk_lang_String_I_arg_style,
  0
};

::acdk::lang::dmi::ClazzMethodInfo Menu_DmiProxy_methods__Menu_in_acdk_lang_String_I = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "Menu_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  Menu::clazzInfo(), // returnType
  "_2_Menu_DmiProxy", // altname
  -1, // altnamehashCode
  Menu_methods__Menu_in_acdk_lang_String_I_args,
  0, // argumentCount
  0, // excpetions,
  Menu_DmiProxy::_Menu_in_acdk_lang_String_I_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* Menu_methods[] = 
{
  &Menu_DmiProxy_methods__Menu_I,
  &Menu_DmiProxy_methods__Menu,
  &Menu_DmiProxy_methods__Menu_in_acdk_lang_String_I,
  0
};

::acdk::lang::dmi::ClazzInfo* Menu_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "Menu_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _Menu_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     Menu_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_Menu_DmiProxy(Menu_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx


namespace acdk { 
namespace wx { 

class MenuBar_DmiProxy
: extends MenuBar
, implements ::acdk::lang::dmi::DmiProxyBase
{
  ACDK_PROXY_WITH_METAINFO(MenuBar)
public:
  ::acdk::lang::Object* _cast(const ::acdk::lang::dmi::ClazzInfo* ci)
  {
    ::acdk::lang::Object* ret = _dmiProxyCast(ci);
    if (ret != 0)
      return ret;
    ret =  MenuBar::_cast(ci);
    return ret;
  }
  virtual void getCollectableFields(FieldReferences& fields)
  {
    ACDK_FQ_SUPER_QUALIFIER(acdk::wx::, MenuBar)::getCollectableFields(fields);
    fields.push_back((::acdk::lang::RObject*)_dmiTarget._ref_this());
  }
  virtual bool _gc_releaseRef(bool force = false) const { return ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_gc_releaseRef(this); }
  ::acdk::lang::Object* getDmiTarget(bool& forwarded, const ::acdk::lang::dmi::ClazzInfo*& ci) { return _dmiProxygetDmiTarget(forwarded, ci); }
  MenuBar_DmiProxy()
  : MenuBar()
  {
     clazzInfo()->_resolveSupers(true, false);
     ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::dmi::, DmiProxyBase)::_initThis(this);
  }
  void enableTop(int pos, bool flag)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::clazzInfo()->methods[3]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::enableTop(pos, flag);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    __acdk_args[1] = ::acdk::lang::inOf(flag);
    _dmiProxyGetTarget()->standardDispatch("enableTop", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RString getLabelTop(int pos)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::getLabelTop(pos);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    _dmiProxyGetTarget()->standardDispatch("getLabelTop", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  bool insert(int pos, IN(::acdk::wx::RMenu) menu, IN(::acdk::lang::RString) title)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::clazzInfo()->methods[5]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::insert(pos, menu, title);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    __acdk_args[1] = ::acdk::lang::inOf(menu);
    __acdk_args[2] = ::acdk::lang::inOf(title);
    _dmiProxyGetTarget()->standardDispatch("insert", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::wx::RMenu remove(int pos)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::remove(pos);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    _dmiProxyGetTarget()->standardDispatch("remove", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RMenu)(::acdk::lang::RObject)__acdk_retval;
  }
  ::acdk::wx::RMenu replace(int pos, IN(::acdk::wx::RMenu) menu, IN(::acdk::lang::RString) title)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::clazzInfo()->methods[7]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::replace(pos, menu, title);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(3);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    __acdk_args[1] = ::acdk::lang::inOf(menu);
    __acdk_args[2] = ::acdk::lang::inOf(title);
    _dmiProxyGetTarget()->standardDispatch("replace", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::wx::RMenu)(::acdk::lang::RObject)__acdk_retval;
  }
  void setLabelTop(int pos, IN(::acdk::lang::RString) label)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::clazzInfo()->methods[8]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::setLabelTop(pos, label);
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(2);
    __acdk_args[0] = ::acdk::lang::inOf(pos);
    __acdk_args[1] = ::acdk::lang::inOf(label);
    _dmiProxyGetTarget()->standardDispatch("setLabelTop", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  void SetFocusFromKbd()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[2]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::SetFocusFromKbd();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("SetFocusFromKbd", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  int getWindowStyleFlag()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[86]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::getWindowStyleFlag();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getWindowStyleFlag", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool setCursor(IN(::acdk::wx::RCursor) cursor)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, Window)::clazzInfo()->methods[148]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::setCursor(cursor);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(cursor);
    _dmiProxyGetTarget()->standardDispatch("setCursor", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool processEvent(IN(::acdk::wx::REvent) event)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, EvtHandler)::clazzInfo()->methods[12]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::processEvent(event);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(event);
    _dmiProxyGetTarget()->standardDispatch("processEvent", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RObject clone()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[3]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::clone();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("clone", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RObject)(::acdk::lang::RObject)__acdk_retval;
  }
  int compareTo(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[4]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::compareTo(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("compareTo", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  bool equals(IN(::acdk::lang::RObject) o)
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[6]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::equals(o);
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(1);
    __acdk_args[0] = ::acdk::lang::inOf(o);
    _dmiProxyGetTarget()->standardDispatch("equals", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  void finalize()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[7]) == false)
    {
      ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::finalize();
      return;
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("finalize", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
  }
  ::acdk::lang::RClass getClass()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[8]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::getClass();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("getClass", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RClass)(::acdk::lang::RObject)__acdk_retval;
  }
  int hashCode()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[9]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::hashCode();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("hashCode", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return __acdk_retval;
  }
  ::acdk::lang::RString toString()
  {
    if (_dmiProxyIsOverloaded(getClazzInfo(), ACDK_FQ_SUPER_QUALIFIER(::acdk::lang::, Object)::clazzInfo()->methods[15]) == false)
    {
      return ACDK_FQ_SUPER_QUALIFIER(::acdk::wx::, MenuBar)::toString();
    }
    ::acdk::lang::dmi::ScriptVar __acdk_retval;
    ::acdk::lang::dmi::ScriptVarArray __acdk_args(0);
    _dmiProxyGetTarget()->standardDispatch("toString", __acdk_retval, __acdk_args, _dmiClient, Nil, 0, _dmiProxyGetTarget()->clazzInfo(), 0);
    return (::acdk::lang::RString)(::acdk::lang::RObject)__acdk_retval;
  }
  static const ::acdk::lang::dmi::ClazzMethodInfo*
  _MenuBar_dispatch(::acdk::lang::Object* This_, IN(::acdk::lang::RString) fname, ::acdk::lang::dmi::ScriptVar& ret, ::acdk::lang::dmi::ScriptVarArray& args, ::acdk::lang::dmi::DmiClient& dc, IN(::acdk::lang::RStringArray) namedArgs, int flags, const ::acdk::lang::dmi::ClazzInfo* clazzinfo, const ::acdk::lang::dmi::ClazzMethodInfo* methinf)
  {
    ret = (::acdk::lang::RObject) new MenuBar_DmiProxy();
    return methinf;
  }
};

::acdk::lang::dmi::ClazzSuperInfo MenuBar_DmiProxy_super =
{
  ::acdk::lang::dmi::MiPublic,
  0, //AttributesRes
  MenuBar::clazzInfo()
};

::acdk::lang::dmi::ClazzSuperInfo* _MenuBar_DmiProxy_interfaces[] =
{
  &MenuBar_DmiProxy_super,
  0
};

::acdk::lang::dmi::ClazzMethodArgInfo* MenuBar_methods__MenuBar_args[] = 
{
  0
};

::acdk::lang::dmi::ClazzMethodInfo MenuBar_DmiProxy_methods__MenuBar = 
{
  ::acdk::lang::dmi::MiPublic | ::acdk::lang::dmi::MiMethodInfo | ::acdk::lang::dmi::MiMiConstructor | ::acdk::lang::dmi::MiMiOrgPoly,
  0, //AttributesRes
  "MenuBar_DmiProxy",
  -1, // hashCode
  "", // ns
  0, // _scopeParent
  0, // _nextScopeSibling
  MenuBar::clazzInfo(), // returnType
  "_0_MenuBar_DmiProxy", // altname
  -1, // altnamehashCode
  MenuBar_methods__MenuBar_args,
  0, // argumentCount
  0, // excpetions,
  MenuBar_DmiProxy::_MenuBar_dispatch,
  ::acdk::lang::dmi::ClazzMethodInfo::DefaultDispatchThrowableFunc, 
  0 // cached methodhash
};

::acdk::lang::dmi::ClazzMethodInfo* MenuBar_methods[] = 
{
  &MenuBar_DmiProxy_methods__MenuBar,
  0
};

::acdk::lang::dmi::ClazzInfo* MenuBar_DmiProxy::clazzInfo()
{
static ::acdk::lang::dmi::ClazzInfo _clazzInfo =
  {
    ::acdk::lang::dmi::MiClazzInfo | ::acdk::lang::dmi::MiResolved, // clazz-flags
    0, //AttributesRes
    "MenuBar_DmiProxy", // name of class
  -1, // hashCode
    "acdk/wx", // the namespace
     0, // _scopeParent
     0, // _nextSibling
     0, // type
     0, // _firstChild
     _MenuBar_DmiProxy_interfaces, // pointer to Array of ClazzInfo references
     0, // count of Super / Interfaces
     0, // pointer to Array of fields
     0, // count of Fields
     MenuBar_methods, // pointer to Array of Methods
     0, // count of Methods
     0, // create-function for cloning/serializing
     0, // create-function for cloning/serializing arrays
     0, // create-function for cloning/serializing arrays
     0, // Class* thisClass; chaching instance
     0, // jlong serialVersionUID; for serialization
     ::acdk::lang::dmi::StdDispatch::_invoke_dynamic, // dynamic_dispatch
     ::acdk::lang::dmi::StdDispatch::_invoke_static, // static_dispatch
     0, // count off all collectable members in this class
     0, // user defined info
     0 // next ClazzInfo in chain
  };
  static ::acdk::lang::dmi::RegisterClazzInfo _register_clazzInfo(&_clazzInfo);
  return &_clazzInfo;
};
static ::acdk::lang::dmi::RegisterClazzInfo _register_MenuBar_DmiProxy(MenuBar_DmiProxy::clazzInfo());


} // namespace acdk
} // namespace wx

